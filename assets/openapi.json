{
  "openapi" : "3.0.1",
  "info" : {
    "contact" : {
      "email" : "developer@rhombussystems.com"
    },
    "description" : "This API is for use by Rhombus developers.",
    "title" : "Rhombus ITG API",
    "version" : "1.0"
  },
  "servers" : [ {
    "description" : "Development Server",
    "url" : "https://api2.itg.rhombussystems.com"
  } ],
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ],
  "tags" : [ {
    "description" : "Service for managing access control PINs",
    "name" : "Access Control PIN Webservice"
  }, {
    "description" : "Service for managing access control systems",
    "name" : "Access Control Webservice"
  }, {
    "description" : "Service for managing badge template",
    "name" : "Badge Template Webservice"
  }, {
    "description" : "Service for managing door schedule exceptions",
    "name" : "Door Schedule Exception Webservice"
  }, {
    "description" : "Service for managing location/door first-in settings",
    "name" : "First In Settings Webservice"
  }, {
    "description" : "Service for managing lockdown plans",
    "name" : "Lockdown Plan Webservice"
  }, {
    "description" : "Service for managing alert monitoring PINs",
    "name" : "Alert Monitoring PIN Webservice"
  }, {
    "description" : "Service for monitoring alerts, creating threat cases and alarms",
    "name" : "Alert Monitoring Webservice"
  }, {
    "description" : "Service for managing audio gateways",
    "name" : "AudioGateway Webservice"
  }, {
    "description" : "Service for managing uploaded audio clips and playback",
    "name" : "Audio Playback Webservice"
  }, {
    "description" : "Interacting with badge readers",
    "name" : "Badge Reader Webservice"
  }, {
    "description" : "Interacting with Bluetooth Channel",
    "name" : "BLE Webservice"
  }, {
    "description" : "Service for managing button sensors",
    "name" : "Button Webservice"
  }, {
    "description" : "Interacting with cameras",
    "name" : "Camera Webservice"
  }, {
    "description" : "Service for interacting with Rhombus MIND",
    "name" : "Chatbot Webservice"
  }, {
    "description" : "Service for managing environmental sensors",
    "name" : "Climate Webservice"
  }, {
    "description" : "Service for managing components used by various devices",
    "name" : "Component Webservice"
  }, {
    "description" : "Managing account-wide information",
    "name" : "Customer Webservice"
  }, {
    "description" : "Service for external Developers",
    "name" : "Developer Webservice"
  }, {
    "description" : "Interacting with device configs",
    "name" : "Device Config Webservice"
  }, {
    "description" : "Service for managing door sensors",
    "name" : "Door Webservice"
  }, {
    "description" : "Interacting with doorbell cameras",
    "name" : "Doorbell Camera Webservice"
  }, {
    "description" : "Interacting with door controllers",
    "name" : "Door Controller Webservice"
  }, {
    "description" : "Service for managing Ethernet Testers",
    "name" : "Ethernet Tester Webservice"
  }, {
    "description" : "Service for managing camera-generated events and alerts",
    "name" : "Event Webservice"
  }, {
    "description" : "Service for managing searching normal events and access control events",
    "name" : "Event Search Webservice"
  }, {
    "description" : "Service for exporting CSV reports",
    "name" : "Export Webservice"
  }, {
    "description" : "Service for managing device features",
    "name" : "Feature Webservice"
  }, {
    "description" : "Service for managing guest interactions.",
    "name" : "Guest Management Webservice"
  }, {
    "description" : "Service for customers to get help",
    "name" : "Help Webservice"
  }, {
    "description" : "Service for managing third-party access control related integrations.",
    "name" : "Access Control Integrations Webservice"
  }, {
    "description" : "Service for updating guests by external form",
    "name" : "GuestToken Webservice"
  }, {
    "description" : "Service for managing third-party incident management integrations.",
    "name" : "Incident Management Integrations Webservice"
  }, {
    "description" : "Service for managing third-party integrations.",
    "name" : "Integrations Webservice"
  }, {
    "description" : "Service for managing third-party IoT integrations.",
    "name" : "IoT Integrations Webservice"
  }, {
    "description" : "Service for managing third-party integrations per org.",
    "name" : "Org Integrations Webservice"
  }, {
    "description" : "Service for managing third-party service management related integrations.",
    "name" : "Service Management Integrations Webservice"
  }, {
    "description" : "Service for managing third-party data storage related integrations.",
    "name" : "Storage Integrations Webservice"
  }, {
    "description" : "Service for managing third-party webhook related integrations.",
    "name" : "Webhook Integrations Webservice"
  }, {
    "description" : "Service for managing the Aperio integration",
    "name" : "Aperio Webservice"
  }, {
    "description" : "Service for managing invoices",
    "name" : "Invoice Webservice"
  }, {
    "description" : "Service for managing alarm monitoring keypads",
    "name" : "Alarm Monitoring Keypad Webservice"
  }, {
    "description" : "Service for managing guest management kiosks",
    "name" : "Guest Management Kiosk Webservice"
  }, {
    "description" : "Service for managing licenses.",
    "name" : "License Webservice"
  }, {
    "description" : "Service for managing license catalog items.",
    "name" : "License Catalog Webservice"
  }, {
    "description" : "Service for managing claim keys.",
    "name" : "License ClaimKey Webservice"
  }, {
    "description" : "Service for managing locations",
    "name" : "Location Webservice"
  }, {
    "description" : "Service for lookup shipping information",
    "name" : "Logistics Webservice"
  }, {
    "description" : "Interacting with generic media devices.",
    "name" : "Media Device Webservice"
  }, {
    "description" : "Service for managing account metrics",
    "name" : "Metric Webservice"
  }, {
    "description" : "Mobile session related stuff",
    "name" : "Mobile Webservice"
  }, {
    "description" : "Custom model management for devices",
    "name" : "Modular AI Webservice"
  }, {
    "description" : "manage device network configuration",
    "name" : "Network Webservice"
  }, {
    "description" : "Service for managing oauth application and tokens",
    "name" : "OAuth Webservice"
  }, {
    "description" : "Service for managing occupancy sensors",
    "name" : "Occupancy Webservice"
  }, {
    "description" : "Service for managing organization-wide settings",
    "name" : "Org Webservice"
  }, {
    "description" : "Service for Partners to manage their clients",
    "name" : "Partner Webservice"
  }, {
    "description" : "Service for resetting user passwords",
    "name" : "Password Webservice"
  }, {
    "description" : "Service for manaing user roles and permissions",
    "name" : "Permission Webservice"
  }, {
    "description" : "Service for managing camera notification policies",
    "name" : "Policy Webservice"
  }, {
    "description" : "Service for managing proximity tags",
    "name" : "Proximity Webservice"
  }, {
    "description" : "Service for managing RapidSOS service",
    "name" : "RapidSOS Webservice"
  }, {
    "description" : "Interacting with Relays",
    "name" : "Relay Webservice"
  }, {
    "description" : "Methods for importing third party cameras",
    "name" : "Third Party Camera Import Webservice"
  }, {
    "description" : "Service for viewing aggregated reports",
    "name" : "Report Webservice"
  }, {
    "description" : "Service for managing rules",
    "name" : "Rules Webservice"
  }, {
    "description" : "Service for managing historical rules event records",
    "name" : "Rules Records Webservice"
  }, {
    "description" : "Service for managing scheduled scene queries",
    "name" : "Scene Query Webservice"
  }, {
    "description" : "Service for managing schedules",
    "name" : "Schedule Webservice"
  }, {
    "description" : "Service for searching indexed video content",
    "name" : "Search Webservice"
  }, {
    "description" : "Service for managing sensor metadata",
    "name" : "Sensor Webservice"
  }, {
    "description" : "Service for managing externally shared content",
    "name" : "Share Webservice"
  }, {
    "description" : "Service for Customers to manage their various Support Providers and Partners",
    "name" : "Support Authority Webservice"
  }, {
    "description" : "Service for managing tvOs clients",
    "name" : "TvOs Config Webservice"
  }, {
    "description" : "Service for uploading multi-part data",
    "name" : "Upload Webservice"
  }, {
    "description" : "Service for importing users",
    "name" : "User Import Webservice"
  }, {
    "description" : "Service for managing individual users",
    "name" : "User Webservice"
  }, {
    "description" : "Service for managing custom org level user metadata fields",
    "name" : "User Metadata Webservice"
  }, {
    "description" : "Service for managing vehicle recognition.",
    "name" : "Vehicle Webservice"
  }, {
    "description" : "Service for post-processing video",
    "name" : "Video Webservice"
  } ],
  "paths" : {
    "/api/accesscontrol/addUsersToAccessControlGroup" : {
      "post" : {
        "description" : "Adds specified users to an access control group",
        "operationId" : "addUsersToAccessControlGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_AddUsersToOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_AddUsersToOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/assignAccessControlCredential" : {
      "post" : {
        "description" : "Assign a currently unassigned credential to a user",
        "operationId" : "assignAccessControlCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_AssignAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_AssignAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/badgeTemplate/createBadgeTemplate" : {
      "post" : {
        "description" : "Create a badge template",
        "operationId" : "createBadgeTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_CreateBadgeTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_CreateBadgeTemplateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Template Webservice" ]
      }
    },
    "/api/accesscontrol/badgeTemplate/deleteBadgeTemplate" : {
      "post" : {
        "description" : "Delete a badge template",
        "operationId" : "deleteBadgeTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_DeleteBadgeTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_DeleteBadgeTemplateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Template Webservice" ]
      }
    },
    "/api/accesscontrol/badgeTemplate/deleteBadgeTemplateImage" : {
      "post" : {
        "description" : "Deletes the stored image and metadata document. Prevented if any badge template refers to the image.",
        "operationId" : "deleteBadgeTemplateImage",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_DeleteBadgeTemplateImageWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_DeleteBadgeTemplateImageWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Template Webservice" ]
      }
    },
    "/api/accesscontrol/badgeTemplate/findBadgeTemplateImages" : {
      "post" : {
        "description" : "Finds metadata for all images uploaded for use with badge template configuration",
        "operationId" : "findBadgeTemplateImages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_FindBadgeTemplateImagesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_FindBadgeTemplateImagesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Template Webservice" ]
      }
    },
    "/api/accesscontrol/badgeTemplate/findBadgeTemplates" : {
      "post" : {
        "description" : "Find badge templates in the org",
        "operationId" : "findBadgeTemplates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_FindBadgeTemplatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_FindBadgeTemplatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Template Webservice" ]
      }
    },
    "/api/accesscontrol/badgeTemplate/getBadgeTemplate" : {
      "post" : {
        "description" : "Retrieve a badge template",
        "operationId" : "getBadgeTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_GetBadgeTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_GetBadgeTemplateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Template Webservice" ]
      }
    },
    "/api/accesscontrol/badgeTemplate/getBadgeTemplateImage" : {
      "post" : {
        "description" : "Get the metadata for a specific badge template image",
        "operationId" : "getBadgeTemplateImage",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_GetBadgeTemplateImageWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_GetBadgeTemplateImageWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Template Webservice" ]
      }
    },
    "/api/accesscontrol/badgeTemplate/updateBadgeTemplate" : {
      "post" : {
        "description" : "Update a badge template",
        "operationId" : "updateBadgeTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_UpdateBadgeTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_UpdateBadgeTemplateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Template Webservice" ]
      }
    },
    "/api/accesscontrol/badgeTemplate/updateBadgeTemplateImage" : {
      "post" : {
        "description" : "Update the metadata for a badge template image",
        "operationId" : "updateBadgeTemplateImage",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_UpdateBadgeTemplateImageWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_badgetemplate_UpdateBadgeTemplateImageWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Template Webservice" ]
      }
    },
    "/api/accesscontrol/createAccessControlCredentialByHexValueAndType" : {
      "post" : {
        "description" : "Create a credential based on a hex value and credential type. Useful if you see an unauthorized badge event, know its type and want to import it",
        "operationId" : "createAccessControlCredentialByHexValueAndType",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createAccessControlGroup" : {
      "post" : {
        "description" : "Creates an access control group",
        "operationId" : "createAccessControlGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_CreateOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_CreateOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createAccessGrant" : {
      "post" : {
        "description" : "Create a location access grant",
        "operationId" : "createAccessGrant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_CreateAccessGrantWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_CreateAccessGrantWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createAccessRevocation" : {
      "post" : {
        "description" : "Create a location access revocation",
        "operationId" : "createAccessRevocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_CreateAccessRevocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_CreateAccessRevocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createAppleWalletPass" : {
      "post" : {
        "description" : "Get credentials to generate Apple Wallet pass for user",
        "operationId" : "createAppleWalletPass",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateAppleWalletPassWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/vnd.apple.pkpass" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateAppleWalletPassWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createRhombusSecureCsnCredential" : {
      "post" : {
        "description" : "Create a rhombus secure csn credential (Rhombus Badge)",
        "operationId" : "createRhombusSecureCsnCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createStandardCsnCredential" : {
      "post" : {
        "description" : "Create a standard csn credential (Third Party Badge)",
        "operationId" : "createStandardCsnCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateStandardCsnCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateStandardCsnCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegand64BitRawCredential" : {
      "post" : {
        "description" : "Create a 64bit raw wiegand credential. Used when an explicit endpoint for the wiegand format is not otherwise defined.",
        "operationId" : "createWiegand64BitRawCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegandCredential" : {
      "post" : {
        "deprecated" : true,
        "description" : "Create a wiegand credential",
        "operationId" : "createWiegandCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegandD10202Credential" : {
      "post" : {
        "description" : "Create a D10202 wiegand credential",
        "operationId" : "createWiegandD10202Credential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandD10202CredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandD10202CredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegandH10301Credential" : {
      "post" : {
        "description" : "Create a H10301 wiegand credential",
        "operationId" : "createWiegandH10301Credential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandH10301CredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandH10301CredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegandH10304Credential" : {
      "post" : {
        "description" : "Create a H10304 wiegand credential",
        "operationId" : "createWiegandH10304Credential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandH10304CredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandH10304CredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteAccessControlCredential" : {
      "post" : {
        "description" : "Delete an access control credential. It is recommended to revoke a credential rather than delete it to preserve credential history",
        "operationId" : "deleteAccessControlCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_DeleteAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_DeleteAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteAccessControlGroup" : {
      "post" : {
        "description" : "Delete an access control group",
        "operationId" : "deleteAccessControlGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_DeleteOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_DeleteOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteLocationAccessGrant" : {
      "post" : {
        "description" : "Deletes a location access grant",
        "operationId" : "deleteLocationAccessGrant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_DeleteLocationAccessGrantWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_DeleteLocationAccessGrantWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteLocationAccessRevocation" : {
      "post" : {
        "description" : "Deletes a location access revocation",
        "operationId" : "deleteLocationAccessRevocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteUnassignedAccessControlCredential" : {
      "post" : {
        "description" : "Delete an unassigned access control credential. The credential must be unassigned (revoked) before this method can be called. History of the credential is maintained but it will no longer be returned as an unassigned credential.",
        "operationId" : "deleteUnassignedAccessControlCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/doorScheduleException/createExceptionV2" : {
      "post" : {
        "description" : "Create a door schedule exception",
        "operationId" : "createExceptionV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_doorexception_CreateDoorScheduleExceptionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_doorexception_CreateDoorScheduleExceptionWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Schedule Exception Webservice" ]
      }
    },
    "/api/accesscontrol/doorScheduleException/deleteExceptionV2" : {
      "post" : {
        "description" : "Delete door schedule exception",
        "operationId" : "deleteExceptionV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_doorexception_DeleteDoorScheduleExceptionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_doorexception_DeleteDoorScheduleExceptionWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Schedule Exception Webservice" ]
      }
    },
    "/api/accesscontrol/doorScheduleException/findExceptionsForDoor" : {
      "post" : {
        "description" : "Find door schedule exceptions for a specific door",
        "operationId" : "findExceptionsForDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_doorexception_FindDoorScheduleExceptionsForDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_doorexception_FindDoorScheduleExceptionsForDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Schedule Exception Webservice" ]
      }
    },
    "/api/accesscontrol/doorScheduleException/findExceptionsForLocationV2" : {
      "post" : {
        "description" : "Find door schedule exceptions for a specific location",
        "operationId" : "findExceptionsForLocationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_doorexception_FindDoorScheduleExceptionsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_doorexception_FindDoorScheduleExceptionsForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Schedule Exception Webservice" ]
      }
    },
    "/api/accesscontrol/doorScheduleException/findExceptionsV2" : {
      "post" : {
        "description" : "Find door schedule exceptions",
        "operationId" : "findExceptionsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_doorexception_FindDoorScheduleExceptionsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_doorexception_FindDoorScheduleExceptionsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Schedule Exception Webservice" ]
      }
    },
    "/api/accesscontrol/doorScheduleException/getExceptionV2" : {
      "post" : {
        "description" : "Get a door schedule exception",
        "operationId" : "getExceptionV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_doorexception_GetDoorScheduleExceptionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_doorexception_GetDoorScheduleExceptionWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Schedule Exception Webservice" ]
      }
    },
    "/api/accesscontrol/doorScheduleException/updateExceptionV2" : {
      "post" : {
        "description" : "Update door schedule exception",
        "operationId" : "updateExceptionV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_doorexception_UpdateDoorScheduleExceptionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_doorexception_UpdateDoorScheduleExceptionWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Schedule Exception Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlCredentialByOrg" : {
      "post" : {
        "description" : "Find all access control credentials in the org",
        "operationId" : "findAccessControlCredentialByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlCredentialByUser" : {
      "post" : {
        "description" : "Find all access control credentials for the specified user",
        "operationId" : "findAccessControlCredentialByUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlCredentialByUsers" : {
      "post" : {
        "description" : "Find all access control credentials for the specified users",
        "operationId" : "findAccessControlCredentialByUsers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByUsersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByUsersWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupByExactName" : {
      "post" : {
        "description" : "Retrieve the access control group with the specified name",
        "operationId" : "findAccessControlGroupByExactName",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByExactNameWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByExactNameWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupMembershipsByUser" : {
      "post" : {
        "description" : "Find all access control group memberships by user",
        "operationId" : "findAccessControlGroupMembershipsByUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupMembershipsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupMembershipsByUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupMembershipsForCurrentUser" : {
      "post" : {
        "description" : "Find all access control group memberships for the current Rhombus Key user",
        "operationId" : "findAccessControlGroupMembershipsForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupMembershipsForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupMembershipsForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupsByNamePrefix" : {
      "post" : {
        "description" : "Retrieve all access control groups with a name starting with the specified prefix",
        "operationId" : "findAccessControlGroupsByNamePrefix",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByNamePrefixWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByNamePrefixWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupsByOrg" : {
      "post" : {
        "description" : "Retrieve all access control groups defined in the org",
        "operationId" : "findAccessControlGroupsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupsByUserMembership" : {
      "post" : {
        "description" : "Find all access control groups a user belongs to",
        "operationId" : "findAccessControlGroupsByUserMembership",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByUserMembershipWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByUserMembershipWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAllUsersForAccessControlGroup" : {
      "post" : {
        "description" : "Find all users belonging to an access control group",
        "operationId" : "findAllUsersForAccessControlGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindAllUsersForOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindAllUsersForOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findCredentialHistory" : {
      "post" : {
        "description" : "Retrieves all credential history belonging to an org",
        "operationId" : "findCredentialHistory",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findCredentialHistoryByCredentialHexValue" : {
      "post" : {
        "description" : "Retrieves all credentials that have owned the credential hex value. Expect at most 1 valid/active credential and the rest are revoked",
        "operationId" : "findCredentialHistoryByCredentialHexValue",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findCredentialHistoryByCredentialValue" : {
      "post" : {
        "description" : "Retrieves all credentials that have owned the credential value.",
        "operationId" : "findCredentialHistoryByCredentialValue",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findCredentialHistoryByUser" : {
      "post" : {
        "description" : "Retrieves all credentials both current and revoked that were at some point assigned to the specified user",
        "operationId" : "findCredentialHistoryByUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByAccessControlledDoor" : {
      "post" : {
        "description" : "Finds location access grants by the specified access controlled door",
        "operationId" : "findLocationAccessGrantsByAccessControlledDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByDoorLabel" : {
      "post" : {
        "description" : "Finds location access grants by the specified door label",
        "operationId" : "findLocationAccessGrantsByDoorLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByGroup" : {
      "post" : {
        "description" : "Finds location access grants by the specified group",
        "operationId" : "findLocationAccessGrantsByGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByLocation" : {
      "post" : {
        "description" : "Finds location access grants by the specified location",
        "operationId" : "findLocationAccessGrantsByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByLocationAndUser" : {
      "post" : {
        "description" : "Finds location access grants by the specified location and user",
        "operationId" : "findLocationAccessGrantsByLocationAndUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByOrg" : {
      "post" : {
        "description" : "Finds all location access grants in the org",
        "operationId" : "findLocationAccessGrantsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByUser" : {
      "post" : {
        "description" : "Finds location access grants by the specified user",
        "operationId" : "findLocationAccessGrantsByUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByAccessControlledDoor" : {
      "post" : {
        "description" : "Finds location access revocations by the specified access controlled door",
        "operationId" : "findLocationAccessRevocationsByAccessControlledDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByDoorLabel" : {
      "post" : {
        "description" : "Finds location access revocation by the specified door label",
        "operationId" : "findLocationAccessRevocationsByDoorLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByGroup" : {
      "post" : {
        "description" : "Finds location access revocations by the specified group",
        "operationId" : "findLocationAccessRevocationsByGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByOrg" : {
      "post" : {
        "description" : "Finds all location access revocations in the org",
        "operationId" : "findLocationAccessRevocationsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByUser" : {
      "post" : {
        "description" : "Finds location access revocations by the specified user",
        "operationId" : "findLocationAccessRevocationsByUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findRhombusSecureMobileCredentialsForCurrentUser" : {
      "post" : {
        "description" : "Find all rhombus secure mobile credentials for the current user",
        "operationId" : "findRhombusSecureMobileCredentialsForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindRhombusSecureMobileCredentialsForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindRhombusSecureMobileCredentialsForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findUnlockableAccessControlledDoorsByDevice" : {
      "post" : {
        "description" : "Retrieve basic details of unlockable access controlled doors for a device",
        "operationId" : "findUnlockableAccessControlledDoorsByDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_FindUnlockableAccessControlledDoorsByDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_FindUnlockableAccessControlledDoorsByDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/applyDoorAuthFirstInGroupState" : {
      "post" : {
        "description" : "Attempts to apply the specified first-in state to all doors belonging to the specified first-in settings",
        "operationId" : "applyDoorAuthFirstInGroupState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_ApplyDoorAuthFirstInGroupStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_ApplyDoorAuthFirstInGroupStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/applyDoorAuthFirstInState" : {
      "post" : {
        "description" : "Attempts to apply the specified first-in state to the specified door",
        "operationId" : "applyDoorAuthFirstInState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_ApplyDoorAuthFirstInStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_ApplyDoorAuthFirstInStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/applyDoorScheduleFirstInGroupState" : {
      "post" : {
        "description" : "Attempts to apply the specified first-in state to all doors belonging to the specified first-in settings",
        "operationId" : "applyDoorScheduleFirstInGroupState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_ApplyDoorScheduleFirstInGroupStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_ApplyDoorScheduleFirstInGroupStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/applyDoorScheduleFirstInState" : {
      "post" : {
        "description" : "Attempts to apply the specified first-in state to the specified door",
        "operationId" : "applyDoorScheduleFirstInState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_ApplyDoorScheduleFirstInStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_ApplyDoorScheduleFirstInStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/createLocationFirstInSettings" : {
      "post" : {
        "description" : "Create settings for first-in that can be shared across the specified doors within a location",
        "operationId" : "createLocationFirstInSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_CreateLocationFirstInSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_CreateLocationFirstInSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/deleteLocationFirstInSettings" : {
      "post" : {
        "description" : "Delete the specified first-in settings. Effectively removes first-in configuration from all doors that belong to the settings",
        "operationId" : "deleteLocationFirstInSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_DeleteLocationFirstInSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_DeleteLocationFirstInSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/findLocationFirstInSettingsByLocation" : {
      "post" : {
        "description" : "Paginated retrieval of all first-in settings in a location",
        "operationId" : "findLocationFirstInSettingsByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_FindLocationFirstInSettingsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_FindLocationFirstInSettingsByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/findLocationFirstInSettingsByOrg" : {
      "post" : {
        "description" : "Paginated retrieval of all first-in settings in an org",
        "operationId" : "findLocationFirstInSettingsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_FindLocationFirstInSettingsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_FindLocationFirstInSettingsByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/getLocationFirstInSettings" : {
      "post" : {
        "description" : "Retrieve the specified first-in settings by its unique RUUID",
        "operationId" : "getLocationFirstInSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_GetLocationFirstInSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_GetLocationFirstInSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/getLocationFirstInSettingsForDoor" : {
      "post" : {
        "description" : "Retrieve the first-in settings that a door belongs to, if any",
        "operationId" : "getLocationFirstInSettingsForDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_GetLocationFirstInSettingsForDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_GetLocationFirstInSettingsForDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/removeDoorLocationFirstInSettings" : {
      "post" : {
        "description" : "Removes the specified door from the first-in settings if currently assigned to one. Also possible via the updateLocationFirstInSettings method but this method will leave other doorsbelonging assigned settings as-is rather than require the entire list.",
        "operationId" : "removeDoorLocationFirstInSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_RemoveDoorLocationFirstInSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_RemoveDoorLocationFirstInSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/firstIn/updateLocationFirstInSettings" : {
      "post" : {
        "description" : "Update settings for first-in that can be shared across the specified doors within a location",
        "operationId" : "updateLocationFirstInSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_firstin_UpdateLocationFirstInSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_firstin_UpdateLocationFirstInSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "First In Settings Webservice" ]
      }
    },
    "/api/accesscontrol/forceRefreshAccessControlUnitConfig" : {
      "post" : {
        "description" : "Send a command to the access control unit so it refreshes its complete configuration",
        "operationId" : "forceRefreshAccessControlUnitConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_ForceRefreshAccessControlUnitConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_ForceRefreshAccessControlUnitConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getLocationAccessGrant" : {
      "post" : {
        "description" : "Retrieve a location access grant by id",
        "operationId" : "getLocationAccessGrant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_GetLocationAccessGrantWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_GetLocationAccessGrantWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getLocationAccessRevocation" : {
      "post" : {
        "description" : "Retrieve a location access revocation by id",
        "operationId" : "getLocationAccessRevocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_GetLocationAccessRevocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_GetLocationAccessRevocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getLocationsByAccessGrantForCurrentUser" : {
      "post" : {
        "description" : "Get locations for which the current user is associated with 1 or more access grants",
        "operationId" : "getLocationsByAccessGrantForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_GetLocationsByAccessGrantForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_GetLocationsByAccessGrantForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getMinimalAccessControlledDoorsByLocationForCurrentUser" : {
      "post" : {
        "description" : "Get access controlled doors for the specified location for which the current user is associated with 1 or more access grants",
        "operationId" : "getMinimalAccessControlledDoorsByLocationForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_GetMinimalAccessControlledDoorsByLocationForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_GetMinimalAccessControlledDoorsByLocationForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getRhombusKeyLocationLockdownDetailsForCurrentUser" : {
      "post" : {
        "description" : "Get the current state of a location lockdown and messages that should be displayed",
        "operationId" : "getRhombusKeyLocationLockdownDetailsForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_GetRhombusKeyLocationLockdownDetailsForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_GetRhombusKeyLocationLockdownDetailsForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getRhombusSecureCsnCredentialDetails" : {
      "post" : {
        "description" : "Retrieves a rhombus secure csn credential including sensitive details",
        "operationId" : "getRhombusSecureCsnCredentialDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getRhombusSecureMobileAppStateStatsForOrg" : {
      "post" : {
        "description" : "Retrieves stats of Rhombus Key app usage for active credentials that describe whether settings are optimal for the best user experience",
        "operationId" : "getRhombusSecureMobileAppStateStatsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_GetRhombusSecureMobileAppStateStatsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_GetRhombusSecureMobileAppStateStatsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getStandardCsnCredentialDetails" : {
      "post" : {
        "description" : "Retrieves a standard csn credential including sensitive details",
        "operationId" : "getStandardCsnCredentialDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/activateLockdownForLocation" : {
      "post" : {
        "description" : "Activate lockdown for the specified location",
        "operationId" : "activateLockdownForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ActivateLockdownForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ActivateLockdownForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/activateLockdownForLocationViaRhombusKey" : {
      "post" : {
        "description" : "Activate lockdown for the specified location from Rhombus Key",
        "operationId" : "activateLockdownForLocationViaRhombusKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ActivateLockdownForLocationViaRhombusKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ActivateLockdownForLocationViaRhombusKeyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/createLocationLockdownPlan" : {
      "post" : {
        "description" : "Create location lockdown plan",
        "operationId" : "createLocationLockdownPlan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_CreateLocationLockdownPlanWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_CreateLocationLockdownPlanWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/createLockdownRuleForLocation" : {
      "post" : {
        "description" : "Create (or update if ruleUuid is provided) a lockdown rule for the specified location",
        "operationId" : "createLockdownRuleForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_CreateLockdownRuleForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_CreateLockdownRuleForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/deactivateLockdownForLocation" : {
      "post" : {
        "description" : "Deactivate lockdown for the specified location",
        "operationId" : "deactivateLockdownForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeactivateLockdownForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeactivateLockdownForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/deactivateLockdownForLocationViaRhombusKey" : {
      "post" : {
        "description" : "Deactivate lockdown for the specified location from Rhombus Key",
        "operationId" : "deactivateLockdownForLocationViaRhombusKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeactivateLockdownForLocationViaRhombusKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeactivateLockdownForLocationViaRhombusKeyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/deleteLocationLockdownState" : {
      "post" : {
        "description" : "Disables tracking lockdown state for the specified location",
        "operationId" : "deleteLocationLockdownState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLocationLockdownStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLocationLockdownStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/deleteLockdownPlan" : {
      "post" : {
        "description" : "Delete lockdown plan",
        "operationId" : "deleteLockdownPlan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLockdownPlanWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLockdownPlanWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/deleteLockdownRuleForLocation" : {
      "post" : {
        "description" : "Delete a lockdown rule for the specified location",
        "operationId" : "deleteLockdownRuleForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLockdownRuleForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLockdownRuleForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/disableLockdownTestModeForLocation" : {
      "post" : {
        "description" : "Disable test mode of lockdown for the specified location",
        "operationId" : "disableLockdownTestModeForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DisableLockdownTestModeForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DisableLockdownTestModeForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/enableLockdownTestModeForLocation" : {
      "post" : {
        "description" : "Enable test mode of lockdown for the specified location",
        "operationId" : "enableLockdownTestModeForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_EnableLockdownTestModeForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_EnableLockdownTestModeForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/findLocationLockdownEvents" : {
      "post" : {
        "description" : "Retrieve a list of lockdown events for the specified location",
        "operationId" : "findLocationLockdownEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLocationLockdownEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLocationLockdownEventsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/findLocationLockdownStates" : {
      "post" : {
        "description" : "Finds the state of all lockdowns for the org",
        "operationId" : "findLocationLockdownStates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLocationLockdownStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLocationLockdownStatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/findLockdownPlans" : {
      "post" : {
        "description" : "Find lockdown plans in the org",
        "operationId" : "findLockdownPlans",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLockdownPlansWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLockdownPlansWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/findLockdownPlansByLocation" : {
      "post" : {
        "description" : "Find lockdown plans for the specified location",
        "operationId" : "findLockdownPlansByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLockdownPlansByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLockdownPlansByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/getLockdownPlan" : {
      "post" : {
        "description" : "Get lockdown plan",
        "operationId" : "getLockdownPlan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetLockdownPlanWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetLockdownPlanWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/getLockdownRulesForLocation" : {
      "post" : {
        "description" : "Get lockdown activation / deactivation rules for a location",
        "operationId" : "getLockdownRulesForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetLockdownRulesForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetLockdownRulesForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/getOrCreateLocationLockdownState" : {
      "post" : {
        "description" : "Retrieves an existing lockdown state or creates one for the specified location",
        "operationId" : "getOrCreateLocationLockdownState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetOrCreateLocationLockdownStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetOrCreateLocationLockdownStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/updateLocationLockdownPlan" : {
      "post" : {
        "description" : "Update location lockdown plan",
        "operationId" : "updateLocationLockdownPlan",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_UpdateLocationLockdownPlanWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_UpdateLocationLockdownPlanWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/pin/bulkProvisionPinCredentials" : {
      "post" : {
        "description" : "Bulk provision PIN credentials for multiple users",
        "operationId" : "bulkProvisionPinCredentials",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_BulkProvisionPinCredentialsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_BulkProvisionPinCredentialsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/pin/bulkRotatePinCredentials" : {
      "post" : {
        "description" : "Rotate multiple PIN credentials with new generated values",
        "operationId" : "bulkRotatePinCredentials",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_BulkRotatePinCredentialsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_BulkRotatePinCredentialsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/pin/createPinCredential" : {
      "post" : {
        "description" : "Create a PIN credential",
        "operationId" : "createPinCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreatePinCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreatePinCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/pin/deletePinCredential" : {
      "post" : {
        "description" : "Delete a PIN credential",
        "operationId" : "deletePinCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_DeletePinCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_DeletePinCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/pin/findPinCredentialsByOrg" : {
      "post" : {
        "description" : "Retrieves all PIN credentials in the org",
        "operationId" : "findPinCredentialsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindPinCredentialsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindPinCredentialsByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/pin/getAvailablePinCode" : {
      "post" : {
        "description" : "Get an unclaimed PIN code to create a PIN credential with",
        "operationId" : "getAccessControlAvailablePinCode",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_GetAvailablePinCodeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_GetAvailablePinCodeWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/pin/getPinCredentialDetails" : {
      "post" : {
        "description" : "Retrieves a PIN credential including sensitive details",
        "operationId" : "getPinCredentialDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_GetPinCredentialDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_GetPinCredentialDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/pin/revokePinCredential" : {
      "post" : {
        "description" : "Revoke a PIN credential",
        "operationId" : "revokePinCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_RevokePinCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_RevokePinCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/pin/rotatePinCredential" : {
      "post" : {
        "description" : "Rotate a PIN credential with a new value",
        "operationId" : "rotatePinCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_RotatePinCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_RotatePinCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/pin/updatePinCredential" : {
      "post" : {
        "description" : "Update a PIN credential",
        "operationId" : "updatePinCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdatePinCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdatePinCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control PIN Webservice" ]
      }
    },
    "/api/accesscontrol/provisionMobileAccessControlCredentialForCurrentUser" : {
      "post" : {
        "description" : "Creates a mobile access control credential. Store the private key securely, there is no other way to retrieve it other then generating a new cred.",
        "operationId" : "provisionMobileAccessControlCredentialForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_BaseProvisionMobileAccessControlCredentialForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/qr/generateQRAccessCode" : {
      "post" : {
        "description" : "Generate a QR code to unlock a door remotely when viewed by a camera",
        "operationId" : "generateQRAccessCode",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_qr_GenerateQRAccessCodeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_qr_GenerateQRAccessCodeWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control QR Webservice", "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/qr/getQRAccessCodes" : {
      "post" : {
        "description" : "Generate a QR code to unlock a door remotely when viewed by a camera",
        "operationId" : "getQRAccessCodes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_qr_GetQRAccessCodesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_qr_GetQRAccessCodesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control QR Webservice", "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/removeUsersFromAccessControlGroup" : {
      "post" : {
        "description" : "Removes specified users from an access control group",
        "operationId" : "removeUsersFromAccessControlGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_RemoveUsersFromOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_RemoveUsersFromOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/revokeAccessControlCredential" : {
      "post" : {
        "description" : "Revokes an access control credential. Unlike suspension this will give up its claim on the credential value allowing another cred to claim it as its identifier",
        "operationId" : "revokeAccessControlCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_RevokeAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_RevokeAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/revokeRhombusSecureMobileCredentialForCurrentUser" : {
      "post" : {
        "description" : "Revoke user's rhombus secure mobile credential",
        "operationId" : "revokeRhombusSecureMobileCredentialForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_RevokeRhombusSecureMobileCredentialForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_RevokeRhombusSecureMobileCredentialForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/sendUserPresenceForCurrentUser" : {
      "post" : {
        "operationId" : "sendUserPresenceForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_SendUserPresenceForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_BaseSendUserPresenceForCurrentUserWsResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/suspendAccessControlCredential" : {
      "post" : {
        "description" : "Mark an access control credential as suspended",
        "operationId" : "suspendAccessControlCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_SuspendAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_SuspendAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/unlockAccessControlledDoor" : {
      "post" : {
        "description" : "Unlock an access controlled door",
        "operationId" : "unlockAccessControlledDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_BaseUnlockAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/unlockAccessControlledDoorForCurrentUser" : {
      "post" : {
        "description" : "Unlock an access controlled door using authorization of supplied user token",
        "operationId" : "unlockAccessControlledDoorForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_BaseUnlockAccessControlledDoorForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/unsuspendAccessControlCredential" : {
      "post" : {
        "description" : "Mark an access control credential as no longer suspended",
        "operationId" : "unsuspendAccessControlCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UnsuspendAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UnsuspendAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateAccessControlCredentialNote" : {
      "post" : {
        "description" : "Update the note field of an Access Control Credential",
        "operationId" : "updateAccessControlCredentialNote",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateAccessControlCredentialNoteWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateAccessControlCredentialNoteWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateAccessControlGroup" : {
      "post" : {
        "description" : "Updates an access control group's meta information like name and description",
        "operationId" : "updateAccessControlGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_UpdateOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_UpdateOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateAccessGrant" : {
      "post" : {
        "description" : "Updates a location access grant",
        "operationId" : "updateAccessGrant",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_UpdateAccessGrantWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_UpdateAccessGrantWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateAccessRevocation" : {
      "post" : {
        "description" : "Updates a location access revocation",
        "operationId" : "updateAccessRevocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_UpdateAccessRevocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_UpdateAccessRevocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateRhombusKeyMobileAppStateForCurrentUser" : {
      "post" : {
        "description" : "Rhombus Key can update the detected app state which includes settings that can effect certain features.",
        "operationId" : "updateRhombusKeyMobileAppStateForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusKeyMobileAppStateForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusKeyMobileAppStateForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateRhombusSecureCsnCredential" : {
      "post" : {
        "description" : "Update a rhombus secure csn credential (Rhombus Badge)",
        "operationId" : "updateRhombusSecureCsnCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateRhombusSecureMobileCredential" : {
      "post" : {
        "description" : "Update a rhombus secure mobile credential (RhombusKey App w/ BLE or NFC)",
        "operationId" : "updateRhombusSecureMobileCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateStandardCsnCredential" : {
      "post" : {
        "description" : "Update a standard csn credential (Third Party Badge)",
        "operationId" : "updateStandardCsnCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateStandardCsnCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateStandardCsnCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateWiegandCredential" : {
      "post" : {
        "description" : "Update a wiegand credential (Third Party Badge)",
        "operationId" : "updateWiegandCredential",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateWiegandCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateWiegandCredentialWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/alertmonitoring/acceptAlertMonitoringTermsOfService" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "acceptAlertMonitoringTermsOfService",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_AcceptAlertMonitoringTermsOfServiceRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_AcceptAlertMonitoringTermsOfServiceResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/acceptAlertMonitoringTermsOfServiceForLocation" : {
      "post" : {
        "operationId" : "acceptAlertMonitoringTermsOfServiceForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_AcceptAlertMonitoringTermsOfServiceForLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_AcceptAlertMonitoringTermsOfServiceResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/cancelThreatCase" : {
      "post" : {
        "operationId" : "cancelThreatCase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_CancelThreatCaseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_CancelThreatCaseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/createAlertMonitoringSettings" : {
      "post" : {
        "operationId" : "createAlertMonitoringSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_CreateNoonlightSettingsForLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_CreateNoonlightSettingsForLocationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/createCustomPinForLocation" : {
      "post" : {
        "operationId" : "createCustomPinForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_CreateCustomPinForNoonlightWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_CreateCustomPinForNoonlightWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/createPinForLocation" : {
      "post" : {
        "operationId" : "createPinForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_CreatePinForNoonlightWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_CreatePinForNoonlightWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/deleteAlertMonitoringSettings" : {
      "post" : {
        "operationId" : "deleteAlertMonitoringSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_DeleteNoonlightSettingsForLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_DeleteNoonlightSettingsForLocationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/deletePinForLocation" : {
      "post" : {
        "operationId" : "deletePinForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_DeletePinForNoonlightWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_DeletePinForNoonlightWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/disableMonitoringForLocation" : {
      "post" : {
        "operationId" : "disableMonitoringForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_DisableLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_DisableLocationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/dismissThreatCase" : {
      "post" : {
        "operationId" : "dismissThreatCase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_DismissThreatCaseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_DismissThreatCaseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/enableMonitoringForLocation" : {
      "post" : {
        "operationId" : "enableMonitoringForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_EnableLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_EnableLocationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/escalateThreatCaseToAlarm" : {
      "post" : {
        "operationId" : "escalateThreatCaseToAlarm",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_EscalateThreatCaseToAlarmWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_EscalateThreatCaseToAlarmWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/generateMonthlyVerificationsForYearReportForLocation" : {
      "post" : {
        "operationId" : "generateMonthlyVerificationsForYearReportForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_GenerateMonthlyVerificationsForYearReportForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_GenerateMonthlyVerificationsForYearReportForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/generateReportDataForLocation" : {
      "post" : {
        "operationId" : "generateReportDataForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_GenerateReportDataForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_GenerateReportDataForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/getAlertMonitoringSettings" : {
      "post" : {
        "operationId" : "getAlertMonitoringSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_GetNoonlightSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_GetNoonlightSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/getAlertMonitoringSettingsForLocation" : {
      "post" : {
        "description" : "Retrieve alert monitoring settings by location.",
        "operationId" : "getAlertMonitoringSettingsForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_GetNoonlightSettingsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_GetNoonlightSettingsForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/getTripwireGroupCount" : {
      "post" : {
        "operationId" : "getAlertMonitoringTripwireGroupCount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_GetAlertMonitoringTripwireGroupCountWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_GetAlertMonitoringTripwireGroupCountWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/locationStatus" : {
      "post" : {
        "description" : "Retrieve summary of the alarm monitoring status for the specified location",
        "operationId" : "locationStatus",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_LocationStatusWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_LocationStatusWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/orgStatus" : {
      "post" : {
        "description" : "Retrieve summary of the alarm monitoring status for all locations",
        "operationId" : "orgStatus",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_OrgStatusWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_OrgStatusWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/bulkProvisionPins" : {
      "post" : {
        "description" : "Bulk provision alert monitoring PINs for multiple users.",
        "operationId" : "bulkProvisionPins",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_BulkProvisionPinsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_BulkPinsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/bulkRotatePins" : {
      "post" : {
        "description" : "Rotate multiple alert monitoring PINs.",
        "operationId" : "bulkRotatePins",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_BulkRotatePinsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_BulkPinsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/createPin" : {
      "post" : {
        "description" : "Create a PIN for alert monitoring.",
        "operationId" : "createPin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_CreatePinWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_BasePinWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/deletePin" : {
      "post" : {
        "description" : "Delete an alert monitoring PIN.",
        "operationId" : "deletePin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_DeletePinWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_BasePinWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/findPinsByLocationAndUser" : {
      "post" : {
        "description" : "Retrieve alert monitoring PINs by location and/or user.",
        "operationId" : "findPinsByLocationAndUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_FindPinsByLocationAndUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_FindPinsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/findPinsByOrg" : {
      "post" : {
        "description" : "Retrieve alert monitoring PINs by org.",
        "operationId" : "findPinsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_FindPinsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_FindPinsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/getAvailablePinCode" : {
      "post" : {
        "description" : "Get an unclaimed PIN code to create an alert monitoring PIN with.",
        "operationId" : "getAlertMonitoringAvailablePinCode",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_GetAvailableALMPinCodeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_GetAvailableALMPinCodeWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/getPin" : {
      "post" : {
        "description" : "Retrieve an alert monitoring PIN.",
        "operationId" : "getPin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_GetPinWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_BasePinWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/rotatePin" : {
      "post" : {
        "description" : "Rotate an alert monitoring PIN.",
        "operationId" : "rotatePin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_RotatePinWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_BasePinWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/pin/updatePin" : {
      "post" : {
        "description" : "Update an alert monitoring PIN.",
        "operationId" : "updatePin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_pin_UpdatePinWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_pin_BasePinWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring PIN Webservice" ]
      }
    },
    "/api/alertmonitoring/resetTripwireGroupCount" : {
      "post" : {
        "operationId" : "resetAlertMonitoringTripwireGroupCount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_ResetAlertMonitoringTripwireGroupCountWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_ResetAlertMonitoringTripwireGroupCountWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/updateAlertMonitoringSettings" : {
      "post" : {
        "operationId" : "updateAlertMonitoringSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_UpdateNoonlightSettingsForLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_UpdateNoonlightSettingsForLocationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/audiogateway/delete" : {
      "post" : {
        "description" : "Remove an audio gateway from organization",
        "operationId" : "deleteAudioGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_DeleteAudioGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_DeleteAudioGatewayWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getAudioSeekpoints" : {
      "post" : {
        "description" : "Get audio seek points",
        "operationId" : "getAudioSeekpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetAudioSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetAudioSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getConfig" : {
      "post" : {
        "description" : "Get an audio gateway config",
        "operationId" : "getAudioGatewayConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetAudioGatewayConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetAudioGatewayConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getFullAudioGatewayState" : {
      "post" : {
        "description" : "Get detailed information about state of specified audio gateway",
        "operationId" : "getFullAudioGatewayState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetFullAudioGatewayStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetFullAudioGatewayStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getMediaUris" : {
      "post" : {
        "description" : "Get media uris for audio gateway to retrieve footage",
        "operationId" : "getAudioGatewayMediaUris",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetMediaUrisWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetMediaUrisWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getMinimalAudioGatewayStateList" : {
      "post" : {
        "description" : "Get basic state information for all audio gateways",
        "operationId" : "getMinimalAudioGatewayStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetMinimalAudioGatewayStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetMinimalAudioGatewayStatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getOfflineLanStreamingInfo" : {
      "post" : {
        "description" : "Get required information for offline lan streaming on all audio gateways",
        "operationId" : "getAudioGatewayOfflineLanStreamingInfo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetAudioGatewayOfflineLanStreamingInfoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetAudioGatewayOfflineLanStreamingInfoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getPresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for an audio gateway",
        "operationId" : "getAudioGatewayPresenceWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_GetPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getUptimeWindows" : {
      "post" : {
        "description" : "Get uptime information for an audio gateway",
        "operationId" : "getAudioGatewayUptimeWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetUptimeWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_GetUptimeWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/reboot" : {
      "post" : {
        "description" : "Reboot the specified audio gateway",
        "operationId" : "rebootAudioGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_RebootAudioGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_RebootDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservicee", "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/updateConfig" : {
      "post" : {
        "description" : "Update config for audio gateway",
        "operationId" : "updateAudioGatewayConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_UpdateAudioGatewayConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_UpdateAudioGatewayConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/updateDetails" : {
      "post" : {
        "description" : "Update details for audio gateway. Note: uuid is a required field",
        "operationId" : "updateAudioGatewayDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_UpdateAudioGatewayDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_UpdateAudioGatewayDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audioplayback/cancelLoopingAudioPlayback" : {
      "post" : {
        "description" : "Cancel any currently playing looping audio for an audio device",
        "operationId" : "cancelLoopingAudioPlayback",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_CancelLoopingAudioPlaybackWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_CancelLoopingAudioPlaybackWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/deleteAudioUploadMetadata" : {
      "post" : {
        "description" : "Delete an uploaded audio clip metadata",
        "operationId" : "deleteAudioUploadMetadata",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_DeleteAudioUploadMetadataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_DeleteAudioUploadMetadataWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/getAudioUploadMetadataForOrg" : {
      "post" : {
        "description" : "Get list of uploaded audio clip metadata",
        "operationId" : "getAudioUploadMetadataForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_GetAudioUploadMetadataForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_GetAudioUploadMetadataForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/playAudioUpload" : {
      "post" : {
        "description" : "Play an uploaded audio clip through an audio device",
        "operationId" : "playAudioUpload",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_PlayAudioUploadWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_PlayAudioUploadWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/updateAudioUploadMetadata" : {
      "post" : {
        "description" : "Update an uploaded audio clip metadata",
        "operationId" : "updateAudioUploadMetadata",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_UpdateAudioUploadMetadataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_UpdateAudioUploadMetadataWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/uploadAudioPcm/{audioClipName}" : {
      "post" : {
        "description" : "Upload PCM audio clip",
        "operationId" : "uploadAudioPcm",
        "parameters" : [ {
          "in" : "path",
          "name" : "audioClipName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_UploadAudioPcmWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/uploadAudioText" : {
      "post" : {
        "description" : "Upload text to synthesize audio",
        "operationId" : "uploadAudioText",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_UploadAudioTextWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_UploadAudioTextWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/badgereader/delete" : {
      "post" : {
        "description" : "Remove the badge reader from the organization",
        "operationId" : "deleteBadgeReader",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Badgereader_DeleteBadgeReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Badgereader_DeleteBadgeReaderWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Reader Webservice" ]
      }
    },
    "/api/badgereader/getConfig" : {
      "post" : {
        "description" : "Get a badge reader's config",
        "operationId" : "getBadgeReaderConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deviceconfig_GetConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Badgereader_GetBadgeReaderConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Reader Webservice" ]
      }
    },
    "/api/badgereader/getFullState" : {
      "post" : {
        "description" : "Get detailed information about state of specified badge reader",
        "operationId" : "getBadgeReaderFullState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetFullDeviceStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Badgereader_GetBadgeReaderFullStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Reader Webservice" ]
      }
    },
    "/api/badgereader/getMinimalStateList" : {
      "post" : {
        "description" : "Get basic state information about all badge readers in organization",
        "operationId" : "getBadgeReaderMinimalStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetMinimalDeviceStateListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Badgereader_GetBadgeReaderMinimalStateListWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Reader Webservice" ]
      }
    },
    "/api/badgereader/reboot" : {
      "post" : {
        "operationId" : "rebootBadgeReader",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Badgereader_RebootBadgeReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_RebootDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Reader Webservice" ]
      }
    },
    "/api/badgereader/updateConfig" : {
      "post" : {
        "description" : "Update a badge reader's config",
        "operationId" : "updateBadgeReaderConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Badgereader_UpdateBadgeReaderConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Reader Webservice" ]
      }
    },
    "/api/badgereader/updateDetails" : {
      "post" : {
        "description" : "Update hardware details of badge reader.",
        "operationId" : "updateBadgeReaderDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Badgereader_UpdateBadgeReaderDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateDeviceDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Badge Reader Webservice" ]
      }
    },
    "/api/ble/getBaseStations" : {
      "post" : {
        "description" : "Retrieve list of available base stations for BLE sensors",
        "operationId" : "getBaseStations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ble_GetBaseStationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ble_GetBaseStationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BLE Webservice" ]
      }
    },
    "/api/ble/getSecureSecretForRegistered" : {
      "post" : {
        "description" : "Get secure secret for registered sensor",
        "operationId" : "getSecureSecretForRegistered",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ble_BleDeviceMap"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ble_GetSecureSecretForRegisteredWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BLE Webservice" ]
      }
    },
    "/api/ble/getSecureSecretForUnregistered" : {
      "post" : {
        "description" : "Get secure secret to register an unregistered sensor",
        "operationId" : "getSecureSecretForUnregistered",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ble_BleDeviceMap"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ble_GetSecureSecretForUnregisteredWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BLE Webservice" ]
      }
    },
    "/api/ble/getSecureSecretOfRegisteredDeviceForRhombusKey" : {
      "post" : {
        "description" : "Equivalent to getSecureSecretForRegistered but for RhombusKey mobile app",
        "operationId" : "getSecureSecretOfRegisteredDeviceForRhombusKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ble_BleDeviceMap"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ble_GetSecureSecretForRegisteredWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BLE Webservice" ]
      }
    },
    "/api/ble/getSensorHardwareFirmwareUpdateDetails" : {
      "post" : {
        "description" : "Get latest firmware update details for all sensor",
        "operationId" : "getSensorHardwareFirmwareUpdateDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ble_GetSensorHardwareFirmwareUpdateDetailsRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ble_GetSensorHardwareFirmwareUpdateDetailsResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BLE Webservice" ]
      }
    },
    "/api/ble/registerSensor" : {
      "post" : {
        "description" : "Register a sensor to an organization",
        "operationId" : "registerSensor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ble_RegisterSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ble_RegisterSensorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BLE Webservice" ]
      }
    },
    "/api/ble/unregisterSensor" : {
      "post" : {
        "description" : "Unregister a sensor from account",
        "operationId" : "unregisterSensor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ble_UnregisterSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ble_UnregisterSensorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "BLE Webservice" ]
      }
    },
    "/api/button/createRuleForButton" : {
      "post" : {
        "description" : "Create rule for a button sensor.",
        "operationId" : "createRuleForButton",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_CreateRuleForButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_CreateRuleForButtonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/deleteRuleForButton" : {
      "post" : {
        "description" : "Delete rule for a button sensor.",
        "operationId" : "deleteRuleForButton",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_DeleteRuleForButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_DeleteRuleForButtonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/getButtonPressEventsForSensor" : {
      "post" : {
        "description" : "Get list of button press events for button sensor",
        "operationId" : "getButtonPressEventsForSensor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_GetButtonPressEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_GetButtonPressEventsForSensorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/getButtonRulesForOrg" : {
      "post" : {
        "description" : "Get rules for all buttons in an org.",
        "operationId" : "getButtonRulesForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_GetButtonRulesForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_GetButtonRulesForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/getMinimalButtonStateList" : {
      "post" : {
        "description" : "Get basic state information for all button sensors",
        "operationId" : "getMinimalButtonStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_GetMinimalButtonStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_GetMinimalButtonStatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/getRulesForButton" : {
      "post" : {
        "description" : "Get all rules for a button sensor.",
        "operationId" : "getRulesForButton",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_GetRulesForButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_GetRulesForButtonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/updateConfig" : {
      "post" : {
        "description" : "Update config for a button sensor.",
        "operationId" : "updateButtonConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_UpdateButtonConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/updateDetails" : {
      "post" : {
        "description" : "Update details for a button sensor.",
        "operationId" : "updateButtonDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_UpdateButtonDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateDeviceDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/camera/calibrateFloorplanProjection" : {
      "post" : {
        "description" : "Generate the homography to project detections onto a floorplan.",
        "operationId" : "cameraCalibrateFloorplanProjection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_CalibrateFloorplanProjectionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_CalibrateFloorplanProjectionWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createCustomFootageSeekpoints" : {
      "post" : {
        "description" : "Create custom activity seekpoints for a specified camera",
        "operationId" : "createCustomFootageSeekpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateCustomFootageSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateFootageSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createFootageBoundingBoxes" : {
      "post" : {
        "description" : "Create an activity bounding box for specified camera",
        "operationId" : "createFootageBoundingBoxes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateFootageBoundingBoxesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateFootageBoundingBoxesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createProtectedSharedLiveVideoStream" : {
      "post" : {
        "description" : "Share a password protected live video stream for a camera",
        "operationId" : "createProtectedSharedLiveVideoStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateSharedLiveVideoStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateSharedLiveVideoStreamWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createProtectedSharedVideoWall" : {
      "post" : {
        "description" : "Share a password protected video wall",
        "operationId" : "createProtectedSharedVideoWall",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateSharedVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateSharedVideoWallWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createRawHttpStream" : {
      "post" : {
        "description" : "Create a raw HTTP stream for a camera",
        "operationId" : "createCameraRawHttpStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_CreateRawHttpStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_CreateRawHttpStreamWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createSharedLiveVideoStream" : {
      "post" : {
        "description" : "Share an unprotected live video stream for a camera",
        "operationId" : "createCameraSharedLiveVideoStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateSharedLiveVideoStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateSharedLiveVideoStreamWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createSharedVideoWall" : {
      "post" : {
        "description" : "Share an unprotected video wall",
        "operationId" : "createSharedVideoWall",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateSharedVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateSharedVideoWallWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createVideoWall" : {
      "post" : {
        "description" : "Create a video wall for user",
        "operationId" : "createVideoWall",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateVideoWallWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/delete" : {
      "post" : {
        "description" : "Remove a camera from organization",
        "operationId" : "deleteCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_DeleteCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteCustomFootageSeekpoints" : {
      "post" : {
        "description" : "Delete custom seekpoints for specified cameras",
        "operationId" : "deleteCustomFootageSeekpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteCustomFootageSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_DeleteCustomFootageSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteRawHttpStream" : {
      "post" : {
        "description" : "Delete a raw HTTP stream for a camera",
        "operationId" : "deleteCameraRawHttpStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_DeleteRawHttpStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_DeleteRawHttpStreamWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteSharedLiveVideoStream" : {
      "post" : {
        "description" : "Remove a shared live stream from camera",
        "operationId" : "deleteSharedLiveVideoStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteSharedLiveVideoStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteSharedLiveVideoStreamForDeviceResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteSharedVideoWall" : {
      "post" : {
        "description" : "Remove a shared video wall",
        "operationId" : "deleteSharedVideoWall",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteSharedVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_DeleteSharedVideoWallWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteVideoWall" : {
      "post" : {
        "description" : "Delete a video wall",
        "operationId" : "deleteVideoWall",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_DeleteVideoWallWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/erase" : {
      "post" : {
        "description" : "Wipes the SD card on a camera",
        "operationId" : "eraseCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_EraseCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_EraseCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/findAllRawHttpStreams" : {
      "post" : {
        "description" : "Get a list of all cameras raw HTTP streams",
        "operationId" : "findAllCameraRawHttpStreams",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_FindAllRawHttpStreamsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_FindAllRawHttpStreamsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/findAllSharedLiveVideoStreams" : {
      "post" : {
        "description" : "Get list of all shared live streams",
        "operationId" : "findAllSharedLiveVideoStreams",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_FindAllSharedLiveVideoStreamsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_FindAllSharedLiveVideoStreamsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/findSharedLiveVideoStreams" : {
      "post" : {
        "description" : "Get list of all shared live streams for camera",
        "operationId" : "findCameraSharedLiveVideoStreams",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_FindSharedLiveVideoStreamsForWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_FindSharedLiveVideoStreamsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/findSharedVideoWalls" : {
      "post" : {
        "description" : "Get list of all shares for a video wall",
        "operationId" : "findSharedVideoWalls",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_FindSharedVideoWallsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_FindSharedVideoWallsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/generateBatchRegistrationInfo" : {
      "post" : {
        "description" : "Create camera registration information for QR code generation",
        "operationId" : "generateBatchRegistrationInfo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GenerateBatchRegistrationInfoRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GenerateBatchRegistrationInfoResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/generateWifiChangeAuthorizationToken" : {
      "post" : {
        "description" : "Create a change wifi request for QR code generation",
        "operationId" : "generateWifiChangeAuthorizationToken",
        "parameters" : [ {
          "in" : "header",
          "name" : "RHOMBUS_MY_IP",
          "schema" : {
            "type" : "string",
            "default" : "",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GenerateWifiChangeAuthorizationTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GenerateWifiChangeAuthorizationTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getBatchRegistrationUsage" : {
      "post" : {
        "description" : "Get detailed usage information for a registration token",
        "operationId" : "getBatchRegistrationUsage",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetBatchRegistrationTokenUsageRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetBatchRegistrationTokenUsageResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCameraAIThresholds" : {
      "post" : {
        "description" : "Get AI normalized confidence thresholds for a camera",
        "operationId" : "getCameraAIThresholds",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCameraAIThresholdsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCameraAIThresholdsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCloudArchivedMediaInfo" : {
      "post" : {
        "description" : "Get information on archived video for specified camera",
        "operationId" : "getCloudArchivedMediaInfo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCloudArchivedMediaInfoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCloudArchivedMediaInfoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCloudArchivingConfig" : {
      "post" : {
        "description" : "Get the cloud archiving scheduling config applicable to a camera",
        "operationId" : "getCloudArchivingConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCloudArchivingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCloudArchivingConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getConfig" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get a camera's config",
        "operationId" : "getCameraConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCurrentState" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getFullCameraState instead",
        "operationId" : "getCurrentCameraState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCurrentStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCurrentStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCustomFootageSeekpointsV2" : {
      "post" : {
        "description" : "Get activity seekpoints for specified camera",
        "operationId" : "getCustomFootageSeekpointsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCustomFootageSeekpointsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCustomFootageSeekpointsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getDetails" : {
      "post" : {
        "description" : "Get hardware details of multiple cameras",
        "operationId" : "getCameraDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCameraDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCameraDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFacetedConfig" : {
      "post" : {
        "description" : "Get a camera's config",
        "operationId" : "getCameraFacetedConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deviceconfig_GetConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deviceconfig_GetFacetedUserConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFootageBoundingBoxes" : {
      "post" : {
        "description" : "Get object bounding boxes for a specified camera. Note: bounding box values are given as permyriad shorts relative to image.  To convert to absolute pixel values, use the following: abs_pix = (rel_permyriad / 10000) * image_dim",
        "operationId" : "getCameraFootageBoundingBoxes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFootageBoundingBoxesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFootageBoundingBoxesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFootageBoundingBoxesForMultiple" : {
      "post" : {
        "description" : "Get object bounding boxes for multiple cameras. Note: bounding box values are given as permyriad shorts relative to image.  To convert to absolute pixel values, use the following: abs_pix = (rel_permyriad / 10000) * image_dim",
        "operationId" : "getFootageBoundingBoxesForMultiple",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFootageBoundingBoxesForMultipleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFootageBoundingBoxesForMultipleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFootageSeekpoints" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getFootageSeekpointsV2 instead",
        "operationId" : "getCameraFootageSeekpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFootageSeekpointsForMultiple" : {
      "post" : {
        "description" : "Get activity seekpoints for multiple cameras",
        "operationId" : "getFootageSeekpointsForMultiple",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsForMultipleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsForMultipleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFootageSeekpointsV2" : {
      "post" : {
        "description" : "Get activity seekpoints for specified camera",
        "operationId" : "getCameraFootageSeekpointsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFullCameraState" : {
      "post" : {
        "description" : "Get detailed information about state of specified camera",
        "operationId" : "getFullCameraState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFullCameraStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFullCameraStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getLineCrossingEnabledCamerasForLocation" : {
      "post" : {
        "description" : "Gets all the cameras that have line-crossing feature enabled at a location",
        "operationId" : "getLineCrossingEnabledCamerasForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetLineCrossingEnabledCamerasForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetLineCrossingEnabledCamerasForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getMediaUris" : {
      "post" : {
        "description" : "Get media uris for camera to retrieve footage",
        "operationId" : "getCameraMediaUris",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetMediaUrisWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetMediaUrisWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getMinimalCameraLocationMap" : {
      "post" : {
        "description" : "Get basic information about all cameras and their locations in organization",
        "operationId" : "getMinimalCameraLocationMap",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetMinimalCameraLocationMapWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetMinimalCameraLocationMapWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getMinimalCameraStateList" : {
      "post" : {
        "description" : "Get basic state information about all cameras in organization",
        "operationId" : "getMinimalCameraStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetMinimalCameraStateListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetMinimalCameraStateListWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getMinimalList" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getMinimalCameraStateList instead",
        "operationId" : "getCameraMinimalList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetMinimalListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetMinimalListWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getOccupancyEnabledCameras" : {
      "post" : {
        "description" : "Gets all the cameras that have a occupancy polygon defined",
        "operationId" : "getOccupancyEnabledCameras",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetOccupancyEnabledCamerasWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFacetedCameraDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getOfflineLanStreamingInfo" : {
      "post" : {
        "description" : "Get required information for offline lan streaming on all cameras",
        "operationId" : "getCameraOfflineLanStreamingInfo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetOfflineLanStreamingInfoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetOfflineLanStreamingInfoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getPresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for camera",
        "operationId" : "getCameraPresenceWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getRawHttpStreams" : {
      "post" : {
        "description" : "Get info for all raw HTTP streams from a camera",
        "operationId" : "getCameraRawHttpStreams",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_GetRawHttpStreamsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_GetRawHttpStreamsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getStorageRecoveryFile" : {
      "post" : {
        "description" : "Get a file that contains information required to recover the media from the SD card of a damaged camera",
        "operationId" : "getStorageRecoveryFile",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetStorageRecoveryFileWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetStorageRecoveryFileWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getUptimeWindows" : {
      "post" : {
        "description" : "Get uptime information for camera",
        "operationId" : "getUptimeWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetUptimeWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetUptimeWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getVideoWalls" : {
      "post" : {
        "description" : "Get list of video walls available for client",
        "operationId" : "getVideoWalls",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetVideoWallsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetVideoWallsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/reboot" : {
      "post" : {
        "description" : "Send reboot command to camera",
        "operationId" : "rebootCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_RebootCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_RebootCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateCameraAIThresholds" : {
      "post" : {
        "description" : "Update AI confidence thresholds for a camera",
        "operationId" : "updateCameraAIThresholds",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraAIThresholdsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraAIThresholdsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateCameraHumanLoiteringConfig" : {
      "post" : {
        "description" : "Updates the human loitering feature for a camera.",
        "operationId" : "updateCameraHumanLoiteringConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraHumanLoiteringConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraHumanLoiteringWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateCameraLineCrossingThresholds" : {
      "post" : {
        "description" : "Updates the line-crossing feature for a camera. Accepts two points which define a line that determines the threshold for which INGRESS and EGRESS events will be generated. Consider the top-left corner of a camera's image to be the origin (0,0).",
        "operationId" : "updateCameraLineCrossingThresholds",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateConfig" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update a camera's config",
        "operationId" : "updateCameraConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateDetails" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update hardware details of camera",
        "operationId" : "updateCameraDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateDetailsBulkV2" : {
      "post" : {
        "operationId" : "updateDetailsBulkV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCamerasBulkV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateDetailsV2" : {
      "post" : {
        "description" : "Update hardware details of camera.",
        "operationId" : "updateCameraDetailsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateFacetedConfig" : {
      "post" : {
        "description" : "Update a camera's config",
        "operationId" : "updateCameraFacetedConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deviceconfig_UpdateFacetedUserConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateFirmware" : {
      "post" : {
        "description" : "Send command to update firmware to camera",
        "operationId" : "updateFirmware",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraFirmwareWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraFirmwareWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateVideoWalls" : {
      "post" : {
        "description" : "Update a video wall",
        "operationId" : "updateVideoWalls",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateVideoWallWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateWifi" : {
      "post" : {
        "description" : "Send a command to update wifi on specified connected cameras",
        "operationId" : "updateCameraWifi",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateWifiWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateWifiWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/chatbot/deleteChatbotConversation" : {
      "post" : {
        "description" : "Deletes a conversation and its entire chat history.",
        "operationId" : "deleteChatbotConversation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Chatbot_DeleteChatbotConversationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Chatbot Webservice" ]
      }
    },
    "/api/chatbot/getChatHistoryByContextId" : {
      "post" : {
        "description" : "Retrieves chat history by context ID. A context ID can be retrieved from a conversation and refers\nto a unique set of chat history that is seeded to Rhombus MIND before it answers a new query.\n",
        "operationId" : "getChatHistoryByContextId",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Chatbot_GetChatHistoryByContextIdWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Chatbot_GetChatHistoryWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Chatbot Webservice" ]
      }
    },
    "/api/chatbot/getChatbotConversations" : {
      "post" : {
        "description" : "Retrieves the list of conversations the user has initiated with Rhombus MIND. Conversations are\nstored for 60 days then it and its specific chat history are erased. A conversation is a unique\nset of chat history with Rhombus MIND. When submitting a new chat for a conversation its entire\nchat history is used to initialize the LLM before answer the new query.\n",
        "operationId" : "getChatbotConversations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Chatbot_GetChatbotConversationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Chatbot_GetChatbotConversationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Chatbot Webservice" ]
      }
    },
    "/api/chatbot/submitChat" : {
      "post" : {
        "description" : "Submits a query to Rhombus MIND. When submitting a query the context ID plays an important role in\nhelping seed Rhombus MIND with the previous chat history to answer the query in the context of the\nperceived conversation. You do not need to create a conversation, submitting a new context ID will\ncause a new conversation to be created.\n",
        "operationId" : "submitChat",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Chatbot_SubmitChatWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Chatbot_SubmitChatWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Chatbot Webservice" ]
      }
    },
    "/api/chatbot/updateChatbotConversation" : {
      "post" : {
        "description" : "Updates fields of a conversation by presence. Meaning if the field is omitted it will not be updated.\nCurrently the only field that can be updated is the conversation name. The contextId field is required.\n",
        "operationId" : "updateChatbotConversation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Chatbot_UpdateChatbotConversationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Chatbot_UpdateChatbotConversationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Chatbot Webservice" ]
      }
    },
    "/api/climate/deleteEnvironmentalGateway" : {
      "post" : {
        "description" : "Remove an environmental gateway from the org",
        "operationId" : "deleteEnvironmentalGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_DeleteEnvironmentalGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_DeleteEnvironmentalGatewayWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getClimateEventsForSensor" : {
      "post" : {
        "description" : "Get list of climate events for environmental sensor",
        "operationId" : "getClimateEventsForSensor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetClimateEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetClimateEventsForSensorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getClimateEventsForTags" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of climate events for environmental sensor",
        "operationId" : "getClimateEventsForTags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetClimateEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetClimateEventsForSensorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getClimatePresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for sensor",
        "operationId" : "getClimatePresenceWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getConfig" : {
      "post" : {
        "description" : "Get the config for a climate sensor",
        "operationId" : "getConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetClimateSensorConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetClimateSensorConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getEnvironmentalGatewayShadows" : {
      "post" : {
        "description" : "Get list of shadows of all environmental gateways of an org",
        "operationId" : "getEnvironmentalGatewayShadows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetEnvironmentalGatewayShadowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetEnvironmentalGatewayShadowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getEventsForEnvironmentalGateway" : {
      "post" : {
        "description" : "Get list of events for environmental gateway",
        "operationId" : "getEventsForEnvironmentalGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetEventsForEnvironmentalGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetEventsForEnvironmentalGatewayWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getMinimalClimateStateList" : {
      "post" : {
        "description" : "Get basic state information of all environmental sensors",
        "operationId" : "getMinimalClimateStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetMinimalClimateStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetMinimalClimateStatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getMinimalEnvironmentalGatewayStates" : {
      "post" : {
        "description" : "Get list of basic states of all environmental gateways of an org",
        "operationId" : "getMinimalEnvironmentalGatewayStates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetMinimalEnvironmentalGatewayStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetMinimalEnvironmentalGatewayStatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getMinimalStateEventsForEnvironmentalGateway" : {
      "post" : {
        "description" : "Get list of events for environmental gateways in minimal state",
        "operationId" : "getMinimalStateEventsForEnvironmentalGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetEventsForEnvironmentalGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetMinimalEnvironmentalGatewayStatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/reboot" : {
      "post" : {
        "description" : "Send reboot command to environmental gateway",
        "operationId" : "rebootEnvironmentalGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_RebootEnvironmentalGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_RebootDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/updateDetails" : {
      "post" : {
        "description" : "Update details for environmental sensor. Note: uuid is a required field",
        "operationId" : "updateClimateSensorDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_UpdateClimateSensorDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_UpdateClimateSensorDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/updateEnvironmentalGatewayDetails" : {
      "post" : {
        "description" : "Update details for environmental gateway. Note: uuid is a required field",
        "operationId" : "updateEnvironmentalGatewayDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_UpdateEnvironmentalGatewayDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_UpdateEnvironmentalGatewayDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/component/addAccessControlledDoorLabel" : {
      "post" : {
        "description" : "Create a label that can be assigned to an access controlled door and referenced by an access grant or access revocation",
        "operationId" : "addAccessControlledDoorLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_AddAccessControlledDoorLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_AddAccessControlledDoorLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/applyAccessControlledDoorStateOverride" : {
      "post" : {
        "description" : "Attempts to apply a door state override to an access controlled door that ignores the regular door schedule and door schedule exceptions.",
        "operationId" : "applyAccessControlledDoorStateOverride",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_ApplyAccessControlledDoorStateOverrideWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_ApplyAccessControlledDoorStateOverrideWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/cancelAccessControlledDoorStateOverride" : {
      "post" : {
        "description" : "Attempts to cancel the door state override, if one has been applied, to an access controlled door.",
        "operationId" : "cancelAccessControlledDoorStateOverride",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CancelAccessControlledDoorStateOverrideWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CancelAccessControlledDoorStateOverrideWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createAccessControlledDoor" : {
      "post" : {
        "description" : "Create an access controlled door",
        "operationId" : "createAccessControlledDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createAccessControlledDoorSeekpoints" : {
      "post" : {
        "description" : "Create custom activity seekpoints for a specified access controlled door",
        "operationId" : "createAccessControlledDoorSeekpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateAccessControlledDoorSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateAccessControlledDoorSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedDoorPositionIndicator" : {
      "post" : {
        "description" : "Create a door position indicator component",
        "operationId" : "createIntegratedDoorPositionIndicator",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedDoorPositionIndicatorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedDoorPositionIndicatorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedDoorRelay" : {
      "post" : {
        "description" : "Create a door relay component",
        "operationId" : "createIntegratedDoorRelay",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedDoorRelayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedDoorRelayWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedGenericButton" : {
      "post" : {
        "description" : "Create a generic button component",
        "operationId" : "createIntegratedGenericButton",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedGenericButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedGenericButtonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedGenericInput" : {
      "post" : {
        "description" : "Create a generic input component",
        "operationId" : "createIntegratedGenericInput",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedGenericInputWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedGenericInputWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedGenericRelay" : {
      "post" : {
        "description" : "Create a generic relay component",
        "operationId" : "createIntegratedGenericRelay",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedGenericRelayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedGenericRelayWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedRequestToExit" : {
      "post" : {
        "description" : "Create a request to exit component",
        "operationId" : "createIntegratedRequestToExit",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedRequestToExitWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedRequestToExitWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createOsdpDoorReader" : {
      "post" : {
        "description" : "Create a third party OSDP Reader component",
        "operationId" : "createOsdpDoorReader",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateOsdpReaderWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createRhombusOsdpDoorReader" : {
      "post" : {
        "description" : "Create a Rhombus OSDP Reader component",
        "operationId" : "createRhombusOsdpDoorReader",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateRhombusOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateRhombusOsdpReaderWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createWiegandReader" : {
      "post" : {
        "description" : "Create a third party Wiegand Reader component",
        "operationId" : "createWiegandReader",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateWiegandReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateWiegandReaderWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/deleteAccessControlledDoor" : {
      "post" : {
        "description" : "Delete the specified access controlled door",
        "operationId" : "deleteAccessControlledDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_DeleteAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_DeleteAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/deleteComponent" : {
      "post" : {
        "description" : "Delete a component",
        "operationId" : "deleteComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_DeleteComponentWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_DeleteComponentWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/deleteComponentsByOwnerDevice" : {
      "post" : {
        "description" : "Delete all components owned by the specified device",
        "operationId" : "deleteComponentsByOwnerDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_DeleteComponentsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_DeleteComponentsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoorShadows" : {
      "post" : {
        "description" : "Find access controlled door shadows within the org",
        "operationId" : "findAccessControlledDoorShadows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorShadowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorShadowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoorShadowsByLocation" : {
      "post" : {
        "description" : "Find access controlled door shadows within the specified location",
        "operationId" : "findAccessControlledDoorShadowsByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorShadowsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorShadowsByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoors" : {
      "post" : {
        "description" : "Find access controlled doors within the org",
        "operationId" : "findAccessControlledDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoorsByLocation" : {
      "post" : {
        "description" : "Find access controlled doors within the specified location",
        "operationId" : "findAccessControlledDoorsByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoorsByOwnerDevice" : {
      "post" : {
        "description" : "Find access controlled doors for the specified owner device",
        "operationId" : "findAccessControlledDoorsByOwnerDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAllComponentShadows" : {
      "post" : {
        "description" : "Retrieve all component shadows for the specified component uuids",
        "operationId" : "findAllComponentShadows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAllComponentShadowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAllComponentShadowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByAccessControlledDoor" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified AccessControlledDoor",
        "operationId" : "findComponentEventsByAccessControlledDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByApiToken" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified api token",
        "operationId" : "findComponentEventsByApiToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByApiTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByComponent" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified component",
        "operationId" : "findComponentEventsByComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByComponentWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByComponentWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByCorrelation" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified correlation id",
        "operationId" : "findComponentEventsByCorrelation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByCorrelationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByCorrelationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByCredentialHexValue" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified credential hex value",
        "operationId" : "findComponentEventsByCredentialHexValue",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialHexValueWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialHexValueWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByCredentialUuid" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified credential uuid",
        "operationId" : "findComponentEventsByCredentialUuid",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialUuidWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialUuidWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByCredentialValue" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified credential value",
        "operationId" : "findComponentEventsByCredentialValue",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialValueWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialValueWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByLocation" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified location",
        "operationId" : "findComponentEventsByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByOwnerDevice" : {
      "post" : {
        "deprecated" : true,
        "description" : "Retrieve all component events relevant to the specified owner device (i.e. DC20's device uuid)",
        "operationId" : "findComponentEventsByOwnerDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsBySupportAuthority" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified api token",
        "operationId" : "findComponentEventsBySupportAuthority",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsBySupportAuthorityWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsBySupportAuthorityWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByUser" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified User",
        "operationId" : "findComponentEventsByUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsForCurrentUser" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the rhombus key user",
        "operationId" : "findComponentEventsForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsForOrgDashboard" : {
      "post" : {
        "description" : "Retrieve component events across the entire org for the Dashboard.",
        "operationId" : "findComponentEventsForOrgDashboard",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsForOrgDashboardWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsForOrgDashboardWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsForVideoIntercom" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified Video Intercom and optional AccessControlledDoor",
        "operationId" : "findComponentEventsForVideoIntercom",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsForVideoIntercomWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsForVideoIntercomWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByAccessControlledDoor" : {
      "post" : {
        "description" : "Find component seekpoints by access controlled door",
        "operationId" : "findComponentSeekPointsByAccessControlledDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByAccessControlledDoors" : {
      "post" : {
        "description" : "Find component seekpoints by access controlled doors",
        "operationId" : "findComponentSeekPointsByAccessControlledDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByComponent" : {
      "post" : {
        "description" : "Find component seekpoints by component",
        "operationId" : "findComponentSeekPointsByComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByComponentWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByComponentWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByLocation" : {
      "post" : {
        "description" : "Find component seekpoints by location",
        "operationId" : "findComponentSeekPointsByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByOwnerDevice" : {
      "post" : {
        "description" : "Find component seekpoints by owner device",
        "operationId" : "findComponentSeekPointsByOwnerDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByUser" : {
      "post" : {
        "description" : "Find component seekpoints by user",
        "operationId" : "findComponentSeekPointsByUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentShadowsByOwnerDevice" : {
      "post" : {
        "description" : "Retrieve component shadows by the specified owner device uuid",
        "operationId" : "findComponentShadowsByOwnerDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentShadowsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentShadowsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentsByOwnerDevice" : {
      "post" : {
        "description" : "Retrieve a list of components owned by a Rhombus device (i.e. DC20's device uuid)",
        "operationId" : "findComponentsByOwnerDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findDistinctByOriginatorCredentialReceivedEventsByAccessControlledDoor" : {
      "post" : {
        "description" : "Retrieve a list of credential received events by access controlled door with distinct originators. Can be used for a list of distinct users that have entered a door within the queried timeframe",
        "operationId" : "findDistinctByOriginatorCredentialReceivedEventsByAccessControlledDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindDistinctOriginatorCredentialReceivedEventsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindDistinctOriginatorCredentialReceivedEventsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findDistinctByOriginatorCredentialReceivedEventsByLocation" : {
      "post" : {
        "description" : "Retrieve a list of credential received events by location with distinct originators. Can be used for a list of distinct users that have entered a location within the queried timeframe",
        "operationId" : "findDistinctByOriginatorCredentialReceivedEventsByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindDistinctOriginatorCredentialReceivedEventsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindDistinctOriginatorCredentialReceivedEventsByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findMinimalStateAccessControlledDoors" : {
      "post" : {
        "description" : "Find minimal state access controlled doors within the org",
        "operationId" : "findMinimalStateAccessControlledDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findMinimalStateAccessControlledDoorsByLocation" : {
      "post" : {
        "description" : "Find minimal state access controlled doors within the specified location",
        "operationId" : "findMinimalStateAccessControlledDoorsByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/getAccessControlledDoorLabelsForOrg" : {
      "post" : {
        "description" : "Get all access controlled door labels for the organization",
        "operationId" : "getAccessControlledDoorLabelsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_GetAccessControlledDoorLabelsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_GetAccessControlledDoorLabelsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/getCurrentExpectedAccessControlledDoorState" : {
      "post" : {
        "description" : "Attempts to determine what the current door state is expected to be based on the current door configuration and current time.",
        "operationId" : "getCurrentExpectedAccessControlledDoorState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_GetCurrentExpectedAccessControlledDoorStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_GetCurrentExpectedAccessControlledDoorStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/getFullAccessControlledDoorShadow" : {
      "post" : {
        "description" : "Retrieve the door shadow and all of its component shadows",
        "operationId" : "getFullAccessControlledDoorShadow",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_GetFullAccessControlledDoorShadowWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_GetFullAccessControlledDoorShadowWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/getOrCreateDevicePhysicalPortConfig" : {
      "post" : {
        "description" : "Gets a physical port layout for the specified device, components owned by that device and details about the port configuration validity. Map is instantiated if it doesn't currently exist as part of the call.",
        "operationId" : "getOrCreateDevicePhysicalPortConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_GetOrCreateDevicePhysicalPortConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_GetOrCreateDevicePhysicalPortConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/removeAccessControlledDoorLabel" : {
      "post" : {
        "description" : "Remove a label to an access controlled door",
        "operationId" : "removeAccessControlledDoorLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_RemoveAccessControlledDoorLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_RemoveAccessControlledDoorLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateAccessControlledDoor" : {
      "post" : {
        "description" : "Updates an access controlled door",
        "operationId" : "updateAccessControlledDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedDoorPositionIndicator" : {
      "post" : {
        "description" : "Update a door position indicator component",
        "operationId" : "updateIntegratedDoorPositionIndicator",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedDoorPositionIndicatorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedDoorPositionIndicatorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedDoorRelay" : {
      "post" : {
        "description" : "Update a door relay component",
        "operationId" : "updateIntegratedDoorRelay",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedDoorRelayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedDoorRelayWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericButton" : {
      "post" : {
        "description" : "Update a generic button component",
        "operationId" : "updateIntegratedGenericButton",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericButtonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericInput" : {
      "post" : {
        "description" : "Update a generic input component",
        "operationId" : "updateIntegratedGenericInput",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericInputWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericInputWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericRelay" : {
      "post" : {
        "description" : "Update a generic relay component",
        "operationId" : "updateIntegratedGenericRelay",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelayWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericRelaySteadyState" : {
      "post" : {
        "description" : "Update a generic relay component's steady state",
        "operationId" : "updateIntegratedGenericRelaySteadyState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelaySteadyStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelaySteadyStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericRelayTransientState" : {
      "post" : {
        "description" : "Activate a generic relay for a brief period",
        "operationId" : "updateIntegratedGenericRelayTransientState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelayTransientStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelayTransientStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedRequestToExit" : {
      "post" : {
        "description" : "Update a request to exit component",
        "operationId" : "updateIntegratedRequestToExit",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedRequestToExitWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedRequestToExitWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateOsdpDoorReader" : {
      "post" : {
        "description" : "Update a third party OSDP Reader component",
        "operationId" : "updateOsdpDoorReader",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateOsdpReaderWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateRhombusOsdpDoorReader" : {
      "post" : {
        "description" : "Update a Rhombus OSDP Reader component",
        "operationId" : "updateRhombusOsdpDoorReader",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateRhombusOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateRhombusOsdpReaderWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateWiegandDoorReader" : {
      "post" : {
        "description" : "Update a third party Wiegand Reader component",
        "operationId" : "updateWiegandDoorReader",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateWiegandReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateWiegandReaderWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/customer/acceptUsagePolicy" : {
      "post" : {
        "operationId" : "acceptUsagePolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_AcceptUsagePolicyRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_AcceptUsagePolicyResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Accept usage policy for user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/deleteAllNotificationSnoozeSettings" : {
      "post" : {
        "description" : "Delete a policy pause setting for a device",
        "operationId" : "deleteAllNotificationSnoozeSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/deleteNotificationSnoozeSettingForComponentComposite" : {
      "post" : {
        "description" : "Delete a policy pause setting for a component composite",
        "operationId" : "deleteNotificationSnoozeSettingForComponentComposite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/deleteNotificationSnoozeSettingForDevice" : {
      "post" : {
        "description" : "Delete a policy pause setting for a device",
        "operationId" : "deleteNotificationSnoozeSettingForDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/deleteNotificationSnoozeSettingForLocation" : {
      "post" : {
        "description" : "Delete a policy pause setting for a location",
        "operationId" : "deleteNotificationSnoozeSettingForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getCurrentPartnerUser" : {
      "post" : {
        "operationId" : "getCurrentPartnerUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetCurrentPartnerUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetCurrentPartnerUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get details about current partner user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getCurrentRhombusKeyUser" : {
      "post" : {
        "description" : "Retrieve the RhombusKey User config, user details and org summary details for the current rhombus key user.",
        "operationId" : "getCurrentRhombusKeyUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetCurrentRhombusKeyUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetCurrentRhombusKeyUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getCurrentUser" : {
      "post" : {
        "operationId" : "getCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get details about current user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getCurrentUserConsoleOrgsForContextSwitch" : {
      "post" : {
        "operationId" : "getCurrentUserConsoleOrgsForContextSwitch",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetCurrentUserConsoleOrgsForContextSwitchWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetCurrentUserConsoleOrgsForContextSwitchWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Retrieve orgs the current user is able to context switch into for Console",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getCurrentUserRhombusKeyOrgsForContextSwitch" : {
      "post" : {
        "operationId" : "getCurrentUserRhombusKeyOrgsForContextSwitch",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetCurrentUserRhombusKeyOrgsForContextSwitchWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetCurrentUserRhombusKeyOrgsForContextSwitchWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Retrieve orgs the current user is able to context switch into for Rhombus Key",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getCurrentUserSessions" : {
      "post" : {
        "operationId" : "getCurrentUserSessions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetCurrentUserSessionsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetCurrentUserSessionsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get list of sessions for user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getDashboardStatus" : {
      "post" : {
        "operationId" : "getDashboardStatus",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetDashboardstatusWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetDashboardStatusWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get dashboard information for user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getRhombusKeyConfigForCurrentUser" : {
      "post" : {
        "description" : "Retrieve the RhombusKey mobile app config for a user. If it does not exist a default one is created and returned.",
        "operationId" : "getRhombusKeyConfigForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetRhombusKeyConfigForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetRhombusKeyConfigForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getUserSnoozedNotificationSettings" : {
      "post" : {
        "description" : "Get the current and planned user notification snooze details",
        "operationId" : "getUserSnoozedNotificationSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetUserSnoozedNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetUserSnoozedNotificationSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/logoutAllOtherCurrentUserSessions" : {
      "post" : {
        "operationId" : "logoutAllOtherCurrentUserSessions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_LogoutAllOtherCurrentUserSessionsRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_LogoutAllOtherCurrentUserSessionsResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Logout all other sessions for user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/setFlag" : {
      "post" : {
        "operationId" : "setCustomerFlag",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_SetFlagWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_SetFlagWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Store a flag for user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/snoozeAllNotifications" : {
      "post" : {
        "operationId" : "snoozeAllUserNotifications",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_SnoozeAllNotificationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_SnoozeAllNotificationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Snooze all user notifications",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/snoozeComponentCompositeNotifications" : {
      "post" : {
        "operationId" : "snoozeUserNotificationsForComponentComposite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_SnoozeNotificationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_SnoozeNotificationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Snooze user notifications for component composite",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/snoozeDeviceNotifications" : {
      "post" : {
        "operationId" : "snoozeUserNotificationsForDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_SnoozeNotificationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_SnoozeNotificationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Snooze user notifications for device",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/snoozeLocationNotifications" : {
      "post" : {
        "operationId" : "snoozeUserNotificationsForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_SnoozeNotificationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_SnoozeNotificationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Snooze user notifications for location",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/updateCurrentPartnerUser" : {
      "post" : {
        "operationId" : "updateCurrentPartnerUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_UpdateCurrentPartnerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_UpdateCurrentPartnerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Update details for a current partner user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/updateCurrentUser" : {
      "post" : {
        "operationId" : "updateCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_UpdateCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_UpdateCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Update details for current user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/updateCurrentUserNotificationSettings" : {
      "post" : {
        "description" : "Update notification settings for user",
        "operationId" : "updateCurrentUserNotificationSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateUserNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateUserNotificationSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice", "Customer Webservice" ]
      }
    },
    "/api/customer/updateDashboardCustomizations" : {
      "post" : {
        "operationId" : "updateDashboardCustomizations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_UpdateDashboardCustomizationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_UpdateDashboardCustomizationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Update dashboard customizations for current user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/updateFrontendCustomizations" : {
      "post" : {
        "operationId" : "updateFrontendCustomizations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_UpdateFrontendCustomizationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_UpdateFrontendCustomizationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Update frontend customizations for current user",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/updateRhombusKeyPreferencesForCurrentUser" : {
      "post" : {
        "description" : "Update the RhombusKey mobile app preferences for the current user",
        "operationId" : "updateRhombusKeyPreferencesForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_UpdateRhombusKeyPreferencesForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_UpdateRhombusKeyPreferencesForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/developer/createEventListener" : {
      "post" : {
        "description" : "Create an event listener",
        "operationId" : "createEventListener",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Developer_CreateEventListenerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Developer_CreateEventListenerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Developer Webservice" ]
      }
    },
    "/api/developer/deleteEventListener" : {
      "post" : {
        "description" : "Delete an event listener",
        "operationId" : "deleteEventListener",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Developer_DeleteEventListenerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Developer_DeleteEventListenerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Developer Webservice" ]
      }
    },
    "/api/developer/getAllEventListeners" : {
      "post" : {
        "description" : "Get a list of all event listeners",
        "operationId" : "getAllEventListeners",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Developer_GetAllEventListenersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Developer_GetAllEventListenersWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Developer Webservice" ]
      }
    },
    "/api/developer/getEventListenersForDevice" : {
      "post" : {
        "description" : "Get a list of event listeners for a device",
        "operationId" : "getEventListenersForDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Developer_GetEventListenersForDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Developer_GetEventListenersForDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Developer Webservice" ]
      }
    },
    "/api/deviceconfig/getFacetedConfig" : {
      "post" : {
        "description" : "Get a device's config",
        "operationId" : "getFacetedConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deviceconfig_GetConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deviceconfig_GetFacetedUserConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Device Config Webservice" ]
      }
    },
    "/api/deviceconfig/updateFacetedConfig" : {
      "post" : {
        "description" : "Update a device's config",
        "operationId" : "updateFacetedConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deviceconfig_UpdateFacetedUserConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Device Config Webservice" ]
      }
    },
    "/api/door/getDoorEventsForSensor" : {
      "post" : {
        "description" : "Get list of door open/close events for door sensor",
        "operationId" : "getDoorEventsForSensor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Door_GetDoorEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Door_GetDoorEventsForSensorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Webservice" ]
      }
    },
    "/api/door/getDoorEventsForTags" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of door open/close events for door sensor",
        "operationId" : "getDoorEventsForTags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Door_GetDoorEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Door_GetDoorEventsForSensorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Webservice" ]
      }
    },
    "/api/door/getDoorPresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for sensor",
        "operationId" : "getDoorPresenceWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Webservice" ]
      }
    },
    "/api/door/getMinimalDoorStateList" : {
      "post" : {
        "description" : "Get basic state information for all door sensors",
        "operationId" : "getMinimalDoorStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Door_GetMinimalDoorStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Door_GetMinimalDoorStatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Webservice" ]
      }
    },
    "/api/door/updateDetails" : {
      "post" : {
        "description" : "Update details for door sensor. Note: uuid is a required field",
        "operationId" : "updateDoorSensorDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Door_UpdateDoorSensorDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Door_UpdateDoorSensorDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Webservice" ]
      }
    },
    "/api/doorbellcamera/calibrateFloorplanProjection" : {
      "post" : {
        "description" : "Generate the homography to project detections onto a floorplan.",
        "operationId" : "doorbellCameraCalibrateFloorplanProjection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_CalibrateFloorplanProjectionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_CalibrateFloorplanProjectionWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/createRawHttpStream" : {
      "post" : {
        "description" : "Create a raw HTTP stream for a doorbell camera.",
        "operationId" : "createDoorbellCameraRawHttpStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_CreateRawHttpStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_CreateRawHttpStreamWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/createRuleForDoorbellCamera" : {
      "post" : {
        "description" : "Create rule for a doorbell camera.",
        "operationId" : "createRuleForDoorbellCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_CreateRuleForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_CreateRuleForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/createSharedLiveVideoStream" : {
      "post" : {
        "description" : "Share an live video stream for a doorbell camera",
        "operationId" : "createDoorbellCameraSharedLiveVideoStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_CreateSharedLiveVideoStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_CreateSharedLiveVideoStreamWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/delete" : {
      "post" : {
        "description" : "Remove the doorbell camera from the organization",
        "operationId" : "deleteDoorbellCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_DeleteDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_DeleteDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/deleteRawHttpStream" : {
      "post" : {
        "description" : "Delete a raw HTTP stream for a doorbell camera.",
        "operationId" : "deleteDoorbellCameraRawHttpStream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_DeleteRawHttpStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_DeleteRawHttpStreamWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/deleteRuleForDoorbellCamera" : {
      "post" : {
        "description" : "Delete rule for a doorbell camera.",
        "operationId" : "deleteRuleForDoorbellCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_DeleteRuleForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_DeleteRuleForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/findAllRawHttpStreams" : {
      "post" : {
        "description" : "Get a list of all doorbell cameras raw HTTP streams.",
        "operationId" : "findAllDoorbellCameraRawHttpStreams",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_FindAllRawHttpStreamsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_FindAllRawHttpStreamsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/findComponentEventsForDoorbellCamera" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified Doorbell Camera",
        "operationId" : "findComponentEventsForDoorbellCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_FindComponentEventsForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_FindComponentEventsForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/findComponentSeekPointsForDoorbellCamera" : {
      "post" : {
        "description" : "Retrieve all component seekpoints relevant to the specified Doorbell Camera",
        "operationId" : "findComponentSeekPointsForDoorbellCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_FindComponentSeekPointsForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_FindComponentSeekPointsForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/findSharedLiveVideoStreams" : {
      "post" : {
        "description" : "Get list of all shared live streams for doorbell camera",
        "operationId" : "findDoorbellCameraSharedLiveVideoStreams",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_FindSharedLiveVideoStreamsForWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_FindSharedLiveVideoStreamsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getBoundingBoxes" : {
      "post" : {
        "description" : "Get object bounding boxes for a specified doorbell camera. Note: bounding box values are given as permyriad shorts relative to image.  To convert to absolute pixel values, use the following: abs_pix = (rel_permyriad / 10000) * image_dim",
        "operationId" : "getDoorbellCameraBoundingBoxes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetBoundingBoxesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_GetBoundingBoxesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getConfig" : {
      "post" : {
        "description" : "Get a doorbell camera's config",
        "operationId" : "getDoorbellCameraConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deviceconfig_GetConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getDoorbellCameraRulesForOrg" : {
      "post" : {
        "description" : "Get rules for all doorbell cameras in an org.",
        "operationId" : "getDoorbellCameraRulesForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraRulesForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraRulesForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getFullState" : {
      "post" : {
        "description" : "Get detailed information about state of specified doorbell camera",
        "operationId" : "getDoorbellCameraFullState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetFullDeviceStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraFullStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getMediaUris" : {
      "post" : {
        "description" : "Get media uris for doorbell camera to retrieve footage and audio",
        "operationId" : "getDoorbellCameraMediaUris",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetMediaUrisWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraMediaUrisWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getMinimalStateList" : {
      "post" : {
        "description" : "Get basic state information about all doorbell cameras in organization",
        "operationId" : "getDoorbellCameraMinimalStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetMinimalDeviceStateListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraMinimalStateListWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getOfflineLanStreamingInfo" : {
      "post" : {
        "description" : "Get required information for offline lan streaming on all video intercoms",
        "operationId" : "getDoorbellCameraOfflineLanStreamingInfo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraOfflineLanStreamingInfoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraOfflineLanStreamingInfoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getPresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for a doorbell camera",
        "operationId" : "getDoorbellCameraPresenceWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_GetPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Webservice", "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getRawHttpStreams" : {
      "post" : {
        "description" : "Get info for all raw HTTP streams from a doorbell camera.",
        "operationId" : "getDoorbellCameraRawHttpStreams",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_GetRawHttpStreamsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_GetRawHttpStreamsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getRulesForDoorbellCamera" : {
      "post" : {
        "description" : "Get all rules for a doorbell camera.",
        "operationId" : "getRulesForDoorbellCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_GetRulesForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_GetRulesForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getSeekpoints" : {
      "post" : {
        "description" : "Get activity seekpoints for specified doorbell camera",
        "operationId" : "getDoorbellCameraSeekPoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_GetSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getUptimeWindows" : {
      "post" : {
        "description" : "Get uptime information for a doorbell camera",
        "operationId" : "getDoorbellCameraUptimeWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetUptimeWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_GetUptimeWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Webservice", "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/reboot" : {
      "post" : {
        "description" : "Reboot the specified doorbell camera",
        "operationId" : "rebootDoorbellCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_RebootDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_RebootDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/updateConfig" : {
      "post" : {
        "description" : "Update a doorbell camera's config",
        "operationId" : "updateDoorbellCameraConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_UpdateDoorbellCameraConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/updateDetails" : {
      "post" : {
        "description" : "Update hardware details of doorbell camera.",
        "operationId" : "updateDoorbellCameraDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_UpdateDoorbellCameraDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateDeviceDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorcontroller/createDoorControllerRule" : {
      "post" : {
        "description" : "Create a rule owned by a specific door controller.",
        "operationId" : "createDoorControllerRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_CreateDoorControllerRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_CreateDoorControllerRuleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/delete" : {
      "post" : {
        "description" : "Remove the door controller from the organization as long as it has no doors",
        "operationId" : "deleteDoorController",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_DeleteDoorControllerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_DeleteDoorControllerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/deleteDoorControllerRule" : {
      "post" : {
        "description" : "Delete a rule owned by a specific door controller.",
        "operationId" : "deleteDoorControllerRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_DeleteDoorControllerRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_DeleteDoorControllerRuleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/getConfig" : {
      "post" : {
        "description" : "Get a door controller's config",
        "operationId" : "getDoorControllerConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deviceconfig_GetConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_GetDoorControllerConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/getDoorControllerRule" : {
      "post" : {
        "description" : "Get a specific rule owned by the door controller.",
        "operationId" : "getDoorControllerRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_GetDoorControllerRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_GetDoorControllerRuleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/getDoorControllerRules" : {
      "post" : {
        "description" : "Get all rules owned by the door controller.",
        "operationId" : "getDoorControllerRules",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_GetDoorControllerRulesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_GetDoorControllerRulesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/getDoorControllerStateList" : {
      "post" : {
        "description" : "Get state information about all door controllers in an organization",
        "operationId" : "getDoorControllerStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_GetDoorControllerStateListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_GetDoorControllerStateListWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/registerDiscoveredRhombusReader" : {
      "post" : {
        "description" : "Register a Rhombus reader that a Door Controller has discovered",
        "operationId" : "registerDiscoveredRhombusReader",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_RegisterDiscoveredRhombusReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_RegisterDiscoveredRhombusReaderWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/updateConfig" : {
      "post" : {
        "description" : "Update a door controller's config",
        "operationId" : "updateDoorControllerConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_UpdateDoorControllerConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/updateDetails" : {
      "post" : {
        "description" : "Update details for door controller. Note: uuid is a required field",
        "operationId" : "updateDoorControllerDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_UpdateDoorControllerDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_UpdateDoorControllerDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/updateDoorControllerRule" : {
      "post" : {
        "description" : "Update a rule owned by a specific door controller.",
        "operationId" : "updateDoorControllerRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_UpdateDoorControllerRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_UpdateDoorControllerRuleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/ethernettester/getEthernetTesterConfig" : {
      "post" : {
        "description" : "Get test configuration",
        "operationId" : "getEthernetTesterConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ethernettester_GetEthernetTesterConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ethernettester_GetEthernetTesterConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "EthernetTester Webservice" ]
      }
    },
    "/api/event/createClipGroup" : {
      "post" : {
        "description" : "Create a group of clips",
        "operationId" : "createClipGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_groups_CreateClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_groups_CreateClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/createSharedClipGroup" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /createSharedClipGroupV3 instead",
        "operationId" : "createSharedClipGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_CreateSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_CreateSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/createSharedClipGroupV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /createSharedClipGroupV3 instead",
        "operationId" : "createSharedClipGroupV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_CreateSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_CreateSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/createSharedClipGroupV3" : {
      "post" : {
        "description" : "Share multiple clips in a single page",
        "operationId" : "createSharedClipGroupV3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_CreateSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_CreateSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteAlertMonitoringThreatCase" : {
      "post" : {
        "operationId" : "deleteAlertMonitoringThreatCase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DeleteAlertMonitoringThreatCaseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DeleteAlertMonitoringThreatCaseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteAlertMonitoringThreatCaseByStatus" : {
      "post" : {
        "operationId" : "deleteAlertMonitoringThreatCaseByStatus",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DeleteAlertMonitoringThreatCaseByStatusWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DeleteAlertMonitoringThreatCaseByStatusWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteClipGroup" : {
      "post" : {
        "description" : "Delete a clip group",
        "operationId" : "deleteClipGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_groups_DeleteClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_groups_DeleteClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteSavedClip" : {
      "post" : {
        "description" : "Delete all types of saved clips (splices in progress, completed splices, saved alerts)",
        "operationId" : "deleteSavedClip",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DeleteSavedClipWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DeleteSavedClipWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteSharedClipGroup" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /deleteSharedClipGroupV2 instead",
        "operationId" : "deleteSharedClipGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DeleteSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DeleteSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteSharedClipGroupV2" : {
      "post" : {
        "description" : "Delete a shared clip page",
        "operationId" : "deleteSharedClipGroupV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DeleteSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DeleteSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/dismissAllPolicyAlertsForDevice" : {
      "post" : {
        "description" : "Dismiss all policy alerts for each specified device(s)",
        "operationId" : "dismissAllPolicyAlertsForDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DismissAllPolicyAlertsForDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DismissAllPolicyAlertsForDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/dismissAllPolicyAlertsV2" : {
      "post" : {
        "description" : "Dismiss all policy alerts in organization",
        "operationId" : "dismissAllPolicyAlertsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DismissAllPolicyAlertsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DismissAllPolicyAlertsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/dismissPolicyAlertV2" : {
      "post" : {
        "description" : "Dismiss a policy alert",
        "operationId" : "dismissPolicyAlertV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DismissPolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DismissPolicyAlertWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/dismissPolicyAlertsV2" : {
      "post" : {
        "description" : "Dismiss multiple policy alerts",
        "operationId" : "dismissPolicyAlertsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DismissPolicyAlertsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DismissPolicyAlertsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getAlertMonitoringThreatCase" : {
      "post" : {
        "operationId" : "getAlertMonitoringThreatCase",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetAlertMonitoringThreatCaseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetAlertMonitoringThreatCaseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getAlertMonitoringThreatCases" : {
      "post" : {
        "operationId" : "getAlertMonitoringThreatCases",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetAlertMonitoringThreatCasesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetAlertMonitoringThreatCasesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getClipGroupDetails" : {
      "post" : {
        "description" : "Get details like seekpoints for a clip group",
        "operationId" : "getClipGroupDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_groups_GetClipGroupDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_groups_GetClipGroupDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getClipGroupsForOrg" : {
      "post" : {
        "description" : "Get all clip groups for an org",
        "operationId" : "getClipGroupsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_groups_GetClipGroupsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_groups_GetClipGroupsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getClipWithProgress" : {
      "post" : {
        "description" : "Get a specified saved clip with current progress",
        "operationId" : "getClipWithProgress",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetClipWithProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetClipWithProgressWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getClipsWithProgress" : {
      "post" : {
        "description" : "Get list of saved clips in organization, with current progress",
        "operationId" : "getClipsWithProgress",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetClipsWithProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetClipsWithProgressWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getExpiringClipsForOrg" : {
      "post" : {
        "description" : "Get list of expiring saved clips in organization.",
        "operationId" : "getExpiringClipsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetClipsWithProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetClipsWithProgressWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getMotionGrid" : {
      "post" : {
        "description" : "Get motion data for specified camera",
        "operationId" : "getMotionGrid",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetMotionGridWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetMotionGridWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getMotionHeatMap" : {
      "post" : {
        "description" : "Get aggregated motion heatmap for specified time period and camera. Divides a camera's resolution into a 36x64 grid and counts the number of motion events that occurred in each cell.",
        "operationId" : "getMotionHeatMap",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetMotionGridWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetMotionGridCountsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlert" : {
      "post" : {
        "description" : "Get information about a policy alert",
        "operationId" : "getPolicyAlert",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertCount" : {
      "post" : {
        "description" : "Get count of policy alerts",
        "operationId" : "getPolicyAlertCount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertCountWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertCountWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertDetails" : {
      "post" : {
        "description" : "Get detailed information about policy alert, including seekpoints and bounding boxes",
        "operationId" : "getPolicyAlertDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertGroupsForDevice" : {
      "post" : {
        "description" : "Get recent policy alerts for device, grouped by time. Groups are constructed of alerts that occur within 2 minutes of the previous alert, up to a maximum of 50. Results are returned in reverse-chronological order, so all fields are relative to that ordering.",
        "operationId" : "getPolicyAlertGroupsForDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsForDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsForDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertGroupsForLocation" : {
      "post" : {
        "description" : "Get recent policy alerts for a location, grouped by time. Groups are constructed of alerts that occur within 2 minutes of the previous alert, up to a maximum of 50. Results are returned in reverse-chronological order, so all fields are relative to that ordering.",
        "operationId" : "getPolicyAlertGroupsForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertGroupsV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent policy alerts for organization, grouped by time. Groups are constructed of alerts that occur within 2 minutes of the previous alert, up to a maximum of 50. Results are returned in reverse-chronological order, so all fields are relative to that ordering.",
        "operationId" : "getPolicyAlertGroupsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get information about a policy alert",
        "operationId" : "getPolicyAlertV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlerts" : {
      "post" : {
        "description" : "Get recent policy alerts for organization",
        "operationId" : "getPolicyAlerts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertsV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent policy alerts for organization",
        "operationId" : "getPolicyAlertsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClipCount" : {
      "post" : {
        "description" : "Get a count of saved clips in and organization",
        "operationId" : "getSavedClipCount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipCountWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipCountWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClipDetails" : {
      "post" : {
        "description" : "Get detailed information about a saved clip, including seekpoints and bounding boxes",
        "operationId" : "getSavedClipDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClips" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getSavedClipsV2 instead",
        "operationId" : "getSavedClips",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClipsByExternalTransactionId" : {
      "post" : {
        "description" : "Get list of saved clips matching the external transaction id",
        "operationId" : "getSavedClipsByExternalTransactionId",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipsByExternalTransactionIdWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipsByExternalTransactionIdWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClipsV2" : {
      "post" : {
        "description" : "Get list of saved clips in organization",
        "operationId" : "getSavedClipsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSharedClipGroupDetails" : {
      "post" : {
        "description" : "Get detailed information about a shared clip page, including seekpoints and bounding boxes",
        "operationId" : "getSharedClipGroupDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSharedClipGroupDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSharedClipGroupDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSharedClipGroups" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getSharedClipGroupsV2 instead",
        "operationId" : "getSharedClipGroups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSharedClipGroupsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSharedClipGroupsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSharedClipGroupsV2" : {
      "post" : {
        "description" : "Get list of shared clip pages in organization",
        "operationId" : "getSharedClipGroupsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSharedClipGroupsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSharedClipGroupsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSplicedClipsInProgress" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "DEPRECATED_getSplicedClipsInProgress",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSplicedClipsInProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSplicedClipsInProgressWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getUnhealthyDeviceAlerts" : {
      "post" : {
        "description" : "Get list of unhealthy devices in organization",
        "operationId" : "getUnhealthyDeviceAlerts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetUnhealthyDeviceAlertsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetUnhealthyDeviceAlertsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/muteNotificationsForDevice" : {
      "post" : {
        "description" : "Mute notifications from a device for specified number of seconds",
        "operationId" : "muteNotificationsForDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_MuteNotificationsForDevicetWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_MuteNotificationsForDevicetWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/reportBadPolicyAlert" : {
      "post" : {
        "description" : "Report a bad policy event (AI false positive) and send information for feedback. Note: this adds the clip to our AI training data set",
        "operationId" : "reportBadPolicyAlert",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_ReportBadPolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_ReportBadPolicyAlertWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/savePolicyAlertV2" : {
      "post" : {
        "description" : "Save a policy alert as a saved clip",
        "operationId" : "savePolicyAlertV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_SavePolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_SavePolicyAlertWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/searchMotionGrid" : {
      "post" : {
        "description" : "Search motion grid for motion events occuring in specified grid cells. Note: motion grid is a 64x36 grid of cells with the upper left hand corner being (0, 0)",
        "operationId" : "searchMotionGrid",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_SearchMotionGridWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_SearchMotionGridWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/searchMotionGridWithActivities" : {
      "post" : {
        "description" : "Search motion grid for motion events occuring in specified grid cells. Note: motion grid is a 64x36 grid of cells with the upper left hand corner being (0, 0)",
        "operationId" : "searchMotionGridWithActivities",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/unSavePolicyAlertV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Unsave policy alert and remove associated saved clip",
        "operationId" : "unSavePolicyAlertV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_UnSavePolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_UnSavePolicyAlertWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/updateClipGroup" : {
      "post" : {
        "description" : "Update a clip group's title, description, or clips",
        "operationId" : "updateClipGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_groups_UpdateClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_groups_UpdateClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/updatePolicyAlertTextDescription" : {
      "post" : {
        "description" : "Update the text description field of a policy alert. Development only for now",
        "operationId" : "updatePolicyAlertTextDescription",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_UpdatePolicyAlertTextDescriptionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_UpdatePolicyAlertTextDescriptionWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/updateSavedClip" : {
      "post" : {
        "description" : "Update saved clip title or summary",
        "operationId" : "updateSavedClip",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_UpdateSavedClipWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_UpdateSavedClipWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/updateSharedClipGroup" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /updateSharedClipGroupV2 instead",
        "operationId" : "updateSharedClipGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_UpdateSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_UpdateSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/updateSharedClipGroupV2" : {
      "post" : {
        "description" : "Update shared clip page title, description, password, or expiration time",
        "operationId" : "updateSharedClipGroupV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_UpdateSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_UpdateSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/eventSearch/getCameraOrDoorbellCameraSeekpoints" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get camera or doorbell camera seekpoints",
        "operationId" : "getCameraOrDoorbellCameraSeekpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetCameraOrDoorbellCameraSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Eventsearch_GetCameraOrDoorbellCameraSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Search Webservice" ]
      }
    },
    "/api/eventSearch/getEventSeekpoints" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get normal seekpoint events and access control seekpoint events",
        "operationId" : "getDeprecatedEventSeekpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Eventsearch_GetEventSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Eventsearch_GetEventSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Search Webservice" ]
      }
    },
    "/api/eventSearch/getEventSeekpointsV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get normal seekpoint events and access control seekpoint events",
        "operationId" : "getDeprecatedEventSeekpointsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Eventsearch_GetEventSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Eventsearch_GetEventSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Search Webservice" ]
      }
    },
    "/api/eventSearchV2/getEventSeekpoints" : {
      "post" : {
        "description" : "Get normal seekpoint events and access control seekpoint events",
        "operationId" : "getEventSeekpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Eventsearch_GetEventSeekpointsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Event Search Webservice" ]
      }
    },
    "/api/export/audit" : {
      "post" : {
        "description" : "Download audit log",
        "operationId" : "exportAudit",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportAuditEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/csv; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/climateEvents" : {
      "post" : {
        "description" : "Download climate event log",
        "operationId" : "exportClimateEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportClimateEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/countReports" : {
      "post" : {
        "description" : "Download count report",
        "operationId" : "exportCountReports",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportCountReportsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/csv; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/diagnostic" : {
      "post" : {
        "description" : "Download diagnostic log",
        "operationId" : "exportDiagnostic",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportDiagnosticEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/csv; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/doorEvents" : {
      "post" : {
        "description" : "Download door event log",
        "operationId" : "exportDoorEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportDoorEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/environmentalGatewayEvents" : {
      "post" : {
        "description" : "Download environmental gateway event log",
        "operationId" : "exportEnvironmentalGatewayEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportEnvironmentalGatewayEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/inventory" : {
      "post" : {
        "description" : "Download device inventory",
        "operationId" : "exportInventory",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportInventoryWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/csv; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/motionEvents" : {
      "post" : {
        "description" : "Download motion event log for motion sensors",
        "operationId" : "exportMotionEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportMotionEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/peopleCountEvents" : {
      "post" : {
        "description" : "Download people count report",
        "operationId" : "exportPeopleCountEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportPeopleCountEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/csv; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/peopleEvents" : {
      "post" : {
        "description" : "Download people event log",
        "operationId" : "exportPeopleEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportPeopleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/proximityEvents" : {
      "post" : {
        "description" : "Download proximity tag event log",
        "operationId" : "exportProximityEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportProximityEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/proximityLocomotionEvents" : {
      "post" : {
        "description" : "Download proximity tag event log",
        "operationId" : "exportProximityLocomotionEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportProximityLocomotionEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/uptime" : {
      "post" : {
        "description" : "Download device uptime reports",
        "operationId" : "exportUptime",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportUptimeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/zip" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/users" : {
      "post" : {
        "description" : "Download org users",
        "operationId" : "exportUsers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportUsersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/csv; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/vehicleEvents" : {
      "post" : {
        "deprecated" : true,
        "description" : "Download vehicle event log.  Use /export/vehicleEventsV2 instead for more functionality",
        "operationId" : "exportVehicleEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportVehicleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/csv; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/vehicleEventsV2" : {
      "post" : {
        "description" : "Download vehicle event log",
        "operationId" : "exportVehicleEventsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetVehicleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/csv; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/deleteFaceEvent" : {
      "post" : {
        "description" : "Delete face event.",
        "operationId" : "deleteFaceEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_DeleteFaceEventWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_DeleteFaceEventWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/exportFaceEventsByOrg" : {
      "post" : {
        "description" : "Export face events for an organization",
        "operationId" : "exportFaceEventsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_ExportFaceEventsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "text/csv; charset=UTF-8" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Export Webservice", "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/findFaceEventsByDeviceForReporting" : {
      "post" : {
        "description" : "Find face events by device for reporting purposes. The events are returned in reverse chronological order, with the latest events appearing first.",
        "operationId" : "findFaceEventsByDeviceForReporting",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByDeviceForReportingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByDeviceForReportingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/findFaceEventsByLocationForReporting" : {
      "post" : {
        "description" : "Find face events by location for reporting purposes. The events are returned in reverse chronological order, with the latest events appearing first.",
        "operationId" : "findFaceEventsByLocationForReporting",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByLocationForReportingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByLocationForReportingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/findFaceEventsByOrg" : {
      "post" : {
        "description" : "Find face events for an organization. The events are returned in reverse chronological order, with the latest events appearing first.",
        "operationId" : "findFaceEventsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/findFaceEventsByOrgForReporting" : {
      "post" : {
        "description" : "Find face events by org for reporting purposes. The events are returned in reverse chronological order, with the latest events appearing first.",
        "operationId" : "findFaceEventsByOrgForReporting",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByOrgForReportingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByOrgForReportingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/findSimilarFaceEvents" : {
      "post" : {
        "description" : "Find face events for an organization that are similar to a specified face event. The events are returned in reverse chronological order, with the latest events appearing first.",
        "operationId" : "findSimilarFaceEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_FindSimilarFaceEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_FindSimilarFaceEventsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/findSimilarFaceEventsByEmbedding" : {
      "post" : {
        "description" : "Find face events for an organization that are similar to a specified face embedding. The events are returned in reverse chronological order, with the latest events appearing first.",
        "operationId" : "findSimilarFaceEventsByEmbedding",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_FindSimilarFaceEventsByEmbeddingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_FindSimilarFaceEventsByEmbeddingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/findSimilarFaceEventsByFaceMatchmaker" : {
      "post" : {
        "description" : "Find face events for an organization that are similar to a specified face matchmaker. The events are returned in reverse chronological order, with the latest events appearing first.",
        "operationId" : "findSimilarFaceEventsByFaceMatchmaker",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_FindSimilarFaceEventsByFaceMatchmakerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_FindSimilarFaceEventsByFaceMatchmakerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/getFaceEvent" : {
      "post" : {
        "description" : "Get face event.",
        "operationId" : "getFaceEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_GetFaceEventWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_GetFaceEventWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/processFaceEventSearchImage" : {
      "post" : {
        "description" : "Generates an embedding for the face search image if a face is detected. The embedding can be used to search for similar face events.",
        "operationId" : "processFaceEventSearchImage",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_ProcessFaceEventSearchImageWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/updateFaceEvent" : {
      "post" : {
        "description" : "Update face event.",
        "operationId" : "updateFaceEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_UpdateFaceEventWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_UpdateFaceEventWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/createFaceMatchmakerFromSighting" : {
      "post" : {
        "description" : "Create face matchmaker from face sighting.",
        "operationId" : "createFaceMatchmakerFromSighting",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/createPersonAndFaceMatchmakers" : {
      "post" : {
        "description" : "Create person and face matchmakers.",
        "operationId" : "createPersonAndFaceMatchmakers",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          },
          "description" : "Multipart form-data containing:a required 'personName' form field,an optional list of 'faceEventUuid' fields,an optional .jpg or .png file (maximum file size: 5MB)"
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_CreatePersonAndFaceMatchmakersWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/deleteFaceMatchmaker" : {
      "post" : {
        "description" : "Delete face matchmaker.",
        "operationId" : "deleteFaceMatchmaker",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_DeleteFaceMatchmakerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_DeleteFaceMatchmakerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/findFaceMatchmakersByOrg" : {
      "post" : {
        "description" : "Find face matchmakers by org.",
        "operationId" : "findFaceMatchmakersByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/findFaceMatchmakersByPerson" : {
      "post" : {
        "description" : "Find face matchmakers by person.",
        "operationId" : "findFaceMatchmakersByPerson",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/findFaceUploadMetadataByTransaction" : {
      "post" : {
        "description" : "Find face upload metadata by transaction.",
        "operationId" : "findFaceUploadMetadataByTransaction",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/getFaceMatchingConfig" : {
      "post" : {
        "description" : "Get face matching configuration.",
        "operationId" : "getFaceMatchingConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_GetFaceMatchingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_GetFaceMatchingConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/getFaceMatchmaker" : {
      "post" : {
        "description" : "Get face matchmaker.",
        "operationId" : "getFaceMatchmaker",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_GetFaceMatchmakerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_GetFaceMatchmakerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/updateFaceMatchingConfig" : {
      "post" : {
        "description" : "Update face matching configuration.",
        "operationId" : "updateFaceMatchingConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_UpdateFaceMatchingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_UpdateFaceMatchingConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/uploadFaceMatchmakerForPerson/{personUuid}" : {
      "post" : {
        "description" : "Upload face matchmaker image for a specific person.",
        "operationId" : "uploadFaceMatchmakerForPerson",
        "parameters" : [ {
          "in" : "path",
          "name" : "personUuid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "description" : "Unique transaction id to track the face matchmakers upload progress. If not specified, the system will generate it.",
          "in" : "query",
          "name" : "transaction",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          },
          "description" : "Multipart form-data containing a .jpg or .png file. Maximum file size: 5MB."
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_UploadFaceMatchmakerForPersonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/uploadFaceMatchmakers" : {
      "post" : {
        "description" : "Upload face matchmaker images for one or more people. The uploaded file name is matched to a person's name. If a person is not found and createPersonIfNotFound is set to true, a new person is created. ",
        "operationId" : "uploadFaceMatchmakers",
        "parameters" : [ {
          "description" : "Unique transaction id to track the face matchmakers upload progress. If not specified, the system will generate it.",
          "in" : "query",
          "name" : "transaction",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "description" : "If a person is not found and createPersonIfNotFound is set to true, a new person is created",
          "in" : "query",
          "name" : "createPersonIfNotFound",
          "schema" : {
            "type" : "boolean",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          },
          "description" : "Multipart form-data containing a .jpg or .png file. Maximum file size: 5MB."
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_UploadFaceMatchmakersWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/validateFaceMatchmakerImage" : {
      "post" : {
        "description" : "Validates if image is suitable to be a face matchmaker.",
        "operationId" : "validateFaceMatchmakerImage",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          },
          "description" : "Multipart form-data containing a .jpg or .png file. Maximum file size: 5MB."
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_ValidateFaceMatchmakerImageWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/person/addPersonLabel" : {
      "post" : {
        "description" : "Add a label to a person",
        "operationId" : "addPersonLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_AddPersonLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_AddPersonLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/createPerson" : {
      "post" : {
        "description" : "Create a person for face recognition purposes.",
        "operationId" : "createPerson",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_CreatePersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_CreatePersonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/deletePerson" : {
      "post" : {
        "description" : "Delete person created for face recognition purposes.",
        "operationId" : "deletePerson",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_DeletePersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_DeletePersonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/findPeopleByOrg" : {
      "post" : {
        "description" : "Find people created for face recognition purposes in an organization.",
        "operationId" : "findPeopleByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_FindPeopleByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_FindPeopleByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/findPersonLabelsByOrg" : {
      "post" : {
        "description" : "Find all person labels for organization.",
        "operationId" : "findPersonLabelsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_FindPersonLabelsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_FindPersonLabelsByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/getPerson" : {
      "post" : {
        "description" : "Get a person created for face recognition purposes.",
        "operationId" : "getPerson",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_GetPersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_GetPersonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/removePersonLabel" : {
      "post" : {
        "description" : "Remove a label from a person.",
        "operationId" : "removePersonLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_RemovePersonLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_RemovePersonLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/updatePerson" : {
      "post" : {
        "description" : "Update person created for face recognition purposes.",
        "operationId" : "updatePerson",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_UpdatePersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_UpdatePersonWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/feature/getDeviceEventTypes" : {
      "post" : {
        "description" : "Get possible event types for specified device dependent on features enabled",
        "operationId" : "getDeviceEventTypes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_GetDeviceEventTypesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_GetDeviceEventTypesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/feature/getDeviceFeatures" : {
      "post" : {
        "description" : "Get enabled features for a device",
        "operationId" : "getDeviceFeatures",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_GetDeviceFeaturesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_GetDeviceFeaturesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/feature/getDeviceFeaturesList" : {
      "post" : {
        "description" : "Get enabled features for all devices in an org",
        "operationId" : "getDeviceFeaturesList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_GetDeviceFeaturesListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_GetDeviceFeaturesListWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/feature/getFeatureCompatabilityMatrix" : {
      "post" : {
        "description" : "Get feature compatability matrix",
        "operationId" : "getFeatureCompatabilityMatrix",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_GetFeatureCompatabilityMatrixWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_GetFeatureCompatabilityMatrixWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/feature/updateDeviceFeatures" : {
      "post" : {
        "description" : "Update enabled features for a device",
        "operationId" : "updateDeviceFeatures",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_UpdateDeviceFeaturesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_UpdateDeviceFeaturesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/guestExternal/updateGuestByToken" : {
      "post" : {
        "operationId" : "updateGuestByToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGuestByTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Update guest by token",
        "tags" : [ "GuestToken Webservice" ]
      }
    },
    "/api/guestmanagement/activateKiosk" : {
      "post" : {
        "description" : "Activate kiosk and redirect to kiosk page",
        "operationId" : "activateKiosk",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_ActivateKioskWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_ActivateKioskWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/addUsersToGuestManagementHostGroup" : {
      "post" : {
        "description" : "Adds specified users to a guest management host group",
        "operationId" : "addUsersToGuestManagementHostGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_AddUsersToOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_AddUsersToOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/createGuest" : {
      "post" : {
        "description" : "Create Guest Without Email Invite",
        "operationId" : "createGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_CreateGuestWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/createGuestInvite" : {
      "post" : {
        "description" : "Create Guest Invite",
        "operationId" : "createGuestInvite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_CreateGuestInviteWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/createGuestManagementHostGroup" : {
      "post" : {
        "description" : "Creates a guest management host group",
        "operationId" : "createGuestManagementHostGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_CreateOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_CreateOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/createGuestManagementSettings" : {
      "post" : {
        "description" : "Create guest management settings",
        "operationId" : "createGuestManagementSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_CreateGuestManagementSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_CreateGuestManagementSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/deleteGuest" : {
      "post" : {
        "description" : "Delete Guest",
        "operationId" : "deleteGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GuestByEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/deleteGuestManagementHostGroup" : {
      "post" : {
        "description" : "Delete a guest management host group",
        "operationId" : "deleteGuestManagementHostGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_DeleteOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_DeleteOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/deleteGuestManagementSettings" : {
      "post" : {
        "description" : "Delete guest management settings",
        "operationId" : "deleteGuestManagementSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_BaseGuestManagementWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/exportGuestActivity" : {
      "post" : {
        "description" : "Export Guest Activity .csv",
        "operationId" : "exportGuestActivity",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_ExportGuestsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/exportGuestActivityForGuest" : {
      "post" : {
        "description" : "Export Single Guest Activity .csv",
        "operationId" : "exportGuestActivityForGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_ExportGuestActivitiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/exportGuestList" : {
      "post" : {
        "description" : "Export Guest List .csv",
        "operationId" : "exportGuestList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_ExportGuestsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/findAllUsersForGuestManagementHostGroup" : {
      "post" : {
        "description" : "Find all users belonging to an guest management host group",
        "operationId" : "findAllUsersForGuestManagementHostGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindAllUsersForOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindAllUsersForOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/findGuestManagementHostGroupByExactName" : {
      "post" : {
        "description" : "Retrieve the guest management host group with the specified name",
        "operationId" : "findGuestManagementHostGroupByExactName",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByExactNameWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByExactNameWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/findGuestManagementHostGroupMembershipsByUser" : {
      "post" : {
        "description" : "Find all guest management host group memberships by user",
        "operationId" : "findGuestManagementHostGroupMembershipsByUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupMembershipsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupMembershipsByUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/findGuestManagementHostGroupsByNamePrefix" : {
      "post" : {
        "description" : "Retrieve all guest management host groups with a name starting with the specified prefix",
        "operationId" : "findGuestManagementHostGroupsByNamePrefix",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByNamePrefixWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByNamePrefixWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/findGuestManagementHostGroupsByOrg" : {
      "post" : {
        "description" : "Retrieve all guest management host groups defined in the org",
        "operationId" : "findGuestManagementHostGroupsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/findGuestManagementHostGroupsByUserMembership" : {
      "post" : {
        "description" : "Find all guest management host groups a user belongs to",
        "operationId" : "findGuestManagementHostGroupsByUserMembership",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByUserMembershipWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByUserMembershipWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getActivitiesForGuest" : {
      "post" : {
        "description" : "Get activity logs for a guest",
        "operationId" : "getActivitiesForGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GetActivityLogsForGuestWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetGuestActivityLogsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getActivitiesForLocation" : {
      "post" : {
        "description" : "Get activity logs for a location",
        "operationId" : "getActivitiesForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GetActivityLogsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetGuestActivityLogsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getAllGuestInvitesByOrg" : {
      "post" : {
        "description" : "Get All Guest Invites by Org",
        "operationId" : "getAllGuestInvitesByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GetInvitesForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetAllGuestInvitesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getAllGuestsByOrg" : {
      "post" : {
        "description" : "Get All Guests by Org",
        "operationId" : "getAllGuestsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_BaseGuestManagementWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetAllGuestsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getGuest" : {
      "post" : {
        "description" : "Get Guest",
        "operationId" : "getGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GuestByEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetGuestWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getGuestActivityLogs" : {
      "post" : {
        "description" : "Get org wide activity logs for guests",
        "operationId" : "getGuestActivityLogs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GetGuestActivityLogsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetGuestActivityLogsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getGuestInvite" : {
      "post" : {
        "description" : "Get Guest Invite",
        "operationId" : "getGuestInvite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GuestInviteWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetGuestInviteWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getGuestInviteByEmail" : {
      "post" : {
        "description" : "Get Guest Invite by Email",
        "operationId" : "getGuestInvitesByEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GuestInvitesByEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetGuestInvitesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getGuestManagementSettings" : {
      "post" : {
        "description" : "Get guest management Settings for org",
        "operationId" : "getGuestManagementSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_BaseGuestManagementWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetGuestManagementSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getKioskInfo" : {
      "post" : {
        "description" : "Get info for kiosk",
        "operationId" : "getKioskInfo",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetKioskInfoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getKiosksForOrg" : {
      "post" : {
        "description" : "Get kiosks for org",
        "operationId" : "getGuestManagementKiosksForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_BaseGuestManagementWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetKiosksForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/getNametagTemplateForGuest" : {
      "post" : {
        "description" : "Get name tag template for guest",
        "operationId" : "getNametagTemplateForGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GetNametagTemplateForGuestWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_GetNametagTemplateForGuestWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/inviteGuest" : {
      "post" : {
        "description" : "Invite Guest Via Email",
        "operationId" : "inviteGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GuestWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/removeUsersFromGuestManagementHostGroup" : {
      "post" : {
        "description" : "Removes specified users from a guest management host group",
        "operationId" : "removeUsersFromGuestManagementHostGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_RemoveUsersFromOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_RemoveUsersFromOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/sendFormInvite" : {
      "post" : {
        "description" : "Invite Guest Via Email",
        "operationId" : "sendFormInvite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GuestWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/signInGuest" : {
      "post" : {
        "description" : "Sign In Guest",
        "operationId" : "signInGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GuestCheckinWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/signOutGuest" : {
      "post" : {
        "description" : "Sign Out Guest",
        "operationId" : "signOutGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_GuestCheckinWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/updateGuest" : {
      "post" : {
        "description" : "Update Guest",
        "operationId" : "updateGuest",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_UpdateGuestWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/updateGuestInvite" : {
      "post" : {
        "description" : "Update Guest Invite",
        "operationId" : "updateGuestInvite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_UpdateGuestInviteWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/updateGuestManagementHostGroup" : {
      "post" : {
        "description" : "Updates a guest management host group's meta information like name and description",
        "operationId" : "updateGuestManagementHostGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_UpdateOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_UpdateOrgGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/guestmanagement/updateGuestManagementSettings" : {
      "post" : {
        "description" : "Update guest management settings",
        "operationId" : "updateGuestManagementSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Guestmanagement_UpdateGuestManagementSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Guestmanagement_UpdateGuestManagementSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Webservice" ]
      }
    },
    "/api/help/feedback" : {
      "post" : {
        "description" : "Leave feedback of our system",
        "operationId" : "sendFeedback",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_SendFeedbackWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_SendFeedbackWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/openTickets" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get Open Support Tickets For A Client Organization. Tickets are associated to an organziation based on the requester's organization association.\nThis endpoint returns a paginated response sorted by the request date. The first page is indexed at 1 and each page has up to 100 ticket entries.",
        "operationId" : "getOpenTickets",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_GetOpenTicketsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_GetOpenTicketsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/openTicketsV2" : {
      "post" : {
        "description" : "Get Open Support Tickets For A Client Organization. Tickets are associated to an organziation based on the requester's organization association.",
        "operationId" : "getOpenTicketsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_GetOpenTicketsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_GetOpenTicketsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/rma" : {
      "post" : {
        "description" : "Open an RMA for a camera",
        "operationId" : "processRMA",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_ProcessRMAWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_ProcessRMAWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/ticket" : {
      "post" : {
        "description" : "Open a support ticket",
        "operationId" : "createTicket",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_CreateTicketWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_CreateTicketWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/ticketWithFile" : {
      "post" : {
        "description" : "Open a support ticket and optionally include a file upload. Uploading multiple Files are not supported throught this call.",
        "operationId" : "createTicketWithFile",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          },
          "description" : "multipart/form-data with field 'file' for the file and 'request' for the CreateTicketWSRequest(see '/ticket' for details on CreateTicketWSRequest)"
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_CreateTicketWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/triageDevice" : {
      "post" : {
        "description" : "Triage a device connection/recording issue",
        "operationId" : "triageDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_TriageDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_TriageDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteDeviceIntegration" : {
      "post" : {
        "description" : "Delete Device integration",
        "operationId" : "deleteDeviceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteFlicIntegration" : {
      "post" : {
        "description" : "Delete Flic Integration",
        "operationId" : "deleteFlicIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteHaloIntegration" : {
      "post" : {
        "description" : "Delete Halo Smart Sensor integration",
        "operationId" : "deleteHaloIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteIntuifaceIntegration" : {
      "post" : {
        "description" : "Delete Intuiface integration",
        "operationId" : "deleteIntuifaceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteNineOneOneCellularIntegration" : {
      "post" : {
        "description" : "Delete 911Cellular Integration",
        "operationId" : "deleteNineOneOneCellularIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteOmnialertIntegration" : {
      "post" : {
        "description" : "Delete Omnialert integration",
        "operationId" : "deleteOmnialertIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteShellyIntegration" : {
      "post" : {
        "description" : "Delete Shelly integration",
        "operationId" : "deleteShellyIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/generateFlicToken" : {
      "post" : {
        "description" : "Generate Rhombus Token for use",
        "operationId" : "generateFlicToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/generateNineOneOneCellularToken" : {
      "post" : {
        "description" : "Generate Rhombus Token for use",
        "operationId" : "generateNineOneOneCellularToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getDeviceIntegration" : {
      "post" : {
        "description" : "Get Device integration",
        "operationId" : "getDeviceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getFlicDevices" : {
      "post" : {
        "description" : "Grabs all Flic Devices",
        "operationId" : "getFlicDevices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetFlicDevicesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetFlicDevicesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getFlicIntegration" : {
      "post" : {
        "description" : "Get Flic Integration",
        "operationId" : "getFlicIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getFlicModule" : {
      "post" : {
        "description" : "Get Uploaded Module UUID",
        "operationId" : "getFlicModule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetFlicDevicesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetFlicDevicesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getNineOneOneCellularIntegration" : {
      "post" : {
        "description" : "Get 911Cellular Integration",
        "operationId" : "getNineOneOneCellularIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getNineOneOneCellularSecurityZones" : {
      "post" : {
        "description" : "Get 911Cellular Security Zones",
        "operationId" : "getNineOneOneCellularSecurityZones",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetNineOneOneCSZonesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetNineOneOneCSZonesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getOmnialertIntegration" : {
      "post" : {
        "description" : "Get Omnialert integration",
        "operationId" : "getOmnialertIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getShellyIntegration" : {
      "post" : {
        "description" : "Get Shelly integration",
        "operationId" : "getShellyIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/initiateShellyAuth" : {
      "post" : {
        "description" : "Initiate the Shelly Auth Process",
        "operationId" : "initiateShellyAuth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateCallbackAuthRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateCallbackAuthResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/togglePower" : {
      "post" : {
        "description" : "Toggle power for a managed power switch",
        "operationId" : "togglePower",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_TogglePowerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_TogglePowerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateDeviceIntegration" : {
      "post" : {
        "description" : "Update Device integration",
        "operationId" : "updateDeviceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateDeviceIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateFlicIntegration" : {
      "post" : {
        "description" : "Update Flic Integration",
        "operationId" : "updateFlicIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateFlicIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateHaloIntegration" : {
      "post" : {
        "description" : "Update Halo Smart Sensor integration",
        "operationId" : "updateHaloIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateHaloIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateIntuifaceIntegration" : {
      "post" : {
        "description" : "Update Intuiface integration",
        "operationId" : "updateIntuifaceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateIntuifaceIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateNineOneOneCellularIntegration" : {
      "post" : {
        "description" : "Update 911Cellular Integration",
        "operationId" : "updateNineOneOneCellularIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateNineOneOneCellularIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateOmnialertIntegration" : {
      "post" : {
        "description" : "Update Omnialert integration",
        "operationId" : "updateOmnialertIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOmnialertIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOmnialertIntegrationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateShellyIntegration" : {
      "post" : {
        "description" : "Update Shelly rules engine integration",
        "operationId" : "updateShellyIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateShellyIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/aperio/clearDtc" : {
      "post" : {
        "description" : "Issues a command to clear the device's DTC",
        "operationId" : "clearDtc",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_aperio_ClearAperioDtcWSRequest"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_aperio_ClearAperioDtcWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_aperio_ClearAperioDtcWSResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_aperio_ClearAperioDtcWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aperio Webservice" ]
      }
    },
    "/api/integrations/accessControl/aperio/createAperioDoors" : {
      "post" : {
        "description" : "Create one or more Aperio Door component(s).",
        "operationId" : "createAperioAccessControlledDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateAperioDoorsWSRequest"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateAperioDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateAperioDoorsWSResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateAperioDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aperio Webservice" ]
      }
    },
    "/api/integrations/accessControl/aperio/createAperioGateway" : {
      "post" : {
        "description" : "Create an Aperio Gateway component.",
        "operationId" : "createAperioGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateAperioGatewayWSRequest"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateAperioGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateAperioGatewayWSResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateAperioGatewayWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aperio Webservice" ]
      }
    },
    "/api/integrations/accessControl/aperio/downloadCertificate" : {
      "post" : {
        "description" : "Download a certificate to use with Aperio's devices.",
        "operationId" : "downloadCertificate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_aperio_DownloadCertificateWSRequest"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_aperio_DownloadCertificateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aperio Webservice" ]
      }
    },
    "/api/integrations/accessControl/aperio/getAperioIntegration" : {
      "post" : {
        "description" : "Retrieve the Aperio integration configuration.",
        "operationId" : "getAperioIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetAperioIntegrationWSRequest"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetAperioIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetAperioIntegrationWSResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetAperioIntegrationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aperio Webservice" ]
      }
    },
    "/api/integrations/accessControl/aperio/rebootAperioGateway" : {
      "post" : {
        "description" : "Reboot an Aperio gateway that is connected to a Door Controller.",
        "operationId" : "rebootAperioGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_aperio_RebootAperioGatewayWSRequest"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_aperio_RebootAperioGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_aperio_RebootAperioGatewayWSResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_aperio_RebootAperioGatewayWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aperio Webservice" ]
      }
    },
    "/api/integrations/accessControl/aperio/updateAperioIntegration" : {
      "post" : {
        "description" : "Update the Aperio integration configuration.",
        "operationId" : "updateAperioIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAperioIntegrationWSRequest"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAperioIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aperio Webservice" ]
      }
    },
    "/api/integrations/accessControl/aperio/uploadFirmwareFile" : {
      "post" : {
        "description" : "Upload a firmware file which will be deployed to Aperio's communication hubs.",
        "operationId" : "uploadFirmwareFile",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  }
                }
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "$ref" : "#/components/schemas/FormDataContentDisposition"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Aperio Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteAmtIntegration" : {
      "post" : {
        "description" : "Delete Amt badge integration",
        "operationId" : "deleteAmtIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteAvigilonAltaIntegrationV2" : {
      "post" : {
        "description" : "Delete Avigilon Alta badge integration V2",
        "operationId" : "deleteAvigilonAltaIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteBrivoIntegration" : {
      "post" : {
        "description" : "Delete Brivo badge integration",
        "operationId" : "deleteBrivoIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteBrivoIntegrationV2" : {
      "post" : {
        "description" : "Delete Brivo badge integration V2",
        "operationId" : "deleteBrivoIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteBrivoIntegrationV3" : {
      "post" : {
        "description" : "Delete Brivo badge integration V3",
        "operationId" : "deleteBrivoIntegrationV3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteButterflymxIntegration" : {
      "post" : {
        "description" : "Delete ButterflyMX badge integration",
        "operationId" : "deleteButterflymxIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteButterflymxIntegrationV2" : {
      "post" : {
        "description" : "Delete ButterflyMX badge integration V2",
        "operationId" : "deleteButterflymxIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteGeneaIntegration" : {
      "post" : {
        "description" : "Delete Genea badge integration",
        "operationId" : "deleteGeneaIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteGeneaIntegrationV2" : {
      "post" : {
        "description" : "Delete Genea badge integration V2",
        "operationId" : "deleteGeneaIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteInnerRangeIntegration" : {
      "post" : {
        "description" : "Delete Inner Range integration",
        "operationId" : "deleteInnerRangeIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteKisiIntegration" : {
      "post" : {
        "description" : "Delete Kisi badge integration",
        "operationId" : "deleteKisiIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteKisiIntegrationV2" : {
      "post" : {
        "description" : "Delete Kisi badge integration V2",
        "operationId" : "deleteKisiIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteOpenpathIntegration" : {
      "post" : {
        "description" : "Delete Openpath badge integration",
        "operationId" : "deleteOpenpathIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteOpentechAllianceIntegration" : {
      "post" : {
        "description" : "Delete Opentech Alliance integration",
        "operationId" : "deleteOpentechAllianceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteOpentechAllianceIntegrationV2" : {
      "post" : {
        "description" : "Delete Opentech Alliance integration",
        "operationId" : "deleteOpentechAllianceIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deletePdkIntegration" : {
      "post" : {
        "description" : "Delete ProDataKey badge integration",
        "operationId" : "deletePdkIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deletePdkIntegrationV2" : {
      "post" : {
        "description" : "Delete ProDataKey badge integration",
        "operationId" : "deletePdkIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deletePlaceOsIntegration" : {
      "post" : {
        "description" : "Delete PlaceOs badge integration",
        "operationId" : "deletePlaceOsIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deletePlaceOsIntegrationV2" : {
      "post" : {
        "description" : "Delete PlaceOs badge integration",
        "operationId" : "deletePlaceOsIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/enablePdkIntegration" : {
      "get" : {
        "description" : "Enabled and Redirect to ProDataKey",
        "operationId" : "enablePdkIntegration",
        "parameters" : [ {
          "in" : "query",
          "name" : "systemId",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "clientOrgUuid",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getAccessControlIntegrationsForAlm" : {
      "post" : {
        "description" : "Get list of v2 Access Control integrations for org that can be used for Rhombus Alarm Monitoring",
        "operationId" : "getAccessControlIntegrationsForAlm",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetAccessControlIntegrationsForAlmWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getAmtReaders" : {
      "post" : {
        "description" : "Get list of AMT readers to assign cameras",
        "operationId" : "getAmtReaders",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetAmtReadersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getAvigilonAltaIntegration" : {
      "post" : {
        "description" : "Get Avigilon Alta integration",
        "operationId" : "getAvigilonAltaIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getBrivoDoors" : {
      "post" : {
        "description" : "Get list of available Brivo doors to assign cameras",
        "operationId" : "getBrivoDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getBrivoDoorsV2" : {
      "post" : {
        "description" : "Get list of available Brivo doors to assign cameras",
        "operationId" : "getBrivoDoorsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getBrivoDoorsV3" : {
      "post" : {
        "description" : "Get list of available Brivo doors to assign cameras",
        "operationId" : "getBrivoDoorsV3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getBrivoIntegrationV2" : {
      "post" : {
        "description" : "Get Brivo badge integration",
        "operationId" : "getBrivoIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getButterflymxIntegrationV2" : {
      "post" : {
        "description" : "Get ButterflyMX badge integration",
        "operationId" : "getButterflymxIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getButterflymxPanels" : {
      "post" : {
        "description" : "Get list of available ButterflyMX panels to assign cameras",
        "operationId" : "getButterflymxPanels",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetButterflymxPanelsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetButterflymxPanelsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getButterflymxPanelsV2" : {
      "post" : {
        "description" : "Get list of available ButterflyMX panels to assign cameras",
        "operationId" : "getButterflymxPanelsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetButterflymxPanelsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetButterflymxPanelsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getGeneaDoors" : {
      "post" : {
        "description" : "Get list of Genea doors to assign cameras",
        "operationId" : "getGeneaDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetGeneaDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetGeneaDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getGeneaIntegration" : {
      "post" : {
        "description" : "Get Genea integration",
        "operationId" : "getGeneaIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getInnerRangeConsoles" : {
      "post" : {
        "description" : "Get Inner Range console settings",
        "operationId" : "getInnerRangeConsoles",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetInnerRangeConsolesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetInnerRangeConsolesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getInnerRangeDoors" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of Inner Range doors",
        "operationId" : "getInnerRangeDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetInnerRangeDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetInnerRangeDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getInnerRangeIntegration" : {
      "post" : {
        "description" : "Get Inner Range integration",
        "operationId" : "getInnerRangeIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getKisiDoors" : {
      "post" : {
        "description" : "Get list of Kisi doors to assign cameras",
        "operationId" : "getKisiDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetKisiDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetKisiDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getKisiIntegration" : {
      "post" : {
        "description" : "Get Kisi badge integration",
        "operationId" : "getKisiIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetKisiIntegrationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getKisiIntegrationV2" : {
      "post" : {
        "description" : "Get Kisi badge integration V2",
        "operationId" : "getKisiIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getKisiPlaces" : {
      "post" : {
        "description" : "Get list of Kisi places to assign cameras",
        "operationId" : "getKisiPlaces",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetKisiPlacesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationPlacesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpenpathDoors" : {
      "post" : {
        "description" : "Get list of Openpath doors to assign cameras",
        "operationId" : "getOpenpathDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpenpathDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpenpathLockdownPlans" : {
      "post" : {
        "description" : "Get list of Openpath lockdown plans to trigger",
        "operationId" : "getOpenpathLockdownPlans",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpenpathDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpenpathLockdownsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpentechAllianceFacilities" : {
      "post" : {
        "description" : "Get list of Opentech Alliance facilities",
        "operationId" : "getOpentechAllianceFacilities",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpentechAllianceFacilitiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpentechAllianceFacilitiesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpentechAllianceFacilitiesV2" : {
      "post" : {
        "description" : "Get list of Opentech Alliance facilities",
        "operationId" : "getOpentechAllianceFacilitiesV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpentechAllianceFacilitiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpentechAllianceFacilitiesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpentechAllianceIntegrationV2" : {
      "post" : {
        "description" : "Get Opentech Alliance integration",
        "operationId" : "getOpentechAllianceIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getPdkDoors" : {
      "post" : {
        "description" : "Get list of ProDataKey doors to assign cameras",
        "operationId" : "getPdkDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetPdkDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetPdkDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getPdkIntegration" : {
      "post" : {
        "description" : "Get ProDataKey badge integration",
        "operationId" : "getPdkIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getPdkSystemId" : {
      "post" : {
        "description" : "Get SystemID for ProDataKey badge integration",
        "operationId" : "getPdkSystemId",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetPdkSystemIdWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetPdkSystemIdWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getPlaceOsDoors" : {
      "post" : {
        "description" : "Get list of PlaceOs doors to assign cameras",
        "operationId" : "getPlaceOsDoors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetPlaceOsDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationGenericDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getPlaceOsIntegrationV2" : {
      "post" : {
        "description" : "Get PlaceOs integration",
        "operationId" : "getPlaceOsIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/initiateBrivoOauth" : {
      "post" : {
        "description" : "Initiate Brivo Oauth 2.0 process",
        "operationId" : "initiateBrivoOauth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateBrivoOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/initiateButterflymxOauth" : {
      "post" : {
        "description" : "Initiate Butterflymx Oauth",
        "operationId" : "initiateButterflymxOauth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/revertOpenpathLockdown" : {
      "post" : {
        "description" : "Revert Openpath lockdown plan",
        "operationId" : "revertOpenpathLockdown",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockOpenpathDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/triggerOpenpathLockdown" : {
      "post" : {
        "description" : "Trigger Openpath lockdown plan",
        "operationId" : "triggerOpenpathLockdown",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockOpenpathDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockBrivoDoor" : {
      "post" : {
        "description" : "Unlock Brivo door",
        "operationId" : "unlockBrivoDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockBrivoDoorV2" : {
      "post" : {
        "description" : "Unlock Brivo door",
        "operationId" : "unlockBrivoDoorV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockBrivoDoorV3" : {
      "post" : {
        "description" : "Unlock Brivo door V3",
        "operationId" : "unlockBrivoDoorV3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockGeneaDoor" : {
      "post" : {
        "description" : "Unlock Genea door",
        "operationId" : "unlockGeneaDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockGeneaDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockInnerRangeDoor" : {
      "post" : {
        "description" : "Unlock Inner Range door",
        "operationId" : "unlockInnerRangeDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockKisiDoor" : {
      "post" : {
        "description" : "Unlock Kisi door",
        "operationId" : "unlockKisiDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockKisiDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockOpenpathDoor" : {
      "post" : {
        "description" : "Unlock Openpath door",
        "operationId" : "unlockOpenpathDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockOpenpathDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockOpentechAllianceDoor" : {
      "post" : {
        "description" : "Unlock Opentech Alliance door",
        "operationId" : "unlockOpentechAllianceDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockOpentechAllianceDoorV2" : {
      "post" : {
        "description" : "Unlock Opentech Alliance door",
        "operationId" : "unlockOpentechAllianceDoorV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockPdkDoor" : {
      "post" : {
        "description" : "Unlock ProDataKey door",
        "operationId" : "unlockPdkDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockPlaceOsDoor" : {
      "post" : {
        "description" : "Unlock PlaceOs door",
        "operationId" : "unlockPlaceOsDoor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateAmtIntegration" : {
      "post" : {
        "description" : "Update Amt badge integration",
        "operationId" : "updateAmtIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAmtIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateAvigilonAltaIntegrationV2" : {
      "post" : {
        "description" : "Update Avigilon Alta badge integration V2",
        "operationId" : "updateAvigilonAltaIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAvigilonAltaV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateBrivoIntegration" : {
      "post" : {
        "description" : "Update Brivo badge integration",
        "operationId" : "updateBrivoIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateBrivoIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateBrivoIntegrationV2" : {
      "post" : {
        "description" : "Update Brivo badge integration",
        "operationId" : "updateBrivoIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateBrivoIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateBrivoIntegrationV3" : {
      "post" : {
        "description" : "Update Brivo badge integration V3",
        "operationId" : "updateBrivoIntegrationV3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateBrivoIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateButterflymxIntegration" : {
      "post" : {
        "description" : "Update ButterflyMX badge integration",
        "operationId" : "updateButterflymxIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateButterflymxIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateButterflymxIntegrationV2" : {
      "post" : {
        "description" : "Update ButterflyMX badge integration V2",
        "operationId" : "updateButterflymxIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateButterflymxIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateGeneaIntegration" : {
      "post" : {
        "description" : "Update Genea badge integration",
        "operationId" : "updateGeneaIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGeneaIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateGeneaIntegrationV2" : {
      "post" : {
        "description" : "Update Genea badge integration V2",
        "operationId" : "updateGeneaIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGeneaIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateInnerRangeIntegration" : {
      "post" : {
        "description" : "Update Inner Range integration",
        "operationId" : "updateInnerRangeIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateInnerRangeIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateKisiIntegration" : {
      "post" : {
        "description" : "Update Kisi badge integration",
        "operationId" : "updateKisiIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateKisiIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateKisiIntegrationV2" : {
      "post" : {
        "description" : "Update Kisi badge integration V2",
        "operationId" : "updateKisiIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateKisiIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateOpenpathIntegration" : {
      "post" : {
        "description" : "Update Openpath badge integration",
        "operationId" : "updateOpenpathIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpenpathIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateOpentechAllianceIntegration" : {
      "post" : {
        "description" : "Update Opentech Alliance integration",
        "operationId" : "updateOpentechAllianceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpentechAllianceIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateOpentechAllianceIntegrationV2" : {
      "post" : {
        "description" : "Update Opentech Alliance integration",
        "operationId" : "updateOpentechAllianceIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpentechAllianceIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updatePdkIntegration" : {
      "post" : {
        "description" : "Update ProDataKey badge integration",
        "operationId" : "updatePdkIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePdkIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updatePdkIntegrationV2" : {
      "post" : {
        "description" : "Update ProDataKey badge integration",
        "operationId" : "updatePdkIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePdkIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updatePlaceOsSettings" : {
      "post" : {
        "description" : "Update PlaceOs badge integration",
        "operationId" : "updatePlaceOsSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePlaceOsSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updatePlaceOsSettingsV2" : {
      "post" : {
        "description" : "Update PlaceOs badge integration",
        "operationId" : "updatePlaceOsSettingsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePlaceOsSettingsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/validateKisiApiKey" : {
      "post" : {
        "description" : "Validate Kisi api key",
        "operationId" : "validateKisiApiKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_ValidateKisiApiKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/validateKisiApiKeyV2" : {
      "post" : {
        "description" : "Validate Kisi api key V2",
        "operationId" : "validateKisiApiKeyV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_ValidateKisiApiKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteAmtIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Amt badge integration",
        "operationId" : "deleteAmtIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteDeviceIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Device integration",
        "operationId" : "deleteDeviceIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteMattermostIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Mattermost alert integration",
        "operationId" : "deleteMattermostIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteOpenAIIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete OpenAI integration",
        "operationId" : "deleteOpenAIIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteWebhookIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete outbound webhook alert integration",
        "operationId" : "deleteWebhookIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteWebhookIntegrationV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete entire webhook integration",
        "operationId" : "deleteWebhookIntegrationV2Dep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getAmtReaders" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of AMT readers to assign cameras",
        "operationId" : "getAmtReadersDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetAmtReadersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationDoorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getApiTokenApplications" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details of all open api token requests for organization",
        "operationId" : "getApiTokenApplicationsDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getApiTokens" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of all api tokens for organization",
        "operationId" : "getApiTokensDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetApiTokensWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokensWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getCalendlyEventDetails" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get Calendly event details",
        "operationId" : "getCalendlyEventDetailsDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetCalendlyEventDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetCalendlyEventDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getDeviceIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get Device integration",
        "operationId" : "getDeviceIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getOpenAIIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get OpenAI integration",
        "operationId" : "getOpenAIIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getOpenAIModels" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of OpenAI models",
        "operationId" : "getOpenAIModelsDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpenAIModelsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpenAIModelsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getOrgIntegrations" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details of all third-party integrations for organization",
        "operationId" : "getOrgIntegrationsDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getOrgIntegrationsV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details of all V2 third-party integrations for an organization",
        "operationId" : "getOrgIntegrationsV2Dep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetAllOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getWebhookIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get webhook integration",
        "operationId" : "getWebhookIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteDiceIntegration" : {
      "post" : {
        "description" : "Delete Dice integration",
        "operationId" : "deleteDiceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteEmailIntegration" : {
      "post" : {
        "description" : "Delete email alert integration",
        "operationId" : "deleteEmailIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteInformacastIntegration" : {
      "post" : {
        "description" : "Delete Informacast integration",
        "operationId" : "deleteInformacastIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteLumeoIntegration" : {
      "post" : {
        "description" : "Delete Lumeo integration",
        "operationId" : "deleteLumeoIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteMattermostIntegration" : {
      "post" : {
        "description" : "Delete Mattermost alert integration",
        "operationId" : "deleteMattermostIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteMicrosoftTeamsIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Microsoft Teams alert integration",
        "operationId" : "deleteMicrosoftTeamsIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteMicrosoftTeamsIntegrationV2" : {
      "post" : {
        "description" : "Delete Microsoft Teams alert integration",
        "operationId" : "deleteMicrosoftTeamsIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteMicrosoftTeamsUser" : {
      "post" : {
        "description" : "Remove configurations for Microsoft Teams user",
        "operationId" : "deleteMicrosoftTeamsUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteOpenAIIntegration" : {
      "post" : {
        "description" : "Delete OpenAI integration",
        "operationId" : "deleteOpenAIIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deletePagerDutyIntegration" : {
      "post" : {
        "description" : "Delete PagerDuty alert integration",
        "operationId" : "deletePagerDutyIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deletePimlocIntegration" : {
      "post" : {
        "description" : "Delete Pimloc integration",
        "operationId" : "deletePimlocIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteRaptorIntegration" : {
      "post" : {
        "description" : "Delete Raptor Integration",
        "operationId" : "deleteRaptorIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteServiceNowIntegration" : {
      "post" : {
        "description" : "Delete ServiceNow alert integration",
        "operationId" : "deleteServiceNowIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteSlackIntegrationV2" : {
      "post" : {
        "description" : "Delete Slack alert integration v2",
        "operationId" : "deleteSlackIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getDiceIntegration" : {
      "post" : {
        "description" : "Get Dice integration",
        "operationId" : "getDiceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getInformacastIntegration" : {
      "post" : {
        "description" : "Get Informacast integration",
        "operationId" : "getInformacastIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getInformacastScenarios" : {
      "post" : {
        "description" : "Get Informacast scenarios",
        "operationId" : "getInformacastScenarios",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetInformacastScenariosWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getLumeoIntegration" : {
      "post" : {
        "description" : "Get Lumeo integration",
        "operationId" : "getLumeoIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getMicrosoftTeamsIntegration" : {
      "post" : {
        "description" : "Get Microsoft Teams alert integration",
        "operationId" : "getMicrosoftTeamsIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getMicrosoftUsersJoinedTeams" : {
      "post" : {
        "description" : "Get a list of teams a Microsoft Teams user joined",
        "operationId" : "getMicrosoftUsersJoinedTeams",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetMicrosoftUsersJoinedTeamsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getOpenAIIntegration" : {
      "post" : {
        "description" : "Get OpenAI integration",
        "operationId" : "getOpenAIIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getOpenAIModels" : {
      "post" : {
        "description" : "Get list of OpenAI models",
        "operationId" : "getOpenAIModels",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpenAIModelsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpenAIModelsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getPimlocIntegration" : {
      "post" : {
        "description" : "Get Pimloc integration",
        "operationId" : "getPimlocIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getRaptorBuildings" : {
      "post" : {
        "description" : "Get Raptor Buildings",
        "operationId" : "getRaptorBuildings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetRaptorBuildingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getRaptorIntegration" : {
      "post" : {
        "description" : "Get Raptor Integration",
        "operationId" : "getRaptorIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getRaptorTemplates" : {
      "post" : {
        "description" : "Get Raptor Templates",
        "operationId" : "getRaptorTemplates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetRaptorTemplatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/initiateMicrosoftTeamsOAuth" : {
      "post" : {
        "description" : "Initiate the Microsoft Teams OAuth Process",
        "operationId" : "initiateMicrosoftTeamsOAuth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/initiateSlackOAuth" : {
      "post" : {
        "description" : "Initiate the Slack OAuth Process",
        "operationId" : "initiateSlackOAuth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/installMicrosoftTeamsBotForTeam" : {
      "post" : {
        "description" : "Install notification bot for Microsoft Teams team",
        "operationId" : "installMicrosoftTeamsBotForTeam",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMicrosoftTeamsBotForTeamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/installMicrosoftTeamsBotForUser" : {
      "post" : {
        "description" : "Install notification bot for Microsoft Teams user",
        "operationId" : "installMicrosoftTeamsBotForUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/uninstallMicrosoftTeamsBotForTeam" : {
      "post" : {
        "description" : "Uninstall notification bot for Microsoft Teams team",
        "operationId" : "uninstallMicrosoftTeamsBotForTeam",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMicrosoftTeamsBotForTeamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/uninstallMicrosoftTeamsBotForUser" : {
      "post" : {
        "description" : "Uninstall notification bot for Microsoft Teams user",
        "operationId" : "uninstallMicrosoftTeamsBotForUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateDiceIntegration" : {
      "post" : {
        "description" : "Update Dice integration",
        "operationId" : "updateDiceIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateDiceIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateEmailIntegration" : {
      "post" : {
        "description" : "Update email alert integration",
        "operationId" : "updateEmailIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateEmailIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateInformacastIntegration" : {
      "post" : {
        "description" : "Update Informacast rules engine integration",
        "operationId" : "updateInformacastIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateInformacastIntegrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateLumeoIntegration" : {
      "post" : {
        "description" : "Update Lumeo integration",
        "operationId" : "updateLumeoIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateLumeoIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateMattermostIntegration" : {
      "post" : {
        "description" : "Update Mattermost alert integration",
        "operationId" : "updateMattermostIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMattermostIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateMicrosoftTeamsIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Microsoft Teams alert integration",
        "operationId" : "updateMicrosoftTeamsIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMicrosoftTeamsIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateMicrosoftTeamsIntegrationV2" : {
      "post" : {
        "description" : "Update Microsoft Teams alert integration",
        "operationId" : "updateMicrosoftTeamsIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMicrosoftTeamsIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateOpenAIIntegration" : {
      "post" : {
        "description" : "Update OpenAI integration",
        "operationId" : "updateOpenAIIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpenAIIntegrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updatePagerDutyIntegration" : {
      "post" : {
        "description" : "Update PagerDuty alert integration",
        "operationId" : "updatePagerDutyIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePagerDutyIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updatePimlocIntegration" : {
      "post" : {
        "description" : "Update Pimloc integration",
        "operationId" : "updatePimlocIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePimlocIntegrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateRaptorIntegration" : {
      "post" : {
        "description" : "Update Raptor Integration",
        "operationId" : "updateRaptorIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateRaptorIntegrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateServiceNowIntegration" : {
      "post" : {
        "description" : "Update ServiceNow alert integration",
        "operationId" : "updateServiceNowIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateServiceNowIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateSlackIntegration" : {
      "post" : {
        "description" : "Update Slack alert integration",
        "operationId" : "updateSlackIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateSlackIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateSlackIntegrationV2" : {
      "post" : {
        "description" : "Update Slack alert integration v2",
        "operationId" : "updateSlackIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateSlackIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/org/getApiTokenApplications" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details of all open api token requests for organization",
        "operationId" : "getApiTokenApplications",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/org/getApiTokens" : {
      "post" : {
        "description" : "Get list of all api tokens for organization",
        "operationId" : "getApiTokens",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetApiTokensWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokensWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/org/getOrgIntegrations" : {
      "post" : {
        "description" : "Get details of all third-party integrations for organization",
        "operationId" : "getOrgIntegrations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/org/getOrgIntegrationsV2" : {
      "post" : {
        "description" : "Get details of all V2 third-party integrations for an organization",
        "operationId" : "getOrgIntegrationsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetAllOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/org/revokeApiToken" : {
      "post" : {
        "description" : "Remove an api token from organization. Note: this is irreversible",
        "operationId" : "revokeApiToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/org/submitApiTokenApplication" : {
      "post" : {
        "description" : "Request an api token for organization",
        "operationId" : "submitApiTokenApplication",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_SubmitApiTokenApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_SubmitApiTokenApplicationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/org/updateApiToken" : {
      "post" : {
        "description" : "Update display name and permissions of an api token",
        "operationId" : "updateApiToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateApiTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/revokeApiToken" : {
      "post" : {
        "deprecated" : true,
        "description" : "Remove an api token from organization. Note: this is irreversible",
        "operationId" : "revokeApiTokenDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/createEnvoyInvite" : {
      "post" : {
        "description" : "Create an invite with Envoy",
        "operationId" : "createEnvoyInvite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_CreateEnvoyInviteWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteEnvoyIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Envoy badge integration",
        "operationId" : "deleteEnvoyIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteEnvoyIntegrationV2" : {
      "post" : {
        "description" : "Delete Envoy integration",
        "operationId" : "deleteEnvoyIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteGuest" : {
      "post" : {
        "description" : "Delete Guest",
        "operationId" : "deleteGuestI",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GuestWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteGuestManagementIntegration" : {
      "post" : {
        "operationId" : "deleteGuestManagementIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteToastIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Toast integration",
        "operationId" : "deleteToastIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteToastIntegrationV2" : {
      "post" : {
        "description" : "Delete Toast integration",
        "operationId" : "deleteToastIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getAllGuestsByOrg" : {
      "post" : {
        "description" : "Get All Guests by Org",
        "operationId" : "getAllGuestsByOrgI",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetAllGuestsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getCalendlyEventDetails" : {
      "post" : {
        "description" : "Get Calendly event details",
        "operationId" : "getCalendlyEventDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetCalendlyEventDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetCalendlyEventDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getEnvoyIntegration" : {
      "post" : {
        "description" : "Get Envoy integration",
        "operationId" : "getEnvoyIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getGuest" : {
      "post" : {
        "description" : "Get Guest",
        "operationId" : "getGuestI",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GuestWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetGuestWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getGuestManagementIntegration" : {
      "post" : {
        "operationId" : "getGuestManagementIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getToastIntegration" : {
      "post" : {
        "description" : "Get Toast integration",
        "operationId" : "getToastIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getToastServiceAreas" : {
      "post" : {
        "description" : "Get list of Toast service areas to assign cameras",
        "operationId" : "getToastServiceAreas",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetToastServiceAreasWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetToastServiceAreasWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/initiateEnvoyOAuth" : {
      "post" : {
        "description" : "Initiate the Envoy OAuth Process",
        "operationId" : "initiateEnvoyOAuth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateEnvoyIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Envoy badge integration",
        "operationId" : "updateEnvoyIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateEnvoyIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateEnvoyIntegrationV2" : {
      "post" : {
        "description" : "Update Envoy integration",
        "operationId" : "updateEnvoyIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateEnvoyIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateGuest" : {
      "post" : {
        "description" : "Update Guest",
        "operationId" : "updateGuestI",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGuestWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateGuestManagementIntegration" : {
      "post" : {
        "operationId" : "updateGuestManagementIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGuestManagementIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateToastIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Toast integration",
        "operationId" : "updateToastIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateToastIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateToastIntegrationV2" : {
      "post" : {
        "description" : "Update Toast integration",
        "operationId" : "updateToastIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateToastIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteAwsIntegration" : {
      "post" : {
        "description" : "Delete AWS S3 clip storage integration",
        "operationId" : "deleteAwsIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteBoxIntegration" : {
      "post" : {
        "description" : "Delete Box clip storage integration",
        "operationId" : "deleteBoxIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteDropboxIntegration" : {
      "post" : {
        "description" : "Delete Dropbox clip storage integration",
        "operationId" : "deleteDropboxIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteGoogleIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Google Drive clip storage integration",
        "operationId" : "deleteGoogleIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteGoogleIntegrationV2" : {
      "post" : {
        "description" : "Delete Google Drive clip storage integration",
        "operationId" : "deleteGoogleIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteOffice365Integration" : {
      "post" : {
        "description" : "Delete Office365 Sharepoint clip storage integration",
        "operationId" : "deleteOffice365Integration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/getGoogleIntegration" : {
      "post" : {
        "description" : "Get Google Drive clip storage integration",
        "operationId" : "getGoogleIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/initiateDropboxOAuth" : {
      "post" : {
        "description" : "Initiate the Dropbox OAuth Process",
        "operationId" : "initiateDropboxOAuth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/initiateGoogleOAuth" : {
      "post" : {
        "description" : "Initiate the Google OAuth Process",
        "operationId" : "initiateGoogleOAuth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/initiateOffice365OAuth" : {
      "post" : {
        "description" : "Initiate the Office365 OAuth Process",
        "operationId" : "initiateOffice365OAuth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/migrateGoogleIntegration" : {
      "post" : {
        "description" : "Migrate Google Drive settings from the V1 table to the V2 table",
        "operationId" : "migrateGoogleIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/refreshGoogleAccessToken" : {
      "post" : {
        "description" : "Refresh Google access token",
        "operationId" : "refreshGoogleAccessToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RefreshGoogleAccessTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_RefreshGoogleAccessTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/revokeGoogleDriveAccess" : {
      "post" : {
        "description" : "Revokes access to a Google Drive account",
        "operationId" : "revokeGoogleDriveAccess",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RevokeGoogleDriveAccessWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateAwsIntegration" : {
      "post" : {
        "description" : "Update AWS S3 clip storage integration",
        "operationId" : "updateAwsIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAwsIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateBoxIntegration" : {
      "post" : {
        "description" : "Update Box clip storage integration",
        "operationId" : "updateBoxIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateBoxIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateDropboxIntegration" : {
      "post" : {
        "description" : "Update Dropbox clip storage integration",
        "operationId" : "updateDropboxIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateDropboxIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateGoogleIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Google Drive clip storage integration",
        "operationId" : "updateGoogleIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGoogleIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateGoogleIntegrationV2" : {
      "post" : {
        "description" : "Update Google Drive clip storage integration",
        "operationId" : "updateGoogleIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGoogleIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateOffice365Integration" : {
      "post" : {
        "description" : "Update Office365 Sharepoint clip storage integration",
        "operationId" : "updateOffice365Integration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOffice365IntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/submitApiTokenApplication" : {
      "post" : {
        "deprecated" : true,
        "description" : "Request an api token for organization",
        "operationId" : "submitApiTokenApplicationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_SubmitApiTokenApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_SubmitApiTokenApplicationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/subscribeZapierWebhook" : {
      "post" : {
        "deprecated" : true,
        "description" : "Setup a Zapier webhook",
        "operationId" : "subscribeZapierWebhookDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_SubscribeZapierWebhookWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_SubscribeZapierWebhookWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/unsubscribeZapierWebhook" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete a Zapier webhook",
        "operationId" : "unsubscribeZapierWebhookDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnsubscribeZapierWebhookWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateAmtIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Amt badge integration",
        "operationId" : "updateAmtIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAmtIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateApiToken" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update display name and permissions of an api token",
        "operationId" : "updateApiTokenDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateApiTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateDeviceIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Device integration",
        "operationId" : "updateDeviceIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateDeviceIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateMattermostIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Mattermost alert integration",
        "operationId" : "updateMattermostIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMattermostIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateNoonlightSettings" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Noonlight integration",
        "operationId" : "updateNoonlightSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateNoonlightSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateOpenAIIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update OpenAI integration",
        "operationId" : "updateOpenAIIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpenAIIntegrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateWebhookIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update outbound webhook alert integration",
        "operationId" : "updateWebhookIntegrationDep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateWebhookIntegrationV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update preexisting webhooks",
        "operationId" : "updateWebhookIntegrationV2Dep",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/deleteWebhookIntegration" : {
      "post" : {
        "description" : "Delete outbound webhook alert integration",
        "operationId" : "deleteWebhookIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/deleteWebhookIntegrationV2" : {
      "post" : {
        "description" : "Delete entire webhook integration",
        "operationId" : "deleteWebhookIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/getWebhookIntegration" : {
      "post" : {
        "description" : "Get webhook integration",
        "operationId" : "getWebhookIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/subscribeZapierWebhook" : {
      "post" : {
        "description" : "Setup a Zapier webhook",
        "operationId" : "subscribeZapierWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_SubscribeZapierWebhookWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_SubscribeZapierWebhookWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/unsubscribeZapierWebhook" : {
      "post" : {
        "description" : "Delete a Zapier webhook",
        "operationId" : "unsubscribeZapierWebhook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnsubscribeZapierWebhookWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/updateWebhookIntegration" : {
      "post" : {
        "description" : "Update outbound webhook alert integration",
        "operationId" : "updateWebhookIntegration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/updateWebhookIntegrationV2" : {
      "post" : {
        "description" : "Update preexisting webhooks",
        "operationId" : "updateWebhookIntegrationV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/internal/addPartnerAsSuperAdmin" : {
      "post" : {
        "operationId" : "addPartnerAsSuperAdmin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_AddPartnerAsSuperAdminWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_AddPartnerAsSuperAdminWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/createOrg" : {
      "post" : {
        "operationId" : "createOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_CreateOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_CreateOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/createPartnerOrg" : {
      "post" : {
        "operationId" : "createPartnerOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_CreatePartnerOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_CreatePartnerOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/createReturnInventoryAuditReservation" : {
      "post" : {
        "operationId" : "createReturnInventoryAuditReservation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_CreateReturnedInventoryAuditReservationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_CreateReturnedInventoryAuditReservationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/createSupportAuthority" : {
      "post" : {
        "operationId" : "createInternalSalesforceSupportAuthority",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_CreateSupportAuthorityWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_CreateSupportAuthorityWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Add a support authority to organization",
        "tags" : [ "Internal Salesforce Webservice" ]
      }
    },
    "/api/internal/developerNewsletterEnroll" : {
      "post" : {
        "operationId" : "developerNewsletterEnroll",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_DeveloperNewsletterEnrollWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_DeveloperNewsletterEnrollWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/getSuperAdminGroupUUID" : {
      "post" : {
        "operationId" : "getSuperAdminGroupUUID",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_GetSuperAdminGroupUUIDWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_GetSuperAdminGroupUUIDWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/initiateShipment" : {
      "post" : {
        "operationId" : "initiateShipment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_InitiateShipmentWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_ShipmentEmailWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/listOrgs" : {
      "post" : {
        "operationId" : "listOrgs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_ListOrgsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_ListOrgsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/parentLifetimeSpend" : {
      "post" : {
        "operationId" : "parentLifetimeSpend",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_ParentLifetimeSpendWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_ParentLifetimeSpendWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/proCamerasOnly" : {
      "post" : {
        "operationId" : "proDevicesOnly",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_ProDevicesOnlyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_ProDevicesOnlyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/requestHardwareForDevelopment" : {
      "post" : {
        "operationId" : "requestHardwareForDevelopment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_RequestHardwareForDevelopmentWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_RequestHardwareForDevelopmentWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/sendShipmentShippedEmail" : {
      "post" : {
        "operationId" : "sendShipmentShippedEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_SendShipmentShippedEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_ShipmentEmailWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/internal/setOpportunityForPurchaseOrder" : {
      "post" : {
        "operationId" : "setOpportunityForPurchaseOrder",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_SetOpportunityForPurchaseOrderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_SetOpportunityForPurchaseOrderWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/invoice/charge" : {
      "post" : {
        "operationId" : "invoiceCharge",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invoice_InvoiceChargeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice_InvoiceChargeWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Charge an invoice, version 0 (original)",
        "tags" : [ "Invoice Webservice" ]
      }
    },
    "/api/invoice/chargeV1" : {
      "post" : {
        "operationId" : "invoiceChargeV1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invoice_InvoiceChargeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice_InvoiceChargeWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Charge an invoice, version 1",
        "tags" : [ "Invoice Webservice" ]
      }
    },
    "/api/invoice/details" : {
      "post" : {
        "operationId" : "invoiceDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invoice_InvoiceDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice_InvoiceDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get details of an invoice, version 0 (original)",
        "tags" : [ "Invoice Webservice" ]
      }
    },
    "/api/invoice/detailsV1" : {
      "post" : {
        "operationId" : "invoiceDetailsV1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invoice_InvoiceDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invoice_InvoiceDetailsV1WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get details of an invoice, version 1",
        "tags" : [ "Invoice Webservice" ]
      }
    },
    "/api/keypad/authenticatePin" : {
      "post" : {
        "description" : "Authenticate a keypad PIN",
        "operationId" : "authenticatePin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_AuthenticatePinRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_AuthenticatePinResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/checkin" : {
      "post" : {
        "description" : "Method for keypad online/offline processing",
        "operationId" : "keypadCheckin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_KeypadCheckinWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_KeypadCheckinWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/claimKeypadActivationToken" : {
      "post" : {
        "description" : "Connects a keypad to Rhombus services",
        "operationId" : "claimKeypadActivationToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_ClaimKeypadActivationTokenRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_ClaimKeypadActivationTokenResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/getCurrentKeypad" : {
      "post" : {
        "description" : "Get the current keypad",
        "operationId" : "getCurrentKeypad",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_GetCurrentKeypadWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_GetCurrentKeypadWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/getKeypadsForLocation" : {
      "post" : {
        "description" : "Get a list of all registered keypads for a location",
        "operationId" : "getKeypadsForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_GetKeypadsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_GetKeypadsForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/getKeypadsForOrg" : {
      "post" : {
        "description" : "Get a list of all registered keypads for an org",
        "operationId" : "getKeypadsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_GetKeypadsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_GetKeypadsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/unregisterKeypad" : {
      "post" : {
        "description" : "Unregister a keypad",
        "operationId" : "unregisterKeypad",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_UnregisterKeypadRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_UnregisterKeypadResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/updateKeypad" : {
      "post" : {
        "description" : "Update keypad settings",
        "operationId" : "updateKeypad",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_UpdateKeypadRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_UpdateKeypadResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/kiosk/claimKioskActivationToken" : {
      "post" : {
        "description" : "Update kiosk settings",
        "operationId" : "claimKioskActivationToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Kiosk_ClaimKioskActivationTokenRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kiosk_ClaimKioskActivationTokenResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Kiosk Webservice" ]
      }
    },
    "/api/kiosk/deleteKiosk" : {
      "post" : {
        "description" : "Deleted a kiosk",
        "operationId" : "deleteKiosk",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Kiosk_DeleteKioskWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kiosk_DeleteKioskWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Kiosk Webservice" ]
      }
    },
    "/api/kiosk/getCurrentKiosk" : {
      "post" : {
        "description" : "Get the current kiosk",
        "operationId" : "getCurrentKiosk",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Kiosk_GetCurrentKioskWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kiosk_GetCurrentKioskWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Kiosk Webservice" ]
      }
    },
    "/api/kiosk/getKiosksForLocation" : {
      "post" : {
        "description" : "Get a list of all registered kiosks for a location",
        "operationId" : "getKiosksForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Kiosk_GetKiosksForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kiosk_GetKiosksForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Kiosk Webservice" ]
      }
    },
    "/api/kiosk/getKiosksForOrg" : {
      "post" : {
        "description" : "Get a list of all registered kiosks for an org",
        "operationId" : "getKiosksForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Kiosk_GetKiosksForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kiosk_GetKiosksForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Kiosk Webservice" ]
      }
    },
    "/api/kiosk/heartbeat" : {
      "post" : {
        "description" : "Method for kiosk online/offline processing",
        "operationId" : "kioskCheckin",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Kiosk_KioskCheckinWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kiosk_KioskCheckinWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Kiosk Webservice" ]
      }
    },
    "/api/kiosk/unregisterKiosk" : {
      "post" : {
        "description" : "Unregister a kiosk",
        "operationId" : "unregisterKiosk",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Kiosk_UnregisterKioskRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kiosk_UnregisterKioskResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Kiosk Webservice" ]
      }
    },
    "/api/kiosk/updateKiosk" : {
      "post" : {
        "description" : "Update kiosk settings",
        "operationId" : "updateKiosk",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Kiosk_UpdateKioskSelectiveRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kiosk_UpdateKioskResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Guest Management Kiosk Webservice" ]
      }
    },
    "/api/license/assignACUDoorLicense" : {
      "post" : {
        "operationId" : "assignACUDoorLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_AssignACUDoorLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_AssignACUDoorLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/assignAlertMonitoringLicense" : {
      "post" : {
        "operationId" : "assignAlertMonitoringLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_AssignAlertMonitoringLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_AssignAlertMonitoringLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/assignDeviceLicense" : {
      "post" : {
        "description" : "Assign or unassign a device license.",
        "operationId" : "assignDeviceLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_AssignDeviceLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_AssignDeviceLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/assignLicense" : {
      "post" : {
        "description" : "Assign an add-on license to a device",
        "operationId" : "assignLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_AssignLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_AssignLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/calculateLicenseStatsForClientOrg" : {
      "post" : {
        "operationId" : "calculateLicenseStatsForClientOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_CalculateLicensesStatsForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_CalculateLicensesStatsForClientOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/calculateLicenseStatsForOrg" : {
      "post" : {
        "operationId" : "calculateLicenseStatsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_CalculateLicensesStatsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_CalculateLicensesStatsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/catalog/findCatalogItems" : {
      "post" : {
        "operationId" : "findCatalogItems",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_catalog_FindCatalogItemsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_catalog_FindCatalogItemsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Catalog Webservice" ]
      }
    },
    "/api/license/catalog/getCatalogItemByProductCode" : {
      "post" : {
        "operationId" : "getCatalogItemByProductCode",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_catalog_GetCatalogItemByProductCodeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_catalog_GetCatalogItemByProductCodeWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Catalog Webservice" ]
      }
    },
    "/api/license/claimkey/claimLicenses" : {
      "post" : {
        "description" : "Start claiming licenses represented by claim key with the specified code. This operation is asynchronous.",
        "operationId" : "claimLicenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_claimkey_ClaimLicensesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_claimkey_ClaimLicensesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ClaimKey Webservice" ]
      }
    },
    "/api/license/claimkey/claimLicensesForClientOrg" : {
      "post" : {
        "operationId" : "claimLicensesForClientOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_claimkey_ClaimLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_claimkey_ClaimLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ClaimKey Webservice" ]
      }
    },
    "/api/license/claimkey/createClaimKey" : {
      "post" : {
        "description" : "Create claim key",
        "operationId" : "createClaimKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_claimkey_CreateClaimKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_claimkey_CreateClaimKeyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ClaimKey Webservice" ]
      }
    },
    "/api/license/claimkey/createRenewalClaimKey" : {
      "post" : {
        "description" : "Create renewal claim key",
        "operationId" : "createRenewalClaimKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_claimkey_CreateRenewalClaimKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_claimkey_CreateRenewalClaimKeyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ClaimKey Webservice" ]
      }
    },
    "/api/license/claimkey/findClaimKeysByOrg" : {
      "post" : {
        "description" : "Find claim keys by org",
        "operationId" : "findClaimKeysByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_claimkey_FindClaimKeysByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_claimkey_FindClaimKeysByOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ClaimKey Webservice" ]
      }
    },
    "/api/license/claimkey/getClaimKey" : {
      "post" : {
        "description" : "Get claim key with the specified uuid",
        "operationId" : "getClaimKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_claimkey_GetClaimKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_claimkey_GetClaimKeyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ClaimKey Webservice" ]
      }
    },
    "/api/license/claimkey/getClaimKeyByCode" : {
      "post" : {
        "description" : "Get claim key with the specified code",
        "operationId" : "getClaimKeyByCode",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_claimkey_GetClaimKeyByCodeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_claimkey_GetClaimKeyByCodeWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ClaimKey Webservice" ]
      }
    },
    "/api/license/claimkey/getClaimKeyByCodeForClientOrg" : {
      "post" : {
        "description" : "Get claim key with the specified code for a client organization.",
        "operationId" : "getClaimKeyByCodeForClientOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_claimkey_GetClaimKeyByCodeForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_claimkey_GetClaimKeyByCodeForClientWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ClaimKey Webservice" ]
      }
    },
    "/api/license/claimkey/returnClaimKeyProductQuantities" : {
      "post" : {
        "description" : "Return claim key product quantities",
        "operationId" : "returnClaimKeyProductQuantities",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_claimkey_ReturnClaimKeyProductQuantitiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_claimkey_ReturnClaimKeyProductQuantitiesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "ClaimKey Webservice" ]
      }
    },
    "/api/license/createACUDoorLicense" : {
      "post" : {
        "operationId" : "createACUDoorLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_CreateACUDoorLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_CreateACUDoorLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/createAlertMonitoringLicense" : {
      "post" : {
        "operationId" : "createAlertMonitoringLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_CreateAlertMonitoringLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_CreateAlertMonitoringLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/createDeviceLicense" : {
      "post" : {
        "description" : "Create a device license for an organization",
        "operationId" : "createDeviceLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_CreateDeviceLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_CreateDeviceLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/createLicense" : {
      "post" : {
        "description" : "Create an add-on license for an organization",
        "operationId" : "createLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_CreateLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_CreateLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/deleteAlertMonitoringLicense" : {
      "post" : {
        "operationId" : "deleteAlertMonitoringLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_DeleteAlertMonitoringLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_DeleteAlertMonitoringLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/deleteDeviceLicense" : {
      "post" : {
        "description" : "Delete an unassigned device license from an organization",
        "operationId" : "deleteDeviceLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_DeleteDeviceLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_DeleteDeviceLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/deleteLicense" : {
      "post" : {
        "description" : "Delete an unassigned add-on license from an organization",
        "operationId" : "deleteLicense",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_DeleteLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_DeleteLicenseWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/findLicensesByClaimKey" : {
      "post" : {
        "operationId" : "findLicensesByClaimKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_FindLicensesByClaimKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_FindLicensesByClaimKeyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getACUDoorLicenses" : {
      "post" : {
        "description" : "Get list of access controlled door licenses licenses available in organization",
        "operationId" : "getACUDoorLicenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetACUDoorLicensesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetACUDoorLicensesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getACUDoorLicensesForClientOrg" : {
      "post" : {
        "description" : "Get list of access controlled door licenses licenses available for a client organization",
        "operationId" : "getACUDoorLicensesForClientOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetACUDoorLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetACUDoorLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getAlertMonitoringLicenses" : {
      "post" : {
        "description" : "Get list of alert monitoring licenses available in organization",
        "operationId" : "getAlertMonitoringLicenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetAlertMonitoringLicensesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetAlertMonitoringLicensesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getAlertMonitoringLicensesForClientOrg" : {
      "post" : {
        "description" : "Get list of alert monitoring licenses available for a client organization",
        "operationId" : "getAlertMonitoringLicensesForClientOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetAlertMonitoringLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetAlertMonitoringLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getDeviceLicenses" : {
      "post" : {
        "description" : "Get list of device licenses available in organization",
        "operationId" : "getDeviceLicenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetDeviceLicensesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetDeviceLicensesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getDeviceLicensesForClientOrg" : {
      "post" : {
        "description" : "Get list of device licenses available for a client organization",
        "operationId" : "getDeviceLicensesForClientOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetDeviceLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetDeviceLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getLicenses" : {
      "post" : {
        "description" : "Get list of add-on licenses available in organization",
        "operationId" : "getLicenses",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetLicensesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetLicensesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getLicensesForClientOrg" : {
      "post" : {
        "description" : "Get a list of licenses available for a client organization",
        "operationId" : "getLicensesForClientOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/location/addLocationLabel" : {
      "post" : {
        "description" : "Add a label to a location",
        "operationId" : "addLocationLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_AddLocationLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_AddLocationLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/createLocation" : {
      "post" : {
        "description" : "Create a location",
        "operationId" : "createlocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_CreateLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_CreateLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/deleteLocation" : {
      "post" : {
        "description" : "Remove a location",
        "operationId" : "deleteLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_DeleteLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_DeleteLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/geoCode" : {
      "post" : {
        "description" : "Get the latitude and longitude of an address",
        "operationId" : "geoCode",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GeoCodeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GeoCodeWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocation" : {
      "post" : {
        "description" : "Get location by id",
        "operationId" : "getLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocationLabelsForOrg" : {
      "post" : {
        "description" : "Get all location labels for an organization",
        "operationId" : "getLocationLabelsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationLabelsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationLabelsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocations" : {
      "post" : {
        "description" : "Get list of locations in organization",
        "operationId" : "getLocations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocationsAssociatedToLocationLabelsByOrg" : {
      "post" : {
        "description" : "Get all locations associated to location labels for an organization",
        "operationId" : "getLocationsAssociatedToLocationLabelsByOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationLabelsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationLabelsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocationsByGeo" : {
      "post" : {
        "description" : "Get list of locations given latitude and longitude",
        "operationId" : "getLocationsByGeo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationsByGeoRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationsByGeoResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocationsBySubLocationsHierarchyKey" : {
      "post" : {
        "description" : "Get nested locations by subLocationHierarchyKey",
        "operationId" : "getLocationsBySubLocationsHierarchyKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationsBySubLocationsHierarchyKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationsBySubLocationsHierarchyKeyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocationsV2" : {
      "post" : {
        "description" : "Get list of locations in organization",
        "operationId" : "getLocationsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/removeLocationLabel" : {
      "post" : {
        "description" : "Remove a label from a location",
        "operationId" : "removeLocationLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_RemoveLocationLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_RemoveLocationLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/selectiveUpdateLocation" : {
      "post" : {
        "description" : "Selectively update a location",
        "operationId" : "selectiveUpdateLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_SelectiveUpdateLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_SelectiveUpdateLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/updateLocation" : {
      "post" : {
        "description" : "Update a location **NOTE: This will replace old settings meaning if you leave a field blank it will be overrode to blank. For selective field updates use the endpoint /selectiveUpdateLocation",
        "operationId" : "updateLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_UpdateLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_UpdateLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/validateLocation" : {
      "post" : {
        "description" : "Validate a location address for Alarm Monitoring",
        "operationId" : "validateLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_ValidateLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_ValidateLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/logistics/getRMAs" : {
      "post" : {
        "description" : "Get RMAs",
        "operationId" : "getRMAs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Logistics_GetRMAsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Logistics_GetRMAsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Logistics Webservice" ]
      }
    },
    "/api/logistics/getShipments" : {
      "post" : {
        "description" : "Get shipments",
        "operationId" : "getShipments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Logistics_GetShipmentsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Logistics_GetShipmentsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Logistics Webservice" ]
      }
    },
    "/api/logistics/getWarrantyApprovedRMAs" : {
      "post" : {
        "operationId" : "getWarrantyApprovedRMAs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_GetWarrantyApprovedRMAsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_GetWarrantyApprovedRMAsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Logistics Webservice" ]
      }
    },
    "/api/maps/generateMapUrl" : {
      "post" : {
        "operationId" : "generateMapUrl",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Maps_GenerateMapUrlWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Maps_GenerateMapUrlWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        }
      }
    },
    "/api/mediadevice/getBulkMediaDeviceDetails" : {
      "post" : {
        "description" : "Get media information of any video-supporting media device",
        "operationId" : "getBulkMediaDeviceDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mediadevice_GetBulkMediaDeviceDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mediadevice_GetBulkMediaDeviceDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Media Device Webservice" ]
      }
    },
    "/api/metric/logEvents" : {
      "post" : {
        "operationId" : "logEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Metric_LogEventWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Metric_LogEventWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Upload logs",
        "tags" : [ "Metric Webservice" ]
      }
    },
    "/api/metric/mobile/logEvents" : {
      "post" : {
        "operationId" : "uploadMobileLogs",
        "requestBody" : {
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "summary" : "Upload mobile logs",
        "tags" : [ "Metric Webservice" ]
      }
    },
    "/api/metric/reportError" : {
      "post" : {
        "operationId" : "reportError",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Metric_ReportErrorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Metric_ReportErrorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Report an error",
        "tags" : [ "Metric Webservice" ]
      }
    },
    "/api/mobile/loginToOrg" : {
      "post" : {
        "description" : "Allows a multi-org user on mobile to login to a different org they are able to access.",
        "operationId" : "loginToOrg",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mobile_LoginToOrgRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mobile_LoginToOrgBaseResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Mobile Webservice" ]
      }
    },
    "/api/mobile/loginVerifiedSupportAuthority" : {
      "post" : {
        "description" : "Mobile login of partner to client org.",
        "operationId" : "loginVerifiedSupportAuthority",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mobile_LoginVerifiedSupportAuthorityMobileRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mobile_LoginVerifiedSupportAuthorityMobileResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Mobile Webservice" ]
      }
    },
    "/api/mobile/logout" : {
      "post" : {
        "description" : "Ends a mobile session.",
        "operationId" : "logoutMobileUser",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mobile_LogoutMobileUserRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mobile_LogoutMobileUserResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Mobile Webservice" ]
      }
    },
    "/api/mobile/refreshMobileSession" : {
      "post" : {
        "operationId" : "refreshMobileSession",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mobile_RefreshMobileSessionRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mobile_RefreshMobileSessionResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Mobile Webservice" ]
      }
    },
    "/api/mobile/updateNotificationToken" : {
      "post" : {
        "description" : "Updates a mobile notification token for the Console mobile app",
        "operationId" : "updateNotificationToken",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mobile_UpdateMobileNotificationTokenRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mobile_UpdateMobileNotificationTokenResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Mobile Webservice" ]
      }
    },
    "/api/mobile/updateRhombusKeyNotificationToken" : {
      "post" : {
        "description" : "Updates a mobile notification token for the Rhombus Key mobile app",
        "operationId" : "updateRhombusKeyNotificationToken",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mobile_UpdateRhombusKeyMobileNotificationTokenRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mobile_UpdateRhombusKeyMobileNotificationTokenResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Mobile Webservice" ]
      }
    },
    "/api/modularai/addModelToDevice" : {
      "post" : {
        "description" : "Add model to device",
        "operationId" : "addModelToDevice",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Modularai_AddModelToDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Modularai_AddModelToDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Modular AI Webservice" ]
      }
    },
    "/api/modularai/getDevicesForModel" : {
      "post" : {
        "description" : "Get devices running model",
        "operationId" : "getDevicesForModel",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Modularai_GetDevicesForModelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Modularai_GetDevicesForModelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Modular AI Webservice" ]
      }
    },
    "/api/modularai/getModels" : {
      "post" : {
        "description" : "Get available models",
        "operationId" : "getModels",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Modularai_GetModelsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Modularai_GetModelsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Modular AI Webservice" ]
      }
    },
    "/api/modularai/getModelsAddedToDevice" : {
      "post" : {
        "description" : "Get models added to device",
        "operationId" : "getModelsAddedToDevice",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Modularai_GetModelsAddedToDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Modularai_GetModelsAddedToDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Modular AI Webservice" ]
      }
    },
    "/api/modularai/removeModelFromDevice" : {
      "post" : {
        "description" : "Remove model from device",
        "operationId" : "removeModelFromDevice",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Modularai_RemoveModelFromDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Modularai_RemoveModelFromDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Modular AI Webservice" ]
      }
    },
    "/api/modularai/updateModel" : {
      "post" : {
        "description" : "Update model config name, description, or model parameters",
        "operationId" : "updateModel",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Modularai_UpdateModelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Modularai_UpdateModelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Modular AI Webservice" ]
      }
    },
    "/api/modularai/uploadCustomModel" : {
      "post" : {
        "description" : "Upload a custom model",
        "operationId" : "uploadCustomModel",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          },
          "description" : "multipart/form-data with zip containing custom model"
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Modular AI Webservice" ]
      }
    },
    "/api/modularai/uploadQuantizedModel" : {
      "post" : {
        "description" : "[DEV ONLY] Upload a quantized model for an existing modular AI config",
        "operationId" : "uploadQuantizedModel",
        "parameters" : [ {
          "in" : "query",
          "name" : "modelUuid",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          },
          "description" : "multipart/form-data with zip containing custom model"
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Modular AI Webservice" ]
      }
    },
    "/api/network/configuration" : {
      "post" : {
        "description" : "manage device network configuration",
        "operationId" : "networkConfiguration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Network_NetworkConfigurationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Network_NetworkConfigurationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Network Webservice" ]
      }
    },
    "/api/oauth/authorize" : {
      "get" : {
        "description" : "User authorizes to share permission and ac settings, receives temporary authorization code",
        "operationId" : "authorize",
        "parameters" : [ {
          "in" : "query",
          "name" : "clientId",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "redirectUri",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "responseType",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "consentGiven",
          "schema" : {
            "type" : "boolean",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "codeChallenge",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/deleteApplication" : {
      "post" : {
        "description" : "Delete application",
        "operationId" : "deleteApplication",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_OAuthApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/getAllApplicationsForOrg" : {
      "post" : {
        "description" : "Get all applications for org",
        "operationId" : "getAllApplicationsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_GetAllApplicationsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Oauth_GetAllApplicationsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/getApplicationByClientId" : {
      "post" : {
        "description" : "Get application by clientId",
        "operationId" : "getApplicationByClientId",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_GetApplicationByClientIdWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Oauth_GetApplicationByClientIdWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/submitApplication" : {
      "post" : {
        "description" : "Application for client_id and client_secret",
        "operationId" : "submitApplication",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_OAuthApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Oauth_OAuthApplicationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/updateApplication" : {
      "post" : {
        "description" : "Update application",
        "operationId" : "updateApplication",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_OAuthApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/occupancy/getMinimalOccupancySensorStateList" : {
      "post" : {
        "description" : "Get basic state information about all proximity tags in organization",
        "operationId" : "getMinimalOccupancySensorStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Occupancysensor_GetMinimalOccupancySensorStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Occupancysensor_GetMinimalOccupancySensorStatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Occupancy Webservice" ]
      }
    },
    "/api/occupancy/getOccupancyEventsForSensor" : {
      "post" : {
        "description" : "Get recent events for specified proximity tag",
        "operationId" : "getOccupancyEventsForSensor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Occupancysensor_GetOccupancyEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Occupancysensor_GetOccupancyEventsForSensorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Occupancy Webservice" ]
      }
    },
    "/api/occupancy/getOccupancyPresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for sensor",
        "operationId" : "getOccupancyPresenceWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Occupancy Webservice" ]
      }
    },
    "/api/occupancy/updateDetails" : {
      "post" : {
        "description" : "Update the details of an occupancy sensor",
        "operationId" : "updateOccupancySensorDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Occupancysensor_UpdateOccupancySensorDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Occupancysensor_UpdateOccupancySensorDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Occupancy Webservice" ]
      }
    },
    "/api/openapiwebservice/getSchemas" : {
      "post" : {
        "description" : "Exposes custom objects and enums to the component schema - this endpoint should not be invoked",
        "operationId" : "getSchemas",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Openapi_GetOpenApiComponentSchemasWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "OpenApi Webservice" ]
      }
    },
    "/api/org/claimActivationToken" : {
      "post" : {
        "description" : "Claim activation token for organization",
        "operationId" : "claimActivationToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_ClaimActivationTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_ClaimActivationTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/claimShipmentRegistrationToken" : {
      "post" : {
        "description" : "Claim shipment registration token for an organization",
        "operationId" : "claimShipmentRegistrationToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_ClaimShipmentRegistrationTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_ClaimShipmentRegistrationTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/createPendingRegistration" : {
      "post" : {
        "description" : "Create a pending registration. Registration will be completed when the hardware establishes connectivity",
        "operationId" : "createPendingRegistration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_CreatePendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_CreatePendingRegistrationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/deleteCloudArchivingConfig" : {
      "post" : {
        "description" : "Delete scoped cloud archiving config.  Note that the priority of scoping is Org > Location > Device",
        "operationId" : "deleteCloudArchivingConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_DeleteCloudArchivingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_DeleteCloudArchivingConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/deleteKeypadLogo" : {
      "post" : {
        "description" : "Delete keypad logo.",
        "operationId" : "deleteKeypadLogo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_DeleteKeypadLogoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_DeleteKeypadLogoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/deleteRhombusKeyLogo" : {
      "post" : {
        "description" : "Delete rhombus key logo.",
        "operationId" : "deleteRhombusKeyLogo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_DeleteRhombusKeyLogoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_DeleteRhombusKeyLogoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/findAllHardwareWithPendingRegistration" : {
      "post" : {
        "description" : "Find all hardware for which a pending registrations exists",
        "operationId" : "findAllHardwareWithPendingRegistration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_FindAllHardwareWithPendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_FindAllHardwareWithPendingRegistrationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/findHardwareAvailableForPendingRegistration" : {
      "post" : {
        "description" : "Find hardware for which pending registrations can be created",
        "operationId" : "findHardwareAvailableForPendingRegistration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_FindHardwareAvailableForPendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_FindHardwareAvailableForPendingRegistrationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/findIfTeamNameAvailable" : {
      "post" : {
        "description" : "Get organization team name if it is available",
        "operationId" : "findIfTeamNameAvailable",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_FindIfTeamNameAvailableRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_FindIfTeamNameAvailableResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/findSCIMSettingsForOrg" : {
      "post" : {
        "description" : "Get SCIM configuration for organization",
        "operationId" : "findSCIMSettingsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_FindSCIMSettingsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_FindSCIMSettingsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/generateFederatedSessionToken" : {
      "post" : {
        "description" : "Generate a federated session token login for organization",
        "operationId" : "generateFederatedSessionToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GenerateFederatedSessionTokenRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GenerateFederatedSessionTokenResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getAwsIntCloudformationFile" : {
      "post" : {
        "description" : "Get AWS integration cloudformation file",
        "operationId" : "getAwsIntCloudFormationFile",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetAwsIntCloudformationFileRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetAwsIntCloudformationFileResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getClientOrg" : {
      "post" : {
        "description" : "Get details about the client organization",
        "operationId" : "getClientOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetClientOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getCloudArchivingConfigs" : {
      "post" : {
        "description" : "Get scoped cloud archiving configs.  Note that the priority of scoping is Org > Location > Device",
        "operationId" : "getCloudArchivingConfigs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetCloudArchivingConfigsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetCloudArchivingConfigsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getDeviceFlags" : {
      "post" : {
        "description" : "Get flags for a device",
        "operationId" : "getDeviceFlags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetDeviceFlagsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetDeviceFlagsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getFeatures" : {
      "post" : {
        "description" : "Get organization wide features",
        "operationId" : "getFeatures",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetFeaturesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetFeaturesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getLocationFlags" : {
      "post" : {
        "description" : "Get flags for all locations",
        "operationId" : "getLocationFlags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetLocationFlagsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetLocationFlagsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrg" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details about organization",
        "operationId" : "getOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrgIntegrations" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use endpoints in Integrations Webservice instead",
        "operationId" : "DEPRECATED_getOrgIntegrations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrgNotificationTemplate" : {
      "post" : {
        "deprecated" : true,
        "description" : "This endpoint is no longer in use. Please use getOrgNotificationTemplateV2 instead.",
        "operationId" : "getOrgNotificationTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgNotificationTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgNotificationTemplateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrgNotificationTemplateV2" : {
      "post" : {
        "description" : "Get organization's default notification schedule template",
        "operationId" : "getOrgNotificationTemplateV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgNotificationTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgNotificationTemplateV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrgV2" : {
      "post" : {
        "description" : "Get details about organization",
        "operationId" : "getOrgV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getSAMLSettings" : {
      "post" : {
        "deprecated" : true,
        "description" : "Deprecated. Use getSAMLSettingsV2",
        "operationId" : "getSAMLSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetSAMLSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetSAMLSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getSAMLSettingsV2" : {
      "post" : {
        "description" : "Get details about organization",
        "operationId" : "getSAMLSettingsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetSAMLSettingsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetSAMLSettingsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getScimDisplayInfo" : {
      "post" : {
        "description" : "Get SCIM display info for organization",
        "operationId" : "getScimDisplayInfo",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetScimDisplayInfoResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getTemporaryOrgToken" : {
      "post" : {
        "description" : "Generate a temporary org token for use in OAuth flows",
        "operationId" : "getTemporaryOrgToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetTemporaryOrgTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetTemporaryOrgTokenResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/peekShipmentRegistrationToken" : {
      "post" : {
        "description" : "Peek at a shipping registration token for an organization",
        "operationId" : "peekShipmentRegistrationToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_PeekShipmentRegistrationTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_PeekShipmentRegistrationTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/removePendingRegistration" : {
      "post" : {
        "description" : "Remove a pending registration",
        "operationId" : "removePendingRegistration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_RemovePendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_RemovePendingRegistrationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/revokeSCIMAccessForOrg" : {
      "post" : {
        "description" : "Revoke SCIM access for organization",
        "operationId" : "revokeSCIMAccessForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_RevokeSCIMAccessForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_RevokeSCIMAccessForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/setFlag" : {
      "post" : {
        "description" : "Store a flag for organization",
        "operationId" : "setOrgFlag",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_SetFlagWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_SetFlagWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/setupSCIMAccessForOrg" : {
      "post" : {
        "description" : "Initially configure SCIM access for organization",
        "operationId" : "setupSCIMAccessForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_SetupSCIMAccessForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_SetupSCIMAccessForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateAiTrainingSettings" : {
      "post" : {
        "description" : "Update organization AI training settings",
        "operationId" : "updateAiTrainingSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateAiTrainingSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateAiTrainingSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateCloudArchivingConfig" : {
      "post" : {
        "description" : "Update scoped cloud archiving config.  Note that the priority of scoping is Org > Location > Device",
        "operationId" : "updateCloudArchivingConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateCloudArchivingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateCloudArchivingConfigWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateFirmwareSettings" : {
      "post" : {
        "description" : "Update organization firmware schedule settings",
        "operationId" : "updateFirmwareSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateFirmwareSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateFirmwareSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateGeneralSettings" : {
      "post" : {
        "description" : "Update organization General settings",
        "operationId" : "updateGeneralSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateGeneralSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateGeneralSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateMFASettings" : {
      "post" : {
        "description" : "Update organization MFA settings",
        "operationId" : "updateMFASettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateMFASettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateMFASettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrg" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update organization details",
        "operationId" : "updateOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgAudioAnalysisPolicy" : {
      "post" : {
        "description" : "Update organization AI audio analysis policy",
        "operationId" : "updateOrgAudioAnalysisPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgAudioAnalysisPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgAudioAnalysisPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgAudioRecordingPolicy" : {
      "post" : {
        "description" : "Update organization audio recording policy",
        "operationId" : "updateOrgAudioRecordingPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgAudioRecordingPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgAudioRecordingPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgIntegrations" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use endpoints in Integrations Webservice instead",
        "operationId" : "updateOrgIntegrations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgNotificationTemplate" : {
      "post" : {
        "deprecated" : true,
        "description" : "This endpoint is no longer in use. Please use updateOrgNotificationTemplateV2 instead.",
        "operationId" : "updateOrgNotificationTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgNotificationTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgNotificationTemplateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgNotificationTemplateV2" : {
      "post" : {
        "description" : "Update default notification schedule template for newly created Users in Org",
        "operationId" : "updateOrgNotificationTemplateV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgNotificationTemplateV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgNotificationTemplateV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updatePendingRegistration" : {
      "post" : {
        "description" : "Update pending registration for hardware",
        "operationId" : "updatePendingRegistration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdatePendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdatePendingRegistrationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateSAMLSettings" : {
      "post" : {
        "deprecated" : true,
        "description" : "Deprecated. Use updateSAMLSettingsV2",
        "operationId" : "updateSAMLSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateSAMLSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateSAMLSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateSAMLSettingsV2" : {
      "post" : {
        "description" : "Update organization SAML settings",
        "operationId" : "updateSAMLSettingsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateSAMLSettingsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateSAMLSettingsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateSCIMSettingsForOrg" : {
      "post" : {
        "description" : "Update SCIM configuration for organization",
        "operationId" : "updateSCIMSettingsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateSCIMSettingsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateSCIMSettingsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/partner/createPartnerClient" : {
      "post" : {
        "description" : "Create a client account",
        "operationId" : "createPartnerClient",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_CreatePartnerClientWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_CreatePartnerClientWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/customizeClient" : {
      "post" : {
        "description" : "Customize a client account",
        "operationId" : "customizeClient",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_CustomizeClientWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_CustomizeClientWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/customizeClientDevice" : {
      "post" : {
        "description" : "Customize a client device",
        "operationId" : "customizeClientDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_CustomizeClientDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_CustomizeClientDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/deleteClient" : {
      "post" : {
        "description" : "Delete a client account",
        "operationId" : "deletePartnerClient",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_DeleteClientWebRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_DeleteClientWebResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getApiTokenApplications" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details of all open api token requests for organization",
        "operationId" : "partner_getApiTokenApplications",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getApiTokens" : {
      "post" : {
        "description" : "Get list of all api tokens for a partner",
        "operationId" : "partner_getApiTokens",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetPartnerApiTokensWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokensWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClientDevices" : {
      "post" : {
        "description" : "Retrieve a list of devices for a specific client.",
        "operationId" : "getClientDevices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetClientDevicesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetClientDevicesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClientRhombusOrgUsersForPartnerActivationTokenV2" : {
      "post" : {
        "operationId" : "getClientRhombusOrgUsersForPartnerActivationTokenV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSBaseResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClientStatusMap" : {
      "post" : {
        "description" : "Get a map of all client accounts to device and location info",
        "operationId" : "getPartnerClientsStatusMap",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetPartnerClientsStatusMapWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetPartnerClientsStatusMapWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClientSummaryInfo" : {
      "post" : {
        "description" : "Get information about a client",
        "operationId" : "getClientSummaryInfo",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetClientSummaryInfoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetClientSummaryInfoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClients" : {
      "post" : {
        "description" : "Get a list of all client accounts",
        "operationId" : "getPartnerClients",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetPartnerClientsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetPartnerClientsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClientsV2" : {
      "post" : {
        "description" : "Get a list of all client accounts. NOTICE: This is the same as getPartnerClients, but only returns the basic info so partners can login to clients quickly. The other info will be returned by getPartnerClientsStatusMap.",
        "operationId" : "getPartnerClientsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetPartnerClientsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetPartnerClientsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getDeviceLicensesForOrg" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get a list of licenses available for a client organization",
        "operationId" : "getDeviceLicensesForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetDeviceLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetDeviceLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getLicensesForOrg" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get a list of licenses available for a client organization",
        "operationId" : "getLicensesForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getListOfAllClientDevices" : {
      "post" : {
        "description" : "Retrieve list of all devices registered across all clients",
        "operationId" : "getListOfAllClientDevices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetListOfAllClientDevicesRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetListOfAllClientDevicesResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getListOfAvailableHardware" : {
      "post" : {
        "description" : "Retrieve a list of hardware available for remote registration. Any hardware originally registered by a Partner is available for re-registration after being removed from an active client account.",
        "operationId" : "getListOfControlledHardware",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetListOfControlledHardwareRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetListOfControlledHardwareResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getPartnerClientMobileAccountAccess" : {
      "post" : {
        "description" : "Get client mobile account access as partner",
        "operationId" : "getPartnerClientMobileAccountAccess",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetPartnerClientMobileAccountAccessRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetPartnerClientMobileAccountAccessResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getShipments" : {
      "post" : {
        "description" : "Get client shipments",
        "operationId" : "PartnerGetShipments",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetShipmentsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetShipmentsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/grantSupportAccessToClient" : {
      "post" : {
        "operationId" : "grantSupportAccessToClient",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GrantSupportAccessToClientWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GrantSupportAccessToClientWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/reassignDeviceOrg" : {
      "post" : {
        "description" : "Reassign device(s) to a different organization. Only devices which hardware is controlled by the partner can be reassigned",
        "operationId" : "reassignDeviceOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_ReassignDeviceOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_ReassignDeviceOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/registerCameraToClient" : {
      "post" : {
        "description" : "Register a controlled camera to a client",
        "operationId" : "registerCameraToClient",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_CreatePendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_CreatePendingRegistrationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/registerDeal" : {
      "post" : {
        "description" : "Register a deal",
        "operationId" : "registerDeal",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_RegisterDealWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_RegisterDealWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/requestAccessToClientAccount" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "requestAccessToClientAccount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_RequestAccessToClientAccountRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_RequestAccessToClientAccountResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/requestAccessToClientAccountV2" : {
      "post" : {
        "operationId" : "requestAccessToClientAccountV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_RequestAccessToClientAccountV2Request"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_RequestAccessToClientAccountV2Response"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/revokeApiToken" : {
      "post" : {
        "description" : "Remove an api token from organization. Note: this is irreversible",
        "operationId" : "partner_revokeApiToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/submitApiTokenApplication" : {
      "post" : {
        "description" : "Request a partner api token for 1 or more organizations",
        "operationId" : "partner_submitApiTokenApplication",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_SubmitApiTokenApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_SubmitApiTokenApplicationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/submitSupportAccessDecisionForPartnerActivationTokenV2" : {
      "post" : {
        "operationId" : "submitSupportAccessDecisionForPartnerActivationTokenV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSBaseResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/updateApiToken" : {
      "post" : {
        "description" : "Update display name and permissions of an api token",
        "operationId" : "partner_updateApiToken",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateApiTokenWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/updateSendLicenseExpirationEmail" : {
      "post" : {
        "description" : "Update send license expiration email feature flag by org",
        "operationId" : "updateManuallySendLicenseExpirationEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_UpdateManuallySendLicenseExpirationEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_UpdateManuallySendLicenseExpirationEmailWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/password/forgot" : {
      "post" : {
        "operationId" : "forgotPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Password_ForgotPasswordWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Password_ForgotPasswordWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Submit a forgot password request",
        "tags" : [ "Password Webservice" ]
      }
    },
    "/api/password/reset" : {
      "post" : {
        "operationId" : "resetPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Password_ResetPasswordWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Password_ResetPasswordWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Reset password",
        "tags" : [ "Password Webservice" ]
      }
    },
    "/api/password/user/signup" : {
      "post" : {
        "operationId" : "userSignup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Password_UserSignupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Password_UserSignupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Create a user in organization",
        "tags" : [ "Password Webservice" ]
      }
    },
    "/api/permission/assignPermission" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use Permission Group endpoints instead",
        "operationId" : "assignPermission",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_AssignUserPermissionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_AssignUserPermissionWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/createPartnerPermissionGroup" : {
      "post" : {
        "description" : "Create a permission group",
        "operationId" : "createPartnerPermissionGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_CreatePartnerPermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_CreatePartnerPermissionGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/createPermissionGroup" : {
      "post" : {
        "description" : "Create a permission group",
        "operationId" : "createPermissionGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_CreatePermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_CreatePermissionGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/deletePartnerPermissionGroup" : {
      "post" : {
        "description" : "Delete a permission group",
        "operationId" : "deletePartnerPermissionGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_DeletePartnerPermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_DeletePartnerPermissionGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/deletePermissionGroup" : {
      "post" : {
        "description" : "Delete a permission group",
        "operationId" : "deletePermissionGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_DeletePermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_DeletePermissionGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/getPartnerPermissionGroups" : {
      "post" : {
        "operationId" : "getPartnerPermissionGroups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_GetPartnerPermissionGroupsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_GetPartnerPermissionGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/getPermissionGroups" : {
      "post" : {
        "description" : "Get details about all permission groups in organization",
        "operationId" : "getPermissionGroups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_GetPermissionGroupsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_GetPermissionGroupsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/getPermissionGroupsForOrg" : {
      "post" : {
        "operationId" : "getPermissionGroupsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_GetPermissionGroupsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_GetPermissionGroupsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/getPermissionsForCurrentPartner" : {
      "post" : {
        "operationId" : "getPermissionsForCurrentPartner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_GetPermissionsForCurrentPartnerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_GetPermissionsForCurrentPartnerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/getPermissionsForCurrentUser" : {
      "post" : {
        "description" : "Get device and functionality permissions for user or API token",
        "operationId" : "getPermissionsForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_GetPermissionsForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_GetPermissionsForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/updatePartnerPermissionGroup" : {
      "post" : {
        "description" : "Update a partner permission group",
        "operationId" : "updatePartnerPermissionGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_UpdatePartnerPermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_UpdatePartnerPermissionGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/updatePermissionGroup" : {
      "post" : {
        "description" : "Update a permission group",
        "operationId" : "updatePermissionGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_UpdatePermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_UpdatePermissionGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/policy/createAccessControlledDoorPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to a access controlled door",
        "operationId" : "createAccessControlledDoorPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateAccessControlledDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateAccessControlledDoorPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createAudioPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to audio gateways",
        "operationId" : "createAudioPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateAudioPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateAudioPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createCameraPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to cameras",
        "operationId" : "createCameraPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateCameraPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateCameraPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createClimatePolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to a climate sensor",
        "operationId" : "createClimatePolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateClimatePolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateClimatePolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createDoorPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to a door sensor",
        "operationId" : "createDoorPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateDoorPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createOccupancyPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to a occupancy sensor",
        "operationId" : "createOccupancyPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateOccupancyPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateOccupancyPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createPolicyAddendumForLocation" : {
      "post" : {
        "description" : "Create policy addendum for location",
        "operationId" : "createPolicyAddendumForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreatePolicyAddendumForLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreatePolicyAddendumForLocationResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createPolicyAddendumsForDevices" : {
      "post" : {
        "description" : "Create policy addendums for devices",
        "operationId" : "createPolicyAddendumsForDevices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreatePolicyAddendumsForDevicesRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreatePolicyAddendumsForDevicesResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createProximityPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to an asset tag",
        "operationId" : "createProximityPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateProximityPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateProximityPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createSchedule" : {
      "post" : {
        "description" : "Create a schedule to be used for policy creation",
        "operationId" : "createSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createVideoIntercomPolicy" : {
      "post" : {
        "description" : "Create a video intercom policy",
        "operationId" : "createVideoIntercomPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateVideoIntercomPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateVideoIntercomPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteAccessControlledDoorPolicy" : {
      "post" : {
        "description" : "Delete an access controlled door policy",
        "operationId" : "deleteAccessControlledDoorPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteAccessControlledDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteAccessControlledDoorPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteAudioPolicy" : {
      "post" : {
        "description" : "Delete a audio gateway policy",
        "operationId" : "deleteAudioPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteAudioPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteAudioPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteCameraPolicy" : {
      "post" : {
        "description" : "Delete a camera policy",
        "operationId" : "deleteCameraPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteCameraPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteCameraPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteClimatePolicy" : {
      "post" : {
        "description" : "Delete a climate policy",
        "operationId" : "deleteClimatePolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteClimatePolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteClimatePolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteDevicePolicyAddendums" : {
      "post" : {
        "description" : "Delete a policy addendums",
        "operationId" : "deleteDevicePolicyAddendums",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteDevicePolicyAddendumsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteDevicePolicyAddendumsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteDoorPolicy" : {
      "post" : {
        "description" : "Delete a door sensor policy",
        "operationId" : "deleteDoorPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteDoorPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteLocationPolicyAddendum" : {
      "post" : {
        "description" : "Delete a policy addendums",
        "operationId" : "deleteLocationPolicyAddendum",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteLocationPolicyAddendumWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteLocationPolicyAddendumWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteOccupancyPolicy" : {
      "post" : {
        "description" : "Delete an Occupancy policy",
        "operationId" : "deleteOccupancyPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteOccupancyPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteOccupancyPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deletePolicyPauseSettingForComponentComposite" : {
      "post" : {
        "description" : "Delete a policy pause setting for a component composite",
        "operationId" : "deletePolicyPauseSettingForComponentComposite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deletePolicyPauseSettingForDevice" : {
      "post" : {
        "description" : "Delete a policy pause setting for a device",
        "operationId" : "deletePolicyPauseSettingForDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deletePolicyPauseSettingForLocation" : {
      "post" : {
        "description" : "Delete a policy pause setting for a location",
        "operationId" : "deletePolicyPauseSettingForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteProximityPolicy" : {
      "post" : {
        "description" : "Delete an asset tag policy",
        "operationId" : "deleteProximityPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteProximityPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteProximityPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteSchedule" : {
      "post" : {
        "description" : "Delete a schedule used for policy creation",
        "operationId" : "deleteSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteVideoIntercomPolicy" : {
      "post" : {
        "description" : "Delete a video intercom policy",
        "operationId" : "deleteVideoIntercomPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteVideoIntercomPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteVideoIntercomPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/findSchedules" : {
      "post" : {
        "description" : "Find all schedules in organization",
        "operationId" : "findSchedules",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_FindSchedulesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_FindSchedulesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getAccessControlledDoorPolicies" : {
      "post" : {
        "description" : "Get details about all access controlled door policies in organization",
        "operationId" : "getAccessControlledDoorPolicies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetAccessControlledDoorPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetAccessControlledDoorPoliciesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getAudioPolicies" : {
      "post" : {
        "description" : "Get details about all audio gateway policies in organization",
        "operationId" : "getAudioPolicies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetAudioPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetAudioPoliciesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getCameraPolicies" : {
      "post" : {
        "description" : "Get details about all camera policies in organization",
        "operationId" : "getCameraPolicies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetCameraPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetCameraPoliciesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getClimatePolicies" : {
      "post" : {
        "description" : "Get details about all climate policies in organization",
        "operationId" : "getClimatePolicies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetClimatePoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetClimatePoliciesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getDoorPolicies" : {
      "post" : {
        "description" : "Get details about all door sensor policies in organization",
        "operationId" : "getDoorPolicies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetDoorPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetDoorPoliciesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getOccupancyPolicies" : {
      "post" : {
        "description" : "Get details about all occupancy policies in organization",
        "operationId" : "getOccupancyPolicies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetOccupancyPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetOccupancyPoliciesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getPoliciesUsingSchedule" : {
      "post" : {
        "description" : "Get details about all climate policies in organization",
        "operationId" : "getPoliciesUsingSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetPoliciesUsingScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetPoliciesUsingScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getPolicyAddendums" : {
      "post" : {
        "description" : "Get the current and planned policy alert addendums",
        "operationId" : "getPolicyAddendums",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetPolicyAddendumsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetPolicyAddendumsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getPolicyPauseSettings" : {
      "post" : {
        "description" : "Get the current and planned policy alert pause details",
        "operationId" : "getPolicyPauseSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetPolicyPauseSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetPolicyPauseSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getProximityPolicies" : {
      "post" : {
        "description" : "Get details about all asset tag policies in organization",
        "operationId" : "getProximityPolicies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetProximityPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetProximityPoliciesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getVideoIntercomPolicies" : {
      "post" : {
        "description" : "Get details about all video intercom policies in organization",
        "operationId" : "getVideoIntercomPolicies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetVideoIntercomPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetVideoIntercomPoliciesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/pauseAlertPolicyForComponentComposite" : {
      "post" : {
        "description" : "Pause alert policy for component composite",
        "operationId" : "pauseAlertPolicyForComponentComposite",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/pauseAlertPolicyForDevice" : {
      "post" : {
        "description" : "Pause alert policy for device",
        "operationId" : "pauseAlertPolicyForDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/pauseAlertPolicyForLocation" : {
      "post" : {
        "description" : "Pause alert policy for location",
        "operationId" : "pauseAlertPolicyForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateAccessControlledDoorPolicy" : {
      "post" : {
        "description" : "Update an access controlled door policy",
        "operationId" : "updateAccessControlledDoorPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateAccessControlledDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateAccessControlledDoorPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateAudioPolicy" : {
      "post" : {
        "description" : "Update a audio gateway policy",
        "operationId" : "updateAudioPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateAudioPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateAudioPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateCameraPolicy" : {
      "post" : {
        "description" : "Update a camera policy",
        "operationId" : "updateCameraPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateCameraPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateCameraPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateClimatePolicy" : {
      "post" : {
        "description" : "Update a climate policy",
        "operationId" : "updateClimatePolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateClimatePolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateClimatePolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateDoorPolicy" : {
      "post" : {
        "description" : "Update a door sensor policy",
        "operationId" : "updateDoorPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateDoorPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateOccupancyPolicy" : {
      "post" : {
        "description" : "Update an occupancy policy",
        "operationId" : "updateOccupancyPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateOccupancyPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateOccupancyPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateProximityPolicy" : {
      "post" : {
        "description" : "Update an asset tag policy",
        "operationId" : "updateProximityPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateProximityPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateProximityPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateSchedule" : {
      "post" : {
        "description" : "Update a schedule to be used for policy creation",
        "operationId" : "updateSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateVideoIntercomPolicy" : {
      "post" : {
        "description" : "Update video intercom policy",
        "operationId" : "updateVideoIntercomPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateVideoIntercomPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateVideoIntercomPolicyWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/proximity/getLocomotionEventsForTag" : {
      "post" : {
        "description" : "Get locomotion events for specified proximity tag",
        "operationId" : "getLocomotionEventsForTag",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Proximity_GetLocomotionEventsForTagWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Proximity_GetLocomotionEventsForTagWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Proximity Webservice" ]
      }
    },
    "/api/proximity/getMinimalProximityStateList" : {
      "post" : {
        "description" : "Get basic state information about all proximity tags in organization",
        "operationId" : "getMinimalProximityStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Proximity_GetMinimalProximityStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Proximity_GetMinimalProximityStatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Proximity Webservice" ]
      }
    },
    "/api/proximity/getProximityEventsForTag" : {
      "post" : {
        "description" : "Get recent events for specified proximity tag",
        "operationId" : "getProximityEventsForTags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Proximity_GetProximityEventsForTagWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Proximity_GetProximityEventsForTagWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Proximity Webservice" ]
      }
    },
    "/api/proximity/updateDetails" : {
      "post" : {
        "description" : "Update details for a proximity tag",
        "operationId" : "updateProximitySensorDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Proximity_UpdateProximitySensorDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Proximity_UpdateProximitySensorDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Proximity Webservice" ]
      }
    },
    "/api/rapidsos/getNearbyFeeds" : {
      "post" : {
        "description" : "Get closest 10 feeds by lat and long",
        "operationId" : "getNearbyFeeds",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rapidsos_GetNearbyFeedsRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rapidsos_GetNearbyFeedsResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "RapidSOS Webservice" ]
      }
    },
    "/api/relay/assignThirdPartyCameraToNVR" : {
      "post" : {
        "description" : "Assign a third party camera to an NVR",
        "operationId" : "assignThirdPartyCameraToNVR",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_AssignThirdPartyCameraToNVRWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_AssignThirdPartyCameraToNVRWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/assignThirdPartyCameraToRelayCamera" : {
      "post" : {
        "description" : "Assign a third party camera to a relay Camera",
        "operationId" : "assignThirdPartyCameraToRelayCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_AssignThirdPartyCameraToRelayCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_AssignThirdPartyCameraToRelayCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/authenticateThirdPartyCamera" : {
      "post" : {
        "description" : "Authenticate a third party camera, effectively validating the credentials specified to be used for it.",
        "operationId" : "authenticateThirdPartyCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_AuthenticateThirdPartyCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_AuthenticateThirdPartyCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/createThirdPartyCameraPassword" : {
      "post" : {
        "description" : "Create a third party camera password",
        "operationId" : "createThirdPartyCameraPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_CreateThirdPartyCameraPasswordWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_CreateThirdPartyCameraPasswordWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/deleteThirdPartyCameraPassword" : {
      "post" : {
        "description" : "Delete a third party camera password",
        "operationId" : "deleteThirdPartyCameraPasswords",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_DeleteThirdPartyCameraPasswordWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_DeleteThirdPartyCameraPasswordWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/executeThirdPartyCameraDiscovery" : {
      "post" : {
        "description" : "Trigger a discovery of cameras on the local LANs",
        "operationId" : "executeThirdPartyCameraDiscovery",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_ExecuteThirdPartyCameraDiscoveryWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_ExecuteThirdPartyCameraDiscoveryWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/findDefaultRtspUrlsByManufacturer" : {
      "post" : {
        "description" : "Find default rtsp urls by camera manufacturer.",
        "operationId" : "findDefaultRtspUrlsByManufacturer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_FindDefaultRtspUrlsByManufacturerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_FindDefaultRtspUrlsByManufacturerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/findDiscoveriesWithUnassignedRtspEndpoints" : {
      "post" : {
        "description" : "Finds discoveries that have unassigned RTSP endpoints. Only discoveries containing at least one endpoint are returned.",
        "operationId" : "findDiscoveriesWithUnassignedRtspEndpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_FindDiscoveriesWithUnassignedRtspEndpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_FindDiscoveriesWithUnassignedRtspEndpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/getAssignedThirdPartyCameras" : {
      "post" : {
        "description" : "Get a list of the third party cameras assigned to an NVR",
        "operationId" : "getAssignedThirdPartyCameras",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_GetAssignedThirdPartyCamerasWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetAssignedThirdPartyCamerasWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/getDetails" : {
      "post" : {
        "description" : "Get hardware details of multiple NVRs",
        "operationId" : "getNVRDetails",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_GetNVRDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetNVRDetailsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/getFullNVRState" : {
      "post" : {
        "description" : "Get detailed information about state of specified NVR",
        "operationId" : "getFullNVRState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_GetFullNVRStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetFullNVRStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/getImportThirdPartyCamerasFormat" : {
      "post" : {
        "description" : "Returns format for importing third party cameras.",
        "operationId" : "getImportThirdPartyCamerasFormat",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetImportThirdPartyCamerasFormatWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Third Party Camera Import Webservice" ]
      }
    },
    "/api/relay/getMinimalNVRStateList" : {
      "post" : {
        "description" : "Get basic state information about all NVRs in organization",
        "operationId" : "getMinimalNVRStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_GetMinimalNVRStateListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetMinimalNVRStateListWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/getMinimalThirdPartyCameraStateList" : {
      "post" : {
        "description" : "Get basic state information about all third party cameras in the organization",
        "operationId" : "getMinimalThirdPartyCameraStateList",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_GetMinimalThirdPartyCameraStateListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetMinimalThirdPartyCameraStateListWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/getRtspEndpoints" : {
      "post" : {
        "description" : "Gets rtsp endpoints for device with the specified mac address.",
        "operationId" : "getRtspEndpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_GetRtspEndpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetRtspEndpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/getThirdPartyCameraPasswords" : {
      "post" : {
        "description" : "Get a list of the third party camera passwords",
        "operationId" : "getThirdPartyCameraPasswords",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_GetThirdPartyCameraPasswordsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetThirdPartyCameraPasswordsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/importThirdPartyCameras/{locationUuid}" : {
      "post" : {
        "description" : "Imports third party cameras in csv format",
        "operationId" : "importThirdPartyCameras",
        "parameters" : [ {
          "in" : "path",
          "name" : "locationUuid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "object",
                    "nullable" : true
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_ImportThirdPartyCamerasWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Third Party Camera Import Webservice" ]
      }
    },
    "/api/relay/manualDiscoverCamera" : {
      "post" : {
        "description" : "Manually identify a camera on the network",
        "operationId" : "manualDiscoverCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_ManualDiscoverThirdPartyCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_ManualDiscoverThirdPartyCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/ptzMove" : {
      "post" : {
        "description" : "Trigger a pan, tilt, or zoom",
        "operationId" : "ptzMove",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_PTZMoveWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_PTZMoveWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/ptzStatus" : {
      "post" : {
        "description" : "Trigger a pan, tilt, or zoom",
        "operationId" : "ptz",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_PTZStatusWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_PTZStatusWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/reboot" : {
      "post" : {
        "description" : "Reboot an NVR",
        "operationId" : "rebootNVR",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_RebootNVRVWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_RebootNVRVWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/register" : {
      "post" : {
        "description" : "Register an NVR to an organization",
        "operationId" : "registerNVR",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_RegisterNVRVWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_RegisterNVRVWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/unassignThirdPartyCamera" : {
      "post" : {
        "description" : "Unassign a third party camera from an NVR",
        "operationId" : "unassignThirdPartyCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_UnassignThirdPartyCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_UnassignThirdPartyCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/unregister" : {
      "post" : {
        "description" : "Remove an NVR from organization",
        "operationId" : "unregisterNVR",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_UnregisterNVRWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_UnregisterNVRWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/updateDetailsV2" : {
      "post" : {
        "description" : "Update hardware details of NVR.",
        "operationId" : "updateNVRDetailsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_UpdateNVRVWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_UpdateNVRVWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/updateFirmware" : {
      "post" : {
        "description" : "Send command to update firmware to NVR",
        "operationId" : "updateNVRFirmware",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_UpdateNVRFirmwareWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_UpdateNVRFirmwareWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/report/getAuditFeed" : {
      "post" : {
        "description" : "Get the latest audit logs for organization",
        "operationId" : "getAuditFeed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetAuditFeedWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetAuditFeedWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getAuditFeedForTarget" : {
      "post" : {
        "description" : "Get audit logs for a specified entity",
        "operationId" : "getAuditFeedForTarget",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetAuditFeedForTargetWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetAuditFeedForTargetWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getAverageReport" : {
      "post" : {
        "description" : "Get the average report if it is available for the specified count report",
        "operationId" : "getAverageReport",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetAverageReportWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetAverageReportWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getAverageReports" : {
      "post" : {
        "description" : "Get the average reports if they are available for the specified count report",
        "operationId" : "getAverageReports",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetAverageReportsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetAverageReportsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getCountReport" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getCountReportV2 instead",
        "operationId" : "getCountReport",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetCountReportWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetCountReportWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getCountReportV2" : {
      "post" : {
        "description" : "Get the specified count reports",
        "operationId" : "getCountReportV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetCountReportV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetCountReportWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getCountReports" : {
      "post" : {
        "description" : "Get multiple specified count reports",
        "operationId" : "getCountReports",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetCountReportsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetCountReportsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getCountReportsForDevicesAtLocation" : {
      "post" : {
        "description" : "Get count reports by device for a specified location",
        "operationId" : "getCountReportsForDevicesAtLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetCountReportsForDevicesAtLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetCountReportsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getCustomLLMCounts" : {
      "post" : {
        "operationId" : "getCustomLLMCounts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetCustomLLMWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetCustomLLMWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getDiagnosticFeed" : {
      "post" : {
        "description" : "Get the latest diagnostic logs for organization",
        "operationId" : "getDiagnosticFeed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetDiagnosticFeedWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetDiagnosticFeedWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getEnvoyDeliveries" : {
      "post" : {
        "description" : "Get a list of deliveries from Envoy to populate reporting logs",
        "operationId" : "getEnvoyDeliveries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetEnvoyDeliveriesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetEnvoyDeliveriesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice", "Report Webservice" ]
      }
    },
    "/api/report/getEnvoyEmployees" : {
      "post" : {
        "description" : "Get a list of employees from Envoy",
        "operationId" : "getEnvoyEmployees",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetEnvoyEmployeesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetEnvoyEmployeesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice", "Report Webservice" ]
      }
    },
    "/api/report/getEnvoyLocations" : {
      "post" : {
        "description" : "Get list of Envoy locations",
        "operationId" : "getEnvoyLocations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetEnvoyLocationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetEnvoyLocationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice", "Report Webservice" ]
      }
    },
    "/api/report/getEnvoyVisitors" : {
      "post" : {
        "description" : "Get a list of visitors from Envoy to populate reporting logs",
        "operationId" : "getEnvoyVisitors",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetEnvoyVisitorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetEnvoyVisitorsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Integrations Webservice", "Report Webservice" ]
      }
    },
    "/api/report/getIntegrationDiagnosticEvents" : {
      "post" : {
        "description" : "Get the diagnostic logs of supported third-party devices for organization",
        "operationId" : "getIntegrationDiagnosticEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetIntegrationDiagnosticEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetIntegrationDiagnosticEventsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getLicensePlatesByDevice" : {
      "post" : {
        "description" : "Get license plate counting events for a specified camera",
        "operationId" : "getLicensePlatesByDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetLicensePlatesByDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetLicensePlatesByDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getMostRecentPeopleCountEvents" : {
      "post" : {
        "description" : "Get the X most recent people counting events for a specified device",
        "operationId" : "getMostRecentPeopleCountEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetMostRecentPeopleCountWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetMostRecentPeopleCountWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getOccupancyCount" : {
      "post" : {
        "operationId" : "getOccupancyCount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetOccupancyCountWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetOccupancyCountWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getOccupancyCounts" : {
      "post" : {
        "description" : "Returns the occupancy count for a specified room or area within a given time range. This endpoint allows you to monitor occupancy trends over time or retrieve a single count for a defined interval.\nImportant: An occupancy region must be defined in the Rhombus Console before using this endpoint.\nYou can optionally specify an interval (e.g., MINUTELY, QUARTERHOURLY, HOURLY ...) to retrieve occupancy counts broken down by sub-intervals between startTime and endTime.\nIf no interval is provided, a single occupancy count is returned for the entire duration between startTime and endTime.",
        "operationId" : "getOccupancyCounts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetOccupancyCountsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetOccupancyCountsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getProximityTagLocationsByDate" : {
      "post" : {
        "description" : "Get proximity tag locations by date",
        "operationId" : "getProximityTagLocationsByDate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetProximityTagLocationsByDateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetProximityTagLocationsByDateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getRunningAverage" : {
      "post" : {
        "description" : "Get the running average for the specified count report if it is available, based on recent data",
        "operationId" : "getRunningAverage",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetRunningAverageWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetRunningAverageWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getSummaryCountReport" : {
      "post" : {
        "description" : "Get a summary report for a camera, location, or organization",
        "operationId" : "getSummaryCountReport",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetSummaryCountReportWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetSummaryCountReportWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getThresholdCrossingCountReport" : {
      "post" : {
        "operationId" : "getThresholdCrossingCountReport",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountReportWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountReportWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getThresholdCrossingCounts" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get the occupancy counts from threshold crossing for a group of cameras over a period of time",
        "operationId" : "getThresholdCrossingCounts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getThresholdCrossingEvents" : {
      "post" : {
        "description" : "Get the raw threshold crossing events for a group of cameras over a period of time",
        "operationId" : "getThresholdCrossingEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetThresholdCrossingEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetThresholdCrossingEventsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getThresholdCrossingEventsForDevice" : {
      "post" : {
        "operationId" : "getThresholdCrossingEventsForDevice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetThresholdCrossingEventsForDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetThresholdCrossingEventsForDeviceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getToastEventsTable" : {
      "post" : {
        "description" : "Get list of Toast orders to populate events table",
        "operationId" : "getToastEventsTable",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetToastEventsTableWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetToastEventsTableWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getToastEventsTableAllLocations" : {
      "post" : {
        "description" : "Get list of Toast orders from all restaurants to populate events table",
        "operationId" : "getToastEventsTableAllLocations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetToastEventsTableAllLocationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetToastEventsTableAllLocationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/resetRunningAverage" : {
      "post" : {
        "description" : "Reset the running average for the specified count report",
        "operationId" : "resetRunningAverage",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_ResetRunningAverageWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_ResetRunningAverageWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/rules/createRule" : {
      "post" : {
        "description" : "Create a rule",
        "operationId" : "createRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_CreateRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_CreateRuleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/deleteRule" : {
      "post" : {
        "description" : "Delete a rule",
        "operationId" : "deleteRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_DeleteRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_DeleteRuleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/deleteRulePauseSetting" : {
      "post" : {
        "description" : "Delete a rule pause setting",
        "operationId" : "deleteRulePauseSetting",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_DeleteRulePauseSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_DeleteRulePauseSettingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/getRulePauseSettings" : {
      "post" : {
        "description" : "Get the current and planned rule pause details",
        "operationId" : "getRulePauseSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_GetRulePauseSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_GetRulePauseSettingsResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/getRulesFiltered" : {
      "post" : {
        "description" : "Get rules with Uuid and Type filtering",
        "operationId" : "getRulesFiltered",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_records_GetRulesFilteredWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_GetRulesForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/getRulesForOrg" : {
      "post" : {
        "description" : "List rules for org",
        "operationId" : "getRulesForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_GetRulesForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_GetRulesForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/pauseRule" : {
      "post" : {
        "description" : "Pause rule",
        "operationId" : "pauseRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_PauseRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_PauseRuleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/updateRule" : {
      "post" : {
        "description" : "Update a rule",
        "operationId" : "updateRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_UpdateRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_UpdateRuleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rulesRecords/deleteRulesEventRecord" : {
      "post" : {
        "description" : "Delete a rules event historical record",
        "operationId" : "deleteRulesEventRecord",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_records_DeleteRulesEventRecordWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_records_DeleteRulesEventRecordWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Records Webservice" ]
      }
    },
    "/api/rulesRecords/getLatestRulesEventRecords" : {
      "post" : {
        "description" : "Get N latest rules event historical records",
        "operationId" : "getLatestRulesEventRecords",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_records_GetLatestRulesEventRecordsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_records_GetLatestRulesEventRecordsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Records Webservice" ]
      }
    },
    "/api/rulesRecords/getRulesEventRecords" : {
      "post" : {
        "description" : "Find rules event historical records",
        "operationId" : "getRulesEventRecords",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_records_GetRulesEventRecordsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_records_GetRulesEventRecordsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Rules Records Webservice" ]
      }
    },
    "/api/scenequery/createPromptConfiguration" : {
      "post" : {
        "description" : "Create scene query configuration",
        "operationId" : "createPromptConfiguration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scenequery_CreatePromptConfigurationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scenequery_CreatePromptConfigurationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Scene Query Webservice" ]
      }
    },
    "/api/scenequery/deletePromptConfiguration" : {
      "post" : {
        "description" : "Delete scene query configuration",
        "operationId" : "deletePromptConfiguration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scenequery_DeletePromptConfigurationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scenequery_DeletePromptConfigurationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Scene Query Webservice" ]
      }
    },
    "/api/scenequery/findPromptConfigurations" : {
      "post" : {
        "description" : "Find all scene query configurations",
        "operationId" : "findAllPromptConfigurations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scenequery_FindAllPromptConfigurationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scenequery_FindAllPromptConfigurationsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Scene Query Webservice" ]
      }
    },
    "/api/scenequery/getPromptConfiguration" : {
      "post" : {
        "description" : "Get scene query configuration",
        "operationId" : "getPromptConfiguration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scenequery_GetPromptConfigurationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scenequery_GetPromptConfigurationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Scene Query Webservice" ]
      }
    },
    "/api/scenequery/getReport" : {
      "post" : {
        "description" : "Get report data",
        "operationId" : "getReport",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scenequery_ReportWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scenequery_ReportWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Scene Query Webservice" ]
      }
    },
    "/api/scenequery/selectiveUpdatePromptConfiguration" : {
      "post" : {
        "description" : "Selectively update a scene query configuration",
        "operationId" : "selectiveUpdatePromptConfiguration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scenequery_SelectiveUpdatePromptConfigurationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scenequery_SelectiveUpdatePromptConfigurationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Scene Query Webservice" ]
      }
    },
    "/api/scenequery/triggerPrompt" : {
      "post" : {
        "description" : "Trigger scene query with a custom prompt",
        "operationId" : "triggerPrompt",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scenequery_TriggerPromptWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scenequery_TriggerPromptWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Scene Query Webservice" ]
      }
    },
    "/api/scenequery/updatePromptConfiguration" : {
      "post" : {
        "description" : "Update scene query configuration",
        "operationId" : "updatePromptConfiguration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scenequery_UpdatePromptConfigurationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scenequery_UpdatePromptConfigurationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Scene Query Webservice" ]
      }
    },
    "/api/schedule/createAbsoluteSchedule" : {
      "post" : {
        "description" : "Create a absolute schedule",
        "operationId" : "createAbsoluteSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_CreateAbsoluteScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_CreateAbsoluteScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/createRelativeDateTimeIntervalsSchedule" : {
      "post" : {
        "description" : "Create a one-time relative datetime schedule",
        "operationId" : "createRelativeDateTimeIntervalsSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_CreateRelativeDateTimeIntervalsScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_CreateRelativeDateTimeIntervalsScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/createRelativeSchedule" : {
      "post" : {
        "description" : "Create a realtime relative schedule",
        "operationId" : "createRelativeSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_CreateRelativeScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_CreateRelativeScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/createWeeklySchedule" : {
      "post" : {
        "description" : "Create a weekly schedule",
        "operationId" : "createWeeklySchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_CreateWeeklyScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_CreateWeeklyScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/deleteSchedule" : {
      "post" : {
        "description" : "Delete a schedule",
        "operationId" : "deleteScheduleV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/findAbsoluteSchedule" : {
      "post" : {
        "description" : "Find an absolute schedule",
        "operationId" : "findAbsoluteSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_FindAbsoluteScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_FindAbsoluteScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/findRelativeDateTimeIntervalsSchedule" : {
      "post" : {
        "description" : "Find a one-time relative datetime schedule",
        "operationId" : "findRelativeDateTimeIntervalsSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_FindRelativeDateTimeIntervalsScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_FindRelativeDateTimeIntervalsScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/findRelativeSchedule" : {
      "post" : {
        "description" : "Find a relative schedule",
        "operationId" : "findRelativeSchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_FindRelativeScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_FindRelativeScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/findWeeklySchedule" : {
      "post" : {
        "description" : "Find a weekly schedule",
        "operationId" : "findWeeklySchedule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_FindWeeklyScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_FindWeeklyScheduleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/getScheduleData" : {
      "post" : {
        "description" : "Get weekly schedules in org with usage data",
        "operationId" : "getScheduleData",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_GetSchedulesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_GetScheduleDataWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/getScheduleDataV2" : {
      "post" : {
        "description" : "Get weekly schedules in org with usage data",
        "operationId" : "getScheduleDataV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_GetScheduleDataV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_GetScheduleDataV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/getSchedules" : {
      "post" : {
        "description" : "Get schedules in org",
        "operationId" : "getSchedules",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_GetSchedulesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_GetSchedulesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/search/deleteVideoEmbeddings" : {
      "post" : {
        "description" : "Delete video embedding, do not use unless you know what you're doing.",
        "operationId" : "deleteVideoEmbedding",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_DeleteVideoEmbeddingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_DeleteVideoEmbeddingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/indexVideoEmbeddings" : {
      "post" : {
        "description" : "Index video embedding, do not use unless you know what you're doing.",
        "operationId" : "indexVideoEmbedding",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_IndexVideoEmbeddingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_IndexVideoEmbeddingWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchLicensePlates" : {
      "post" : {
        "deprecated" : true,
        "description" : "Fuzzy search for license plate sightings based on a partial or full plate number. Use /vehicle/getVehicleEvents instead.",
        "operationId" : "searchLicensePlates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchLicensePlatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchLicensePlatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchObjectsByColor" : {
      "post" : {
        "description" : "Search for objects by color",
        "operationId" : "searchObjectsByColor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchObjectsByColorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchObjectsByColorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchSimilarObjectEmbeddings" : {
      "post" : {
        "description" : "Search for similar objects by embedding",
        "operationId" : "searchSimilarObjectEmbeddings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchSimilarObjectEmbeddingsByText" : {
      "post" : {
        "description" : "Search for similar objects by text",
        "operationId" : "searchSimilarObjectEmbeddingsByText",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsByTextWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchSimilarObjectEmbeddingsByVector" : {
      "post" : {
        "description" : "Search for similar objects by explicit vector",
        "operationId" : "searchSimilarObjectEmbeddingsByVector",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsByVectorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchSimilarVideoEmbeddings" : {
      "post" : {
        "description" : "Search for similar videos by embedding",
        "operationId" : "searchSimilarVideoEmbeddings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchSimilarVideoEmbeddingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchSimilarVideoEmbeddingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchSimilarVideoEmbeddingsByTimeWindow" : {
      "post" : {
        "description" : "Search for similar videos by time window",
        "operationId" : "searchSimilarVideoEmbeddingsByTimeWindow",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchSimilarVideoEmbeddingsByTimeWindowWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchSimilarVideoEmbeddingsByTimeWindowWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/sensors/getFootageSensorSeekpointsForCamera" : {
      "post" : {
        "description" : "Get sensor activity seekpoints for camera",
        "operationId" : "getSensorFootageSensorSeekpointsForCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sensor Webservice" ]
      }
    },
    "/api/sensors/getFootageSensorSeekpointsForLocation" : {
      "post" : {
        "description" : "Get sensor activity seekpoints for a location",
        "operationId" : "getFootageSensorSeekpointsForLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sensor Webservice" ]
      }
    },
    "/api/sensors/getFootageSensorSeekpointsForSensor" : {
      "post" : {
        "description" : "Get sensor activity seekpoints for a sensor",
        "operationId" : "getFootageSensorSeekpointsForSensor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForSensorWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Sensor Webservice" ]
      }
    },
    "/api/share/camera/getCurrentState" : {
      "post" : {
        "operationId" : "getCurrentState",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetSharedCameraCurrentStateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get the current state of the camera",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/camera/getFootageBoundingBoxes" : {
      "post" : {
        "operationId" : "getShareFootageBoundingBoxes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedFootageBoundingBoxesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedFootageBoundingBoxesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get object bounding boxes for shared clip",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/camera/getFootageSeekpoints" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "getShareFootageSeekpoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedFootageSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedFootageSeekpointsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Use /getFootageSeekpointsV2 instead",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/camera/getFootageSeekpointsV2" : {
      "post" : {
        "operationId" : "getShareFootageSeekpointsV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedFootageSeekpointsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedFootageSeekpointsV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get activity seekpoints for shared clip",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/camera/getMediaUris" : {
      "post" : {
        "operationId" : "getMediaUris",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedMediaUrisWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedMediaUrisWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get camera media uris for shared stream",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/camera/getPresenceWindows" : {
      "post" : {
        "operationId" : "getSharePresenceWindows",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get video presence data for shared stream",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/camera/getSharedVideoWallMediaUris" : {
      "post" : {
        "operationId" : "getSharedVideoWallMediaUris",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedVideoWallMediaUrisWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedVideoWallMediaUrisWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get camera media uris for shared video walls",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/clips/getSharedClipData" : {
      "post" : {
        "operationId" : "getSharedClipData",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedClipDataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedClipDataWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get information about the shared clip",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/getSharedLiveStreamInfo" : {
      "post" : {
        "operationId" : "getSharedLiveStreamInfo",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedLiveStreamInfoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get information about shared live stream",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/getSharedVideoWallInfo" : {
      "post" : {
        "operationId" : "getSharedVideoWallInfo",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedVideoWallInfoWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get information about shared video walls",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/sensors/getFootageSensorSeekpointsForCamera" : {
      "post" : {
        "operationId" : "getShareFootageSensorSeekpointsForCamera",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedFootageSensorSeekpointsForCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedFootageSensorSeekpointsForCameraWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get sensor activity seekpoints for camera",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/shareLink" : {
      "post" : {
        "description" : "Send an email or sms message containing the shared media link",
        "operationId" : "shareLink",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_ShareLinkWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_ShareLinkWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/timelapse/getSharedTimelapseClipData" : {
      "post" : {
        "deprecated" : true,
        "operationId" : "getSharedTimelapseClipData",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedTimelapseDataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedTimelapseDataWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Use /getSharedTimelapseClipDataV2 instead",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/share/timelapse/getSharedTimelapseClipDataV2" : {
      "post" : {
        "operationId" : "getSharedTimelapseClipDataV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share_GetSharedTimelapseDataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share_GetSharedTimelapseDataV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get information about the shared timelapse",
        "tags" : [ "Share Webservice" ]
      }
    },
    "/api/supportAuthority/addSupportAuthority" : {
      "post" : {
        "operationId" : "addSupportAuthority",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Support_AddSupportAuthorityWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Support_AddSupportAuthorityWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Add a support authority to organization",
        "tags" : [ "Support Webservice", "Support Authority Webservice" ]
      }
    },
    "/api/supportAuthority/allowSupportAuthorityAccess" : {
      "post" : {
        "operationId" : "allowSupportAuthorityAccess",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Support_AlllowSupportAuthorityAccessWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Support_AlllowSupportAuthorityAccessWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Allow access to a support authority",
        "tags" : [ "Support Webservice", "Support Authority Webservice" ]
      }
    },
    "/api/supportAuthority/findSupportAuthoritySessions" : {
      "post" : {
        "operationId" : "findSupportAuthoritySessions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Support_FindSupportAuthoritySessionsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Support_FindSupportAuthoritySessionsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get list of all current support authority sessions",
        "tags" : [ "Support Webservice", "Support Authority Webservice" ]
      }
    },
    "/api/supportAuthority/getSupportAuthorities" : {
      "post" : {
        "operationId" : "getSupportAuthorities",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Support_GetSupportAuthoritiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Support_GetSupportAuthoritiesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Get list of support authorities for organization",
        "tags" : [ "Support Webservice", "Support Authority Webservice" ]
      }
    },
    "/api/supportAuthority/logoutAllSupportAuthoritySessions" : {
      "post" : {
        "operationId" : "logoutAllSupportAuthoritySessions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Support_LogoutAllSupportAuthoritySessionsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Support_LogoutAllSupportAuthoritySessionsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Logout all current support authority sessions",
        "tags" : [ "Support Webservice", "Support Authority Webservice" ]
      }
    },
    "/api/supportAuthority/lookupSupportPartnerAuthorities" : {
      "post" : {
        "operationId" : "lookupSupportPartnerAuthorities",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Support_LookupSupportPartnerAuthoritiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Support_LookupSupportPartnerAuthoritiesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Search for partner authorities",
        "tags" : [ "Support Webservice", "Support Authority Webservice" ]
      }
    },
    "/api/supportAuthority/removeSupportAuthority" : {
      "post" : {
        "operationId" : "removeSupportAuthority",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Support_RemoveSupportAuthorityWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Support_RemoveSupportAuthorityWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Remove a support authority from organization",
        "tags" : [ "Support Webservice", "Support Authority Webservice" ]
      }
    },
    "/api/supportAuthority/revokeSupportAuthorityAccess" : {
      "post" : {
        "operationId" : "revokeSupportAuthorityAccess",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Support_RevokeSupportAuthorityAccessWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Support_RevokeSupportAuthorityAccessWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Revoke access to a support authority",
        "tags" : [ "Support Webservice", "Support Authority Webservice" ]
      }
    },
    "/api/supportAuthority/updateSupportAuthority" : {
      "post" : {
        "operationId" : "updateSupportAuthority",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Support_UpdateSupportAuthorityWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Support_UpdateSupportAuthorityWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "summary" : "Update a support authority for organization",
        "tags" : [ "Support Webservice", "Support Authority Webservice" ]
      }
    },
    "/api/tvos/getTvOsConfig" : {
      "post" : {
        "description" : "get specific tvOs config",
        "operationId" : "getTvOsConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tvos_GetTvOsConfigWsRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tvos_GetTvOsConfigWsResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "TvOs Config Webservice" ]
      }
    },
    "/api/tvos/getTvOsConfigsForOrg" : {
      "post" : {
        "description" : "get tvOs configs for org",
        "operationId" : "getTvOsConfigsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tvos_GetTvOsConfigsForOrgWsRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tvos_GetTvOsConfigsForOrgWsResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "TvOs Config Webservice" ]
      }
    },
    "/api/tvos/updateTvOsConfig" : {
      "post" : {
        "description" : "Update tvOs config",
        "operationId" : "updateTvOsConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tvos_UpdateTvOsConfigWsRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tvos_UpdateTvOsConfigWsResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "TvOs Config Webservice" ]
      }
    },
    "/api/upload/accessControlledDoor/delete/{accessControlledDoorUuidStr}" : {
      "post" : {
        "description" : "Upload an image of the specified AccessControlledDoor",
        "operationId" : "deleteAccessControlledDoorPicture",
        "parameters" : [ {
          "in" : "path",
          "name" : "accessControlledDoorUuidStr",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/accessControlledDoor/{accessControlledDoorUuidStr}" : {
      "post" : {
        "description" : "Upload an image of the specified AccessControlledDoor",
        "operationId" : "uploadAccessControlledDoorPicture",
        "parameters" : [ {
          "in" : "path",
          "name" : "accessControlledDoorUuidStr",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/badgeTemplate/images" : {
      "post" : {
        "description" : "Upload badge template images",
        "operationId" : "uploadBadgeTemplateImages",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/bulkUploadUserProfilePhotos" : {
      "post" : {
        "description" : "Bulk upload user profile picture. Each photo must be <= 5MB with a limit of 100 photos at a time",
        "operationId" : "bulkUploadUserProfilePhotos",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/companyLogo" : {
      "post" : {
        "description" : "Upload company logo",
        "operationId" : "uploadCompanyLogo",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/errors/{fileName}" : {
      "post" : {
        "description" : "Upload error logs",
        "operationId" : "uploadErrors",
        "parameters" : [ {
          "in" : "path",
          "name" : "fileName",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/floorplan" : {
      "post" : {
        "description" : "Upload a new floorplan for a location",
        "operationId" : "uploadNewFloorPlan",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/floorplan/{floorPlanUuid}" : {
      "post" : {
        "description" : "Upload a existing floorplan for a location",
        "operationId" : "uploadExistingFloorPlan",
        "parameters" : [ {
          "in" : "path",
          "name" : "floorPlanUuid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/guest/{guestEmail}" : {
      "post" : {
        "description" : "Upload user profile picture",
        "operationId" : "uploadGuestProfilePicture",
        "parameters" : [ {
          "in" : "path",
          "name" : "guestEmail",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/keypadLogo" : {
      "post" : {
        "operationId" : "uploadKeypadLogo",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/rhombusKeyLogo" : {
      "post" : {
        "operationId" : "uploadRhombusKeyLogo",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/sensor/{sensorUuid}/thumbnail" : {
      "post" : {
        "description" : "Upload an image to be associated with a sensor",
        "operationId" : "uploadSensorThumbnails",
        "parameters" : [ {
          "in" : "path",
          "name" : "sensorUuid",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "image/jpeg" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/user/deleteProfile/{userUuidStr}" : {
      "post" : {
        "description" : "Delete user profile picture",
        "operationId" : "deleteUserProfilePicture",
        "parameters" : [ {
          "in" : "path",
          "name" : "userUuidStr",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/user/{userUuidStr}" : {
      "post" : {
        "description" : "Upload user profile picture",
        "operationId" : "uploadUserProfilePicture",
        "parameters" : [ {
          "in" : "path",
          "name" : "userUuidStr",
          "required" : true,
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/user/assignEmailToUser" : {
      "post" : {
        "description" : "Assign a user to an email as long as the user is not currently assigned to one",
        "operationId" : "assignEmailToUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_AssignEmailToUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_AssignEmailToUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/changeEmail" : {
      "post" : {
        "description" : "Change a user's email",
        "operationId" : "changeEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_ChangeUserEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_ChangeUserEmailWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/changePassword" : {
      "post" : {
        "description" : "Change a user's password",
        "operationId" : "changePassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_ChangeUserPasswordWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_ChangeUserPasswordWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/createUser" : {
      "post" : {
        "description" : "Create a user for organization",
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_CreateUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_CreateUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/deleteUser" : {
      "post" : {
        "description" : "Delete a user",
        "operationId" : "deleteUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_DeleteUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_DeleteUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/deleteVirtualMfaDeviceForCurrentUser" : {
      "post" : {
        "description" : "Remove MFA for current user",
        "operationId" : "deleteVirtualMfaDeviceForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_DeleteVirtualMfaDeviceForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_DeleteVirtualMfaDeviceForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/findUser" : {
      "post" : {
        "description" : "Retrieve a specific user by uuid.",
        "operationId" : "findUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_FindUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_FindUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/findUserByEmail" : {
      "post" : {
        "description" : "Retrieve a specific user by email.",
        "operationId" : "findUserByEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_FindUserByEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_FindUserByEmailWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/getImportUsersFormat" : {
      "post" : {
        "description" : "Returns format for importing users.",
        "operationId" : "getImportUsersFormat",
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_GetImportUsersFormatWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Import Webservice" ]
      }
    },
    "/api/user/getPartnerUsersInOrg" : {
      "post" : {
        "description" : "Get list of all partners in organization",
        "operationId" : "getPartnerUsersInOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetPartnerUsersInOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetPartnerUsersInOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/getRhombusKeyConfigForUser" : {
      "post" : {
        "description" : "Retrieve the RhombusKey mobile app config for a user. If it does not exist a default one is created and returned.",
        "operationId" : "getRhombusKeyConfigForUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_GetRhombusKeyConfigForUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_GetRhombusKeyConfigForUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/getUserCustomizationFlags" : {
      "post" : {
        "description" : "Get user's customization flags",
        "operationId" : "getUserCustomizationFlags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_GetUserCustomizationFlagsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_GetUserCustomizationFlagsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/getUsersInOrg" : {
      "post" : {
        "description" : "Get list of all users in organization",
        "operationId" : "getUsersInOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_GetUsersInOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_GetUsersInOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/getUsersInOrgForReports" : {
      "post" : {
        "description" : "Gets a reduced amount of information about users in the organization to be used for reports.",
        "operationId" : "getUsersInOrgForReports",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_GetUsersInOrgForReportsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_GetUsersInOrgForReportsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/getVirtualMfaDeviceForCurrentUser" : {
      "post" : {
        "description" : "Get details about MFA for current user",
        "operationId" : "getVirtualMfaDeviceForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_GetVirtualMfaDeviceForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_GetVirtualMfaDeviceForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/importUsers" : {
      "post" : {
        "description" : "Imports users in csv format",
        "operationId" : "importUsers",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "object",
                    "nullable" : true
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_ImportUsersWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Import Webservice" ]
      }
    },
    "/api/user/metadata/createUserMetadataFieldTemplate" : {
      "post" : {
        "description" : "Create a new template user metadata field that will be applicable to all users",
        "operationId" : "createUserMetadataFieldTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_CreateUserMetadataFieldTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_CreateUserMetadataFieldTemplateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/deleteUserMetadataField" : {
      "post" : {
        "description" : "Deletes the specified user's value stored for the specified template",
        "operationId" : "deleteUserMetadataField",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_DeleteUserMetadataFieldWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_DeleteUserMetadataFieldWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/deleteUserMetadataFieldTemplate" : {
      "post" : {
        "description" : "Delete a template user metadata field. THIS WILL DELETE THE CUSTOM FIELD AND USER DATA FOR THIS FIELD",
        "operationId" : "deleteUserMetadataFieldTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_DeleteUserMetadataFieldTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_DeleteUserMetadataFieldTemplateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/findUserMetadataFieldTemplates" : {
      "post" : {
        "description" : "Find all template user metadata fields for the org",
        "operationId" : "findUserMetadataFieldTemplates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_FindUserMetadataFieldTemplatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_FindUserMetadataFieldTemplatesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/findUserMetadataFields" : {
      "post" : {
        "description" : "Returns the org template metadata fields and the queried users stored values for those fields if they've been set.",
        "operationId" : "findUserMetadataFields",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_FindUserMetadataFieldsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_FindUserMetadataFieldsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/saveUserMetadataFields" : {
      "post" : {
        "description" : "Saves custom metadata values for the user specified. Template IDs that do not map to an actual org metadata template are ignored and values for omitted Template IDs are left as-is.",
        "operationId" : "saveUserMetadataFields",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_SaveUserMetadataFieldsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_SaveUserMetadataFieldsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/updateUserMetadataFieldTemplate" : {
      "post" : {
        "description" : "Update a template user metadata field that will be applicable to all users",
        "operationId" : "updateUserMetadataFieldTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_UpdateUserMetadataFieldTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_UpdateUserMetadataFieldTemplateWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/sendMobileDownloadSMS" : {
      "post" : {
        "description" : "Send SMS with link to download mobile app",
        "operationId" : "sendMobileDownloadSMS",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_SendMobileDownloadSMSWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_SendMobileDownloadSMSWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/sendPartnerAccessGranted" : {
      "post" : {
        "description" : "Send partner an email to access client account",
        "operationId" : "sendPartnerAccessGrantedEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_SendPartnerAccessGrantedEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_SendPartnerAccessGrantedEmailWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/sendRhombusKeyUserWelcomeEmail" : {
      "post" : {
        "description" : "Send a rhombus key welcome email to a user",
        "operationId" : "sendRhombusKeyUserWelcomeEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_SendRhombusKeyUserWelcomeEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_SendRhombusKeyUserWelcomeEmailWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/sendUserWelcomeEmail" : {
      "post" : {
        "description" : "Send a welcome email to a user",
        "operationId" : "sendUserWelcomeEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_SendUserWelcomeEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_SendUserWelcomeEmailWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/setupVirtualMfaDeviceForCurrentUser" : {
      "post" : {
        "description" : "Configure MFA for current user",
        "operationId" : "setupVirtualMfaDeviceForCurrentUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_SetupVirtualMfaDeviceForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_SetupVirtualMfaDeviceForCurrentUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updatePartnerUser" : {
      "post" : {
        "description" : "Update a partner's details",
        "operationId" : "updatePartnerUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdatePartnerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdatePartnerWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Partner Webservice", "User Webservice" ]
      }
    },
    "/api/user/updatePartnerUserNotificationSettings" : {
      "post" : {
        "description" : "Update notification settings for partner user",
        "operationId" : "updatePartnerUserNotificationSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdatePartnerUserNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdatePartnerUserNotificationSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updateRhombusKeySettingsForUser" : {
      "post" : {
        "description" : "Update the RhombusKey mobile app settings for the user",
        "operationId" : "updateRhombusKeySettingsForUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateRhombusKeySettingsForUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateRhombusKeySettingsForUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updateUser" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update a user's details, DEPRECATED[4/28/2025]: use updateUserSelective",
        "operationId" : "updateUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateUserWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updateUserCustomizationFlags" : {
      "post" : {
        "description" : "Update user's customization flags",
        "operationId" : "updateUserCustomizationFlags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateUserCustomizationFlagsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateUserCustomizationFlagsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updateUserNotificationSettings" : {
      "post" : {
        "description" : "Update notification settings for user",
        "operationId" : "updateUserNotificationSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateUserNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateUserNotificationSettingsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updateUserSelective" : {
      "post" : {
        "description" : "Selectively updates a user's details. Omitted fields are ignored but fields with null will unset a value",
        "operationId" : "updateUserSelective",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateUserSelectiveWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateUserSelectiveWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/vehicle/addVehicleLabel" : {
      "post" : {
        "description" : "Add a label to a vehicle",
        "operationId" : "addVehicleLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_AddVehicleLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_AddVehicleLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/associateEventsToVehicle" : {
      "post" : {
        "description" : "Associate vehicle events to a saved vehicle",
        "operationId" : "associateEventsToVehicle",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_AssociateEventsToVehicleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_AssociateEventsToVehicleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/deleteVehicle" : {
      "post" : {
        "description" : "Delete a saved vehicle",
        "operationId" : "deleteVehicle",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_DeleteVehicleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_DeleteVehicleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getRecentVehicleEvents" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent vehicle events for organization. Use /vehicle/getVehicleEvents instead.",
        "operationId" : "getRecentVehicleEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getRecentVehicleEventsByLocation" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent vehicle events for a location. Use /vehicle/getVehicleEvents instead.",
        "operationId" : "getRecentVehicleEventsByLocation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsByLocationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getRecentVehicleEventsForVehicle" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent vehicle events for specified vehicle. Use /vehicle/getVehicleEvents instead.",
        "operationId" : "getRecentVehicleEventsForVehicle",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsForVehicleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsForVehicleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getVehicleEvents" : {
      "post" : {
        "description" : "Get vehicle events with filters and additive queries",
        "operationId" : "getVehicleEvents",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetVehicleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetVehicleEventsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getVehicleLabelsForOrg" : {
      "post" : {
        "description" : "Get all vehicle labels for organization",
        "operationId" : "getVehicleLabelsForOrg",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetVehicleLabelsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetVehicleLabelsForOrgWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getVehicles" : {
      "post" : {
        "description" : "Get details of all saved vehicles in organization",
        "operationId" : "getVehicles",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetVehiclesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetVehiclesWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/removeVehicleLabel" : {
      "post" : {
        "description" : "Remove a label to a vehicle",
        "operationId" : "removeVehicleLabel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_RemoveVehicleLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_RemoveVehicleLabelWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/reportVehicleEvent" : {
      "post" : {
        "description" : "Report a mis-detected license plate event.  This sends the image/clip to Rhombus to better train AI models and removes the event",
        "operationId" : "reportVehicleEvent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_ReportVehicleEventRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_ReportVehicleEventResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/saveVehicle" : {
      "post" : {
        "description" : "Name and save a vehicle based on license plate number",
        "operationId" : "saveVehicle",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_SaveVehicleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_SaveVehicleWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/video/cancelSplice" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /cancelSpliceV2 instead",
        "operationId" : "cancelSplice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_CancelSpliceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_CancelSpliceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/cancelSpliceV2" : {
      "post" : {
        "description" : "Cancel a spliced clip request",
        "operationId" : "cancelSpliceV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_CancelSpliceV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_CancelSpliceV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/createSharedTimelapseGroup" : {
      "post" : {
        "description" : "Share multiple timelapses in one link",
        "operationId" : "createSharedTimelapseGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_CreateSharedTimelapseGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_CreateSharedTimelapseGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/deleteSharedTimelapseGroup" : {
      "post" : {
        "description" : "Delete a shared timelapse link",
        "operationId" : "deleteSharedTimelapseGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_DeleteSharedTimelapseGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_DeleteSharedTimelapseGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/deleteTimelapseClips" : {
      "post" : {
        "description" : "Delete a timelapse",
        "operationId" : "deleteTimelapseClips",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_DeleteTimelapseClipsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_DeleteTimelapseClipsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/generateTimelapseClip" : {
      "post" : {
        "description" : "Generate a timelapse",
        "operationId" : "generateTimelapseClip",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GenerateTimelapseClipWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GenerateTimelapseClipWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getExactFrameUri" : {
      "post" : {
        "description" : "Generate URL to get an exact frame with optional crop from a camera",
        "operationId" : "getExactFrameUri",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetExactFrameUriWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetExactFrameUriWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getMaxSpliceDuration" : {
      "post" : {
        "description" : "Get the max splice duration an organization can set",
        "operationId" : "getMaxSpliceDuration",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetMaxSpliceDurationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetMaxSpliceDurationWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getSharedTimelapseGroups" : {
      "post" : {
        "description" : "Get details of all shared timelapse links for organization",
        "operationId" : "getSharedTimelapseGroups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetSharedTimelapseGroupsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetSharedTimelapseGroupsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getSplicedClipsInProgress" : {
      "post" : {
        "description" : "Get all spliced clips in progress",
        "operationId" : "getSplicedClipsInProgress",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetSplicedClipsInProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetSplicedClipsInProgressWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getTimelapseClips" : {
      "post" : {
        "description" : "Get all timelapse clips for organization",
        "operationId" : "getTimelapseClips",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetTimelapseClipsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetTimelapseClipsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getTimelapseMetadata" : {
      "post" : {
        "description" : "Get information about earliest available timelapse images for cameras",
        "operationId" : "getTimelapseMetadata",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetTimelapseMetadataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetTimelapseMetadataWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/retrySplice" : {
      "post" : {
        "description" : "Send a request to retry splicing a clip",
        "operationId" : "retrySplice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_RetrySpliceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_RetrySpliceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/shareTimelapseClips" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /CreateSharedTimelapseGroup instead",
        "operationId" : "shareTimelapseClips",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_ShareTimelapseClipsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_ShareTimelapseClipsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/splice" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /spliceV3 instead",
        "operationId" : "splice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_SpliceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_SpliceWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/spliceFrame" : {
      "post" : {
        "description" : "Send a request to create a single image from a point in time",
        "operationId" : "spliceFrame",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_SpliceFrameWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_SpliceFrameWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/spliceV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /spliceV3 instead",
        "operationId" : "spliceV2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_SpliceV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_SpliceV2WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/spliceV3" : {
      "post" : {
        "description" : "Send a request to create an arbitrary clip for multiple cameras",
        "operationId" : "spliceV3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_SpliceV3WSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_SpliceV3WSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/updateSharedTimelapseGroup" : {
      "post" : {
        "description" : "Update title, description, or expiration on a shared timelapse link",
        "operationId" : "updateSharedTimelapseGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_UpdateSharedTimelapseGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_UpdateSharedTimelapseGroupWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/updateTimelapseClipMetadata" : {
      "post" : {
        "description" : "Update a timelapse clip's editable metadata",
        "operationId" : "updateTimelapseClipMetadata",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_UpdateTimelapseClipMetadataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_UpdateTimelapseClipMetadataWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Video Webservice" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ACUDoorCatalogItem" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "ACUDoorLicenseType" : {
        "type" : "object",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AITShipmentInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "aitTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "carrierTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "depositorOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "destinationAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "isIngramDistributorShipment" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shipmentDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "shippedItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ShippedItemType"
            },
            "nullable" : true
          }
        }
      },
      "AMSirenSettingsType" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "playCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AbsoluteSecondsIntervalType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "b" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "e" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AbsoluteSecondsScheduleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "intervalList" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AbsoluteSecondsIntervalType"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AccessControlAuthenticationResultEnumType" : {
        "type" : "string",
        "enum" : [ "ACCEPTED", "REJECTED", "ERROR", "NA" ]
      },
      "AccessControlAuthorizationResultEnumType" : {
        "type" : "string",
        "enum" : [ "ALLOWED", "DENIED", "DISABLED", "ERROR", "NA" ]
      },
      "AccessControlCredentialEnumType" : {
        "type" : "string",
        "enum" : [ "STANDARD_CSN", "RHOMBUS_SECURE_CSN", "RHOMBUS_SECURE_MOBILE", "PIN_CODE", "WIEGAND_H10301", "WIEGAND_H10304", "WIEGAND_D10202", "WIEGAND_64BIT_RAW" ]
      },
      "AccessControlCredentialType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/StandardCsnType"
        }, {
          "$ref" : "#/components/schemas/RhombusSecureCsnType"
        }, {
          "$ref" : "#/components/schemas/RhombusSecureMobileType"
        }, {
          "$ref" : "#/components/schemas/PinCredential"
        }, {
          "$ref" : "#/components/schemas/WiegandH10301CredentialType"
        }, {
          "$ref" : "#/components/schemas/WiegandH10304Credential"
        }, {
          "$ref" : "#/components/schemas/WiegandD10202Credential"
        }, {
          "$ref" : "#/components/schemas/Wiegand64BitRawCredentialType"
        } ],
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "AccessControlCredentialWorkflowStatusEnumType" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "UNASSIGNED", "SUSPENDED", "REVOKED" ]
      },
      "AccessControlUnitBatteryStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "batteryFound" : {
              "type" : "boolean",
              "nullable" : true
            },
            "batteryMa" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "batteryMv" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "onBackupPower" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AccessControlUnitDoorFirstInStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "doorAuthFirstInEventReference" : {
              "$ref" : "#/components/schemas/DoorFirstInStateChangeEventReference"
            },
            "doorScheduleFirstInEventReference" : {
              "$ref" : "#/components/schemas/DoorFirstInStateChangeEventReference"
            },
            "settingsUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AccessControlUnitLocationLockdownStateEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "activeLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "deactivatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "doorEventReferenceMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/DoorLockdownStateEventReference"
              },
              "nullable" : true
            },
            "followingTestPlan" : {
              "type" : "boolean",
              "nullable" : true
            },
            "locationLockdownStateChangedAtMillis" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "state" : {
              "$ref" : "#/components/schemas/LocationLockdownStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AccessControlUnitTamperEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "source" : {
              "$ref" : "#/components/schemas/AccessControlUnitTamperSourceEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AccessControlUnitTamperSourceEnumType" : {
        "type" : "string",
        "enum" : [ "PROX", "ACCEL", "SWITCH", "NA" ]
      },
      "AccessControlledDoorPolicyAlertType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "accessControlUnitUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "accessControlledDoorUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "componentUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "initiatingUsername" : {
              "type" : "string",
              "nullable" : true
            },
            "originatorEntityName" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "alertMonitoringThreatCaseUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "alertMonitoringVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clipLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "clipLocationMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "delayedProcessing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "finalized" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "saved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "textDescription" : {
            "type" : "string",
            "description" : "Natural language description of the alert",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "POLICY_ALERT_V2", "ACCESS_CONTROLLED_DOOR_POLICY_ALERT" ],
            "nullable" : true,
            "readOnly" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AccessControlledDoorPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AccessControlledDoorScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "AccessControlledDoorShadow" : {
        "type" : "object",
        "properties" : {
          "authFirstIn" : {
            "$ref" : "#/components/schemas/FirstInShadow"
          },
          "componentCompositeUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleFirstIn" : {
            "$ref" : "#/components/schemas/FirstInShadow"
          },
          "state" : {
            "$ref" : "#/components/schemas/DoorStateShadow"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentCompositeShadowEnum"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AccessControlledDoorStateEnumType" : {
        "type" : "string",
        "enum" : [ "UNLOCKED", "ACCESS_CONTROLLED" ]
      },
      "AccessControlledDoorType" : {
        "type" : "object",
        "properties" : {
          "ajarTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "aperioDoorExtensionComponent" : {
            "$ref" : "#/components/schemas/ComponentReferenceType"
          },
          "aperioDoorId" : {
            "type" : "string",
            "nullable" : true
          },
          "aperioGatewayComponent" : {
            "$ref" : "#/components/schemas/ComponentReferenceType"
          },
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "associatedFaceDetectionCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "doorAuthFirstInStateOverride" : {
            "$ref" : "#/components/schemas/FirstInState"
          },
          "doorScheduleFirstInStateOverride" : {
            "$ref" : "#/components/schemas/FirstInState"
          },
          "doorStateOverride" : {
            "$ref" : "#/components/schemas/BaseDoorStateOverride"
          },
          "doorStateToScheduleUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "dpiComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "forceAllReadersFirstInAuthRequiredLedFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersFirstInUnlockPendingLedFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersOtherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersRemoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forcedOpenEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forcedOpenTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "geofenceEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "geofenceRadius" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nfcSecureDowngradeEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "privacyModeSupportEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximityUnlockSettings" : {
            "$ref" : "#/components/schemas/ProximityUnlockSettingsType"
          },
          "readerComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relayComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relockAfterOpenTimeMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rexComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "sendExpiredIntentEvents" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subType" : {
            "type" : "string",
            "enum" : [ "RHOMBUS", "APERIO" ],
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentCompositeEnumType"
          },
          "unlockTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "unlockTimeSecRex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "waveToUnlockSettings" : {
            "$ref" : "#/components/schemas/WaveToUnlockSettingsType"
          }
        }
      },
      "AccessControlledDoorType_Minimal" : {
        "type" : "object",
        "properties" : {
          "aperioDoorExtensionComponent" : {
            "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
          },
          "aperioDoorId" : {
            "type" : "string",
            "nullable" : true
          },
          "aperioGatewayComponent" : {
            "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "doorAuthFirstInStateOverride" : {
            "$ref" : "#/components/schemas/FirstInState_Minimal"
          },
          "doorScheduleFirstInStateOverride" : {
            "$ref" : "#/components/schemas/FirstInState_Minimal"
          },
          "doorStateOverride" : {
            "$ref" : "#/components/schemas/BaseDoorStateOverride_Minimal"
          },
          "dpiComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "geofenceEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "geofenceRadius" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nfcSecureDowngradeEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "privacyModeSupportEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximityUnlockSettings" : {
            "$ref" : "#/components/schemas/ProximityUnlockSettingsType_Minimal"
          },
          "readerComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relayComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rexComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "subType" : {
            "type" : "string",
            "enum" : [ "RHOMBUS", "APERIO" ],
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentCompositeEnumType_Minimal"
          },
          "unlockTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "waveToUnlockSettings" : {
            "$ref" : "#/components/schemas/WaveToUnlockSettingsType_Minimal"
          }
        }
      },
      "Accesscontrol_BaseSendUserPresenceForCurrentUserWsResponse" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Accesscontrol_SendUserPresenceForCurrentUserSuccessWsResponse"
        }, {
          "$ref" : "#/components/schemas/Accesscontrol_SendUserPresenceForCurrentUserErrorWsResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_DeviceUnlockableAccessControlledDoorType" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_FindUnlockableAccessControlledDoorsByDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_FindUnlockableAccessControlledDoorsByDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_DeviceUnlockableAccessControlledDoorType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_ForceRefreshAccessControlUnitConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlUnitUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_ForceRefreshAccessControlUnitConfigWSResponse" : {
        "type" : "object"
      },
      "Accesscontrol_GetMinimalAccessControlledDoorsByLocationForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_GetMinimalAccessControlledDoorsByLocationForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType_Minimal"
            },
            "nullable" : true
          },
          "accessGrants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_UserAccessGrant"
            },
            "nullable" : true
          },
          "accessRevocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_UserAccessRevocation"
            },
            "nullable" : true
          },
          "schedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseSavedScheduleType_Minimal"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_SendUserPresenceForCurrentUserErrorWsResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_SendUserPresenceForCurrentUserSuccessWsResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_SendUserPresenceForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "cmdVersion" : {
            "type" : "string",
            "format" : "byte",
            "nullable" : true
          },
          "credentialValue" : {
            "type" : "string",
            "nullable" : true
          },
          "destinations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_SendUserPresenceForCurrentUserWSRequest_Destination"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_SendUserPresenceForCurrentUserWSRequest_Destination" : {
        "type" : "object",
        "properties" : {
          "accessControlUnitUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "beaconIdentifier" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "readerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rssi" : {
            "type" : "string",
            "format" : "byte",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorErrorWSResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "errorType" : {
              "type" : "string",
              "enum" : [ "FAILED_SENDING_ACU_UNLOCK_REQUEST", "DOOR_NOT_CONFIGURED_WITH_LOCK" ],
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorForCurrentUserErrorWSResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "errorType" : {
              "type" : "string",
              "enum" : [ "INACTIVE_CREDENTIAL", "FAILED_SENDING_ACU_UNLOCK_REQUEST", "GEOFENCE_RESTRICTED", "DOOR_NOT_CONFIGURED_WITH_LOCK" ],
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorForCurrentUserSuccessWSResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "cmdVersion" : {
            "type" : "string",
            "format" : "byte",
            "nullable" : true
          },
          "credentialValue" : {
            "type" : "string",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "requestTimeMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorSuccessWSResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_UserAccessGrant" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_UserAccessRevocation" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_CreateAccessGrantWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          }
        }
      },
      "Accesscontrol_accessgrant_CreateAccessGrantWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          }
        }
      },
      "Accesscontrol_accessgrant_DeleteLocationAccessGrantWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessGrantUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_DeleteLocationAccessGrantWSResponse" : {
        "type" : "object"
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorLabelId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSRequest" : {
        "type" : "object"
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_GetLocationAccessGrantWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessGrantUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_GetLocationAccessGrantWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          }
        }
      },
      "Accesscontrol_accessgrant_GetLocationsByAccessGrantForCurrentUserWSRequest" : {
        "type" : "object"
      },
      "Accesscontrol_accessgrant_GetLocationsByAccessGrantForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "locationLockdownStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationLockdownStateType"
            },
            "nullable" : true
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true
          },
          "lockdownPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseLockdownPlanType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_GetRhombusKeyLocationLockdownDetailsForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_GetRhombusKeyLocationLockdownDetailsForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "locationLockdownState" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_accessgrant_UpdateAccessGrantWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          }
        }
      },
      "Accesscontrol_accessgrant_UpdateAccessGrantWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "expiredACDLicensesDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unassignedACDLicensesDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_CreateAccessRevocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          }
        }
      },
      "Accesscontrol_accessrevocation_CreateAccessRevocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          }
        }
      },
      "Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessRevocationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSResponse" : {
        "type" : "object"
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorLabelId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSRequest" : {
        "type" : "object"
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_GetLocationAccessRevocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessRevocationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_GetLocationAccessRevocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          }
        }
      },
      "Accesscontrol_accessrevocation_UpdateAccessRevocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          }
        }
      },
      "Accesscontrol_accessrevocation_UpdateAccessRevocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "expiredACDLicensesDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unassignedACDLicensesDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_CreateBadgeTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_badgetemplate_CreateBadgeTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_badgetemplate_DeleteBadgeTemplateImageWSRequest" : {
        "type" : "object",
        "properties" : {
          "imageUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_DeleteBadgeTemplateImageWSResponse" : {
        "type" : "object",
        "properties" : {
          "image" : {
            "$ref" : "#/components/schemas/BadgeTemplateImage"
          }
        }
      },
      "Accesscontrol_badgetemplate_DeleteBadgeTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "templateUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_DeleteBadgeTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_badgetemplate_FindBadgeTemplateImagesWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_FindBadgeTemplateImagesWSResponse" : {
        "type" : "object",
        "properties" : {
          "images" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BadgeTemplateImage"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_FindBadgeTemplatesWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_FindBadgeTemplatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "templates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BadgeTemplate"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_GetBadgeTemplateImageWSRequest" : {
        "type" : "object",
        "properties" : {
          "imageUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_GetBadgeTemplateImageWSResponse" : {
        "type" : "object",
        "properties" : {
          "image" : {
            "$ref" : "#/components/schemas/BadgeTemplateImage"
          }
        }
      },
      "Accesscontrol_badgetemplate_GetBadgeTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "templateUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_GetBadgeTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_badgetemplate_UpdateBadgeTemplateImageWSRequest" : {
        "type" : "object",
        "properties" : {
          "selectiveUpdate" : {
            "$ref" : "#/components/schemas/BadgeTemplateImageSelectiveUpdate"
          }
        }
      },
      "Accesscontrol_badgetemplate_UpdateBadgeTemplateImageWSResponse" : {
        "type" : "object",
        "properties" : {
          "image" : {
            "$ref" : "#/components/schemas/BadgeTemplateImage"
          }
        }
      },
      "Accesscontrol_badgetemplate_UpdateBadgeTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "selectiveUpdate" : {
            "$ref" : "#/components/schemas/BadgeTemplateSelectiveUpdate"
          }
        }
      },
      "Accesscontrol_badgetemplate_UpdateBadgeTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_credentials_AssignAccessControlCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialHexValue" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_AssignAccessControlCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_BaseProvisionMobileAccessControlCredentialForCurrentUserWSResponse" : {
        "type" : "object",
        "discriminator" : {
          "mapping" : {
            "ERROR" : "#/components/schemas/Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserErrorWSResponse",
            "SUCCESS" : "#/components/schemas/Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserSuccessWSResponse"
          },
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserSuccessWSResponse"
        }, {
          "$ref" : "#/components/schemas/Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserErrorWSResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_BaseUnlockAccessControlledDoorForCurrentUserWSResponse" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorForCurrentUserSuccessWSResponse"
        }, {
          "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorForCurrentUserErrorWSResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_BaseUnlockAccessControlledDoorWSResponse" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorSuccessWSResponse"
        }, {
          "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorErrorWSResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_BulkProvisionPinCredentialsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when these credentials expire. Credentials will never expire if this value is left null.",
            "minimum" : 0,
            "nullable" : true
          },
          "notifyUsers" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the assigned users notifying them of their new PIN code.",
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "description" : "Length of PINs to be generated. Accepts length between 4 and 16. Default length is 5.",
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when these credentials become active. Credentials activate immediately if this value is left null.",
            "minimum" : 0,
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "description" : "Set of user uuids to provision PINs for.",
            "items" : {
              "type" : "string",
              "description" : "Set of user uuids to provision PINs for.",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        },
        "required" : [ "userUuids" ]
      },
      "Accesscontrol_credentials_BulkProvisionPinCredentialsWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedUsers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_BulkRotatePinCredentialsWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuids" : {
            "type" : "array",
            "description" : "Set of credential uuids designated for PIN rotation.",
            "items" : {
              "type" : "string",
              "description" : "Set of credential uuids designated for PIN rotation.",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when these credentials expire. If left null, copies the end date from the previous PIN.",
            "minimum" : 0,
            "nullable" : true
          },
          "notifyUsers" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the assigned users notifying them of their new PIN code.",
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "description" : "Length of PIN to be generated. Accepts length between 4 and 16. Default is 5.",
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when these credentials become active. If left null, copies the start date from the previous PIN.",
            "minimum" : 0,
            "nullable" : true
          }
        },
        "required" : [ "credentialUuids" ]
      },
      "Accesscontrol_credentials_BulkRotatePinCredentialsWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialType" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "hexValue" : {
            "type" : "string",
            "nullable" : true
          },
          "littleEndian" : {
            "type" : "boolean",
            "nullable" : true
          },
          "numValueBits" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateAppleWalletPassWSRequest" : {
        "type" : "object",
        "properties" : {
          "credUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateAppleWalletPassWSResponse" : {
        "type" : "object"
      },
      "Accesscontrol_credentials_CreatePinCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when this credential expires. Credential will never expire if this value is left null.",
            "minimum" : 0,
            "nullable" : true
          },
          "notifyUser" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the assigned user notifying them of their new PIN code.",
            "nullable" : true
          },
          "pinCode" : {
            "type" : "string",
            "description" : "PIN code (4 to 16 digits), will be generated automatically if one is not provided.",
            "maxLength" : 16,
            "minLength" : 4,
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "description" : "Length of PIN to be generated if a PIN code is not provided. Accepts length between 4 and 16. Default length is 5.",
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when this credential becomes active. Credential activates immediately if this value is left null.",
            "minimum" : 0,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "description" : "User uuid assigned this PIN.",
            "nullable" : true
          }
        },
        "required" : [ "userUuid" ]
      },
      "Accesscontrol_credentials_CreatePinCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialValue" : {
            "type" : "string",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateStandardCsnCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialValue" : {
            "type" : "string",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateStandardCsnCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "cardNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "companyId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "facilityCode" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "siteCode" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "wiegandFormat" : {
            "$ref" : "#/components/schemas/WiegandFormatEnumType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandD10202CredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "cardNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "facilityCode" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandD10202CredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandH10301CredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "cardNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "facilityCode" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandH10301CredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandH10304CredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "cardNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "facilityCode" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandH10304CredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_DeleteAccessControlCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_DeleteAccessControlCredentialWSResponse" : {
        "type" : "object"
      },
      "Accesscontrol_credentials_DeletePinCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "description" : "Uuid of PIN credential to delete.",
            "nullable" : true
          }
        },
        "required" : [ "credentialUuid" ]
      },
      "Accesscontrol_credentials_DeletePinCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialHexValue" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSResponse" : {
        "type" : "object"
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByUsersWSRequest" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByUsersWSResponse" : {
        "type" : "object",
        "properties" : {
          "userCredentialsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AccessControlCredentialType"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialHexValue" : {
            "type" : "string",
            "nullable" : true
          },
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialType" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "credentialValue" : {
            "type" : "string",
            "nullable" : true
          },
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryWSRequest" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindPinCredentialsByOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindPinCredentialsByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindRhombusSecureMobileCredentialsForCurrentUserWSRequest" : {
        "type" : "object"
      },
      "Accesscontrol_credentials_FindRhombusSecureMobileCredentialsForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetAvailablePinCodeWSRequest" : {
        "type" : "object",
        "properties" : {
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PIN to be generated.",
            "nullable" : true
          }
        },
        "required" : [ "pinLength" ]
      },
      "Accesscontrol_credentials_GetAvailablePinCodeWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pinCode" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetPinCredentialDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "description" : "Uuid of PIN credential to get full details for.",
            "nullable" : true
          }
        },
        "required" : [ "credentialUuid" ]
      },
      "Accesscontrol_credentials_GetPinCredentialDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_GetRhombusSecureMobileAppStateStatsForOrgWSRequest" : {
        "type" : "object"
      },
      "Accesscontrol_credentials_GetRhombusSecureMobileAppStateStatsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "appStateStats" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileAppStateStats"
          }
        }
      },
      "Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserErrorWSResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "errorType" : {
              "type" : "string",
              "enum" : [ "USER_HAS_MAX_ALLOWED_CREDENTIALS" ],
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserSuccessWSResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "credential" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "encodedPrivateKey" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "appName" : {
            "type" : "string",
            "nullable" : true
          },
          "appNotifications" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "appOS" : {
            "type" : "string",
            "nullable" : true
          },
          "appVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/MobileTokenOSEnum"
          },
          "deviceModel" : {
            "type" : "string",
            "nullable" : true
          },
          "installationId" : {
            "type" : "string",
            "nullable" : true
          },
          "tapToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "waveToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          }
        }
      },
      "Accesscontrol_credentials_RevokeAccessControlCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_RevokeAccessControlCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_RevokePinCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "description" : "Uuid of PIN credential to revoke.",
            "nullable" : true
          }
        },
        "required" : [ "credentialUuid" ]
      },
      "Accesscontrol_credentials_RevokePinCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_RevokeRhombusSecureMobileCredentialForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_RevokeRhombusSecureMobileCredentialForCurrentUserWSResponse" : {
        "type" : "object"
      },
      "Accesscontrol_credentials_RotatePinCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "description" : "Credential uuid of the PIN to rotate.",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when this credential expires. If left null, copies the end date from the previous PIN.",
            "minimum" : 0,
            "nullable" : true
          },
          "notifyUser" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the assigned user notifying them of their new PIN code.",
            "nullable" : true
          },
          "pinCode" : {
            "type" : "string",
            "description" : "PIN code (4 to 16 digits), will be generated automatically if one is not provided.",
            "maxLength" : 16,
            "minLength" : 4,
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PIN to be generated if a PIN code is not provided. Accepts length between 4 and 16. If left null, the generated PIN will have the same length as the previous PIN.",
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when this PIN activates. If left null, copies the start date from the previous PIN.",
            "minimum" : 0,
            "nullable" : true
          }
        },
        "required" : [ "credentialUuid" ]
      },
      "Accesscontrol_credentials_RotatePinCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_SuspendAccessControlCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_SuspendAccessControlCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UnsuspendAccessControlCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UnsuspendAccessControlCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdateAccessControlCredentialNoteWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "description" : "uuid of the credential to be updated.",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "description" : "Note to be associated with the credential. Max length is 250 characters.",
            "nullable" : true
          }
        },
        "required" : [ "credentialUuid", "note" ]
      },
      "Accesscontrol_credentials_UpdateAccessControlCredentialNoteWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdatePinCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdatePinCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusKeyMobileAppStateForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "appName" : {
            "type" : "string",
            "nullable" : true
          },
          "appNotifications" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "appOS" : {
            "type" : "string",
            "nullable" : true
          },
          "appVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/MobileTokenOSEnum"
          },
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceModel" : {
            "type" : "string",
            "nullable" : true
          },
          "tapToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "waveToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusKeyMobileAppStateForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "appState" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileAppState"
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdateStandardCsnCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateStandardCsnCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdateWiegandCredentialWSRequest" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateWiegandCredentialWSResponse" : {
        "type" : "object",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_doorexception_CreateDoorScheduleExceptionWSRequest" : {
        "type" : "object",
        "properties" : {
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          }
        }
      },
      "Accesscontrol_doorexception_CreateDoorScheduleExceptionWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          }
        }
      },
      "Accesscontrol_doorexception_DeleteDoorScheduleExceptionWSRequest" : {
        "type" : "object",
        "properties" : {
          "exceptionUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_DeleteDoorScheduleExceptionWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsForDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "dateRangeFilter" : {
            "$ref" : "#/components/schemas/DateRangeFilter"
          },
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsForDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exceptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorScheduleExceptionType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "dateRangeFilter" : {
            "$ref" : "#/components/schemas/DateRangeFilter"
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exceptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorScheduleExceptionType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsWSRequest" : {
        "type" : "object",
        "properties" : {
          "dateRangeFilter" : {
            "$ref" : "#/components/schemas/DateRangeFilter"
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exceptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorScheduleExceptionType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_GetDoorScheduleExceptionWSRequest" : {
        "type" : "object",
        "properties" : {
          "exceptionUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_GetDoorScheduleExceptionWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          }
        }
      },
      "Accesscontrol_doorexception_UpdateDoorScheduleExceptionWSRequest" : {
        "type" : "object",
        "properties" : {
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          }
        }
      },
      "Accesscontrol_doorexception_UpdateDoorScheduleExceptionWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          },
          "expiredACDLicensesDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unassignedACDLicensesDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorAuthFirstInGroupStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "settingsUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorAuthFirstInGroupStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorAuthFirstInStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorAuthFirstInStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "door" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorScheduleFirstInGroupStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "settingsUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorScheduleFirstInGroupStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorScheduleFirstInStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorScheduleFirstInStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "door" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Accesscontrol_firstin_CreateLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_CreateLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_DeleteLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "settingsUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_DeleteLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_FindLocationFirstInSettingsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_FindLocationFirstInSettingsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "settingsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationFirstInSettings"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_FindLocationFirstInSettingsByOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_FindLocationFirstInSettingsByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "settingsList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationFirstInSettings"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_GetLocationFirstInSettingsForDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_GetLocationFirstInSettingsForDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_GetLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "settingsUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_GetLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_RemoveDoorLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_RemoveDoorLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_UpdateLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "doorAuthRequirementEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorScheduleRequirementEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "resets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseFirstInReset"
            },
            "nullable" : true
          },
          "settingsUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_firstin_UpdateLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_lockdownplan_ActivateLockdownForLocationViaRhombusKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lockdownPlanUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "stateUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_ActivateLockdownForLocationViaRhombusKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LockdownActivationResultEnumType"
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_ActivateLockdownForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lockdownPlanUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "stateUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_ActivateLockdownForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LockdownActivationResultEnumType"
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_CreateLocationLockdownPlanWSRequest" : {
        "type" : "object",
        "properties" : {
          "lockdownPlan" : {
            "$ref" : "#/components/schemas/LocationLockdownPlanType"
          }
        }
      },
      "Accesscontrol_lockdownplan_CreateLocationLockdownPlanWSResponse" : {
        "type" : "object",
        "properties" : {
          "lockdownPlan" : {
            "$ref" : "#/components/schemas/LocationLockdownPlanType"
          }
        }
      },
      "Accesscontrol_lockdownplan_CreateLockdownRuleForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ExternalLockdownPlanRuleType"
          }
        }
      },
      "Accesscontrol_lockdownplan_CreateLockdownRuleForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeactivateLockdownForLocationViaRhombusKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "stateUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeactivateLockdownForLocationViaRhombusKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LockdownDeactivationResultEnumType"
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_DeactivateLockdownForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "stateUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeactivateLockdownForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LockdownDeactivationResultEnumType"
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLocationLockdownStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLocationLockdownStateWSResponse" : {
        "type" : "object"
      },
      "Accesscontrol_lockdownplan_DeleteLockdownPlanWSRequest" : {
        "type" : "object",
        "properties" : {
          "lockdownPlanUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLockdownPlanWSResponse" : {
        "type" : "object",
        "properties" : {
          "lockdownPlanUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLockdownRuleForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLockdownRuleForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DisableLockdownTestModeForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DisableLockdownTestModeForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_EnableLockdownTestModeForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_EnableLockdownTestModeForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_ExternalLockdownPlanRuleType" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RuleActionType"
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleFilters" : {
            "$ref" : "#/components/schemas/RuleFilterType"
          },
          "ruleName" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerActivity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLocationLockdownEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLocationLockdownEventsWSResponse" : {
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseLockdownStateEventType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLocationLockdownStatesWSRequest" : {
        "type" : "object",
        "properties" : {
          "stateFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationLockdownStateEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLocationLockdownStatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationLockdownStateType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLockdownPlansByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLockdownPlansByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "lockdownPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseLockdownPlanType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLockdownPlansWSRequest" : {
        "type" : "object"
      },
      "Accesscontrol_lockdownplan_FindLockdownPlansWSResponse" : {
        "type" : "object",
        "properties" : {
          "lockdownPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseLockdownPlanType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetLockdownPlanWSRequest" : {
        "type" : "object",
        "properties" : {
          "lockdownPlanUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetLockdownPlanWSResponse" : {
        "type" : "object",
        "properties" : {
          "lockdownPlan" : {
            "$ref" : "#/components/schemas/BaseLockdownPlanType"
          }
        }
      },
      "Accesscontrol_lockdownplan_GetLockdownRulesForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetLockdownRulesForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ExternalLockdownPlanRuleType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetOrCreateLocationLockdownStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetOrCreateLocationLockdownStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_UpdateLocationLockdownPlanWSRequest" : {
        "type" : "object",
        "properties" : {
          "activationPlan" : {
            "$ref" : "#/components/schemas/LockdownActivationPlanType"
          },
          "deactivationPlan" : {
            "$ref" : "#/components/schemas/LockdownDeactivationPlanType"
          },
          "defaultLockdownState" : {
            "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
          },
          "doorLockdownStateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "nullable" : true
          },
          "lockdownPlanUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "physicalAccess" : {
            "$ref" : "#/components/schemas/LockdownPhysicalAccessType"
          },
          "testPlan" : {
            "$ref" : "#/components/schemas/LockdownTestPlanType"
          }
        }
      },
      "Accesscontrol_lockdownplan_UpdateLocationLockdownPlanWSResponse" : {
        "type" : "object",
        "properties" : {
          "lockdownPlan" : {
            "$ref" : "#/components/schemas/LocationLockdownPlanType"
          }
        }
      },
      "Accesscontrol_qr_GenerateQRAccessCodeWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "validDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_qr_GenerateQRAccessCodeWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessTokenUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "qrCode" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_qr_GetQRAccessCodesWSRequest" : {
        "type" : "object"
      },
      "Accesscontrol_qr_GetQRAccessCodesWSResponse" : {
        "type" : "object",
        "properties" : {
          "qrAccessCodes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_qr_QRAccessCodeType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_qr_QRAccessCodeType" : {
        "type" : "object",
        "properties" : {
          "accesTokenUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ActivateLocationLockdownActionRecordType" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lockdownPlanUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "succeeded" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ActivateLocationLockdownActionType" : {
        "type" : "object",
        "properties" : {
          "locationLockdownPlanUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ActivityEnum" : {
        "type" : "string",
        "enum" : [ "SOUND_LOUD", "SOUND_GUN_SHOT", "TAMPER", "VISUAL_TAMPER", "MOTION_TAMPER", "MOTION", "MOTION_HUMAN", "MOTION_CAR", "MOTION_ANIMAL", "FACE", "FACE_IDENTIFIED", "FACE_UNIDENTIFIED", "FACE_BLACKLISTED", "FACE_ALERT", "POSE_ANOMALOUS", "POSE_FALL", "LICENSEPLATE", "LICENSEPLATE_IDENTIFIED", "LICENSEPLATE_UNIDENTIFIED", "LICENSEPLATE_ALERT", "LICENSEPLATE_BLACKLISTED", "LICENSEPLATE_TRUSTED", "PEOPLECOUNT_HIGH", "PEOPLECOUNT_HIGH_RESET", "PEOPLECOUNT_LOW", "PEOPLECOUNT_LOW_RESET", "HUMAN_ENTER", "HUMAN_EXIT", "CAR_ENTER", "CAR_EXIT", "TEMPERATURE_EXCEEDED_HIGH", "TEMPERATURE_EXCEEDED_LOW", "HUMIDITY_EXCEEDED_HIGH", "HUMIDITY_EXCEEDED_LOW", "PM25_EXCEEDED_HIGH", "TVOC_EXCEEDED_HIGH", "ETOH_EXCEEDED_HIGH", "IAQ_EXCEEDED_HIGH", "CO2_EXCEEDED_HIGH", "CO2_EXCEEDED_LOW", "PROBE_TEMPERATURE_EXCEEDED_HIGH", "PROBE_TEMPERATURE_EXCEEDED_LOW", "PROBE_DISCONNECTED", "PROBE_CONNECTED", "HEAT_INDEX_EXCEEDED_HIGH", "PRESSURE_EXCEEDED_HIGH", "PRESSURE_EXCEEDED_LOW", "PM10_EXCEEDED_HIGH", "PM40_EXCEEDED_HIGH", "PM100_EXCEEDED_HIGH", "VOC_IDX_EXCEEDED_HIGH", "NOX_IDX_EXCEEDED_HIGH", "FORMALDEHYDE_EXCEEDED_HIGH", "CARBON_MONOXIDE_EXCEEDED_HIGH", "AQI_EXCEEDED_HIGH", "DOOR_AJAR", "DOOR_OPENED", "DOOR_CLOSED", "BUTTON_SINGLE_PRESSED", "BUTTON_DOUBLE_PRESSED", "BUTTON_LONG_PRESSED", "TAG_ARRIVED", "TAG_DEPARTED", "TAG_MOVED", "TAG_POSITIONING_CHANGED", "TAG_BOUNDARY_INGRESS", "TAG_BOUNDARY_EGRESS", "TAG_PANIC", "BADGE_AUTHORIZED", "BADGE_UNAUTHORIZED", "BADGE_UNAUTHORIZED_V2", "BADGE_AJAR", "BADGE_MANUAL", "BADGE_FORCED_OPEN", "BADGE_LOCKDOWN", "BADGE_REQUEST_TO_EXIT", "BADGE_DURESS", "BADGE_SECURITY_BREACH", "BADGE_TAMPER", "BADGE_FACE_MISMATCH", "POS_ORDER", "GUN_DETECT_EVENT", "IOT_SOUND_AGGRESSION", "IOT_SOUND_HELP", "IOT_AIR_CO", "IOT_AIR_CO2", "IOT_AIR_MASKING", "IOT_AIR_THC", "IOT_AIR_VAPE", "IOT_AIR_VOC", "IOT_AIR_TEMP", "IOT_TAMPER", "IOT_GUNSHOT", "IOT_BUTTON_SINGLE_CLICK", "IOT_BUTTON_DOUBLE_CLICK", "IOT_BUTTON_HOLD", "IOT_PANIC_BUTTON_TRIGGERED", "AUDIO_SOUND_SIGNIFICANT", "AUDIO_SOUND_LOUD", "AUDIO_SOUND_ABUSIVE", "AUDIO_SOUND_GREETING", "AUDIO_SOUND_HELP", "AUDIO_SOUND_GUN", "AUDIO_SOUND_GLASS_BREAK", "AUDIO_SOUND_ALARM_SMOKE_FIRE", "AUDIO_SOUND_ALARM_CARBON_MONOXIDE", "AUDIO_SOUND_SIREN", "CLIMATE_VOC", "CLIMATE_VAPE", "CLIMATE_SMOKE", "CLIMATE_THC", "CLIMATE_CO2", "CLIMATE_ETOH", "CLIMATE_PM25", "CLIMATE_IAQ", "CLIMATE_LEAK", "SOUND_AGGRESSION", "SOUND_HELP", "AIR_CO", "AIR_CO2", "AIR_MASKING", "AIR_THC", "AIR_VAPE", "AIR_VOC", "MASK_MISSING", "HELMET_MISSING", "GLOVES_MISSING", "PIR_OCCUPIED", "PIR_MOVEMENT", "PIR_VACANT", "CUSTOM", "VISITOR_ARRIVED", "VISITOR_DEPARTED", "AC_DR_CONNECTED", "AC_DR_DISCONNECTED", "AC_DPI_DOOR_OPEN", "AC_DPI_DOOR_CLOSED", "AC_DPI_DOOR_AJAR", "AC_DPI_DOOR_FORCED_OPEN", "AC_DSR_UNLOCKED", "AC_DSR_LOCKED", "AC_DB_TRIGGERED", "AC_PANIC_BUTTON_TRIGGERED", "AC_REMOTE_UNLOCK", "AC_BADGE_AUTHORIZED", "AC_BADGE_UNAUTHORIZED", "AC_BADGE_FACE_MISMATCH", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_TAMPER_PROX", "AC_TAMPER_ACCEL", "AC_TAMPER_SWITCH", "AC_GR_ACTIVE", "AC_GR_INACTIVE", "AC_GI_ACTIVE", "AC_GI_INACTIVE", "AC_REX_ACTIVE", "AC_REX_INACTIVE", "AC_APERIO_DEVICE_DISCONNECTED", "AC_APERIO_DEVICE_CONNECTED", "AC_APERIO_DEVICE_REBOOT", "AC_APERIO_DEVICE_TAMPER", "AC_APERIO_LOW_BATTERY", "AC_APERIO_FLAT_BATTERY", "AC_APERIO_OK_BATTERY", "POWER_SWITCH_BATTERY", "POWER_SWITCH_PRIMARY", "UNKNOWN" ]
      },
      "AddOnLicense" : {
        "type" : "string",
        "enum" : [ "CLOUD_ARCHIVING", "PERCEPTION", "POSE", "BEHAVIOR", "VEHICLE", "PEOPLE", "PPE", "PEOPLE_ANALYTICS", "UNKNOWN" ]
      },
      "AddOnLicenseInvoiceType" : {
        "type" : "object",
        "properties" : {
          "cloudArchiveDays" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "license" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "perceptionTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PerceptionType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "price" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "AddOnLicenseStats" : {
        "type" : "object",
        "properties" : {
          "addOnLicenseType" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceLicenseFamilyStats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceLicenseFamilyStats"
            },
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "AdvancedRMAType" : {
        "type" : "object",
        "properties" : {
          "invoiceNeeded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "knownIssue" : {
            "type" : "boolean",
            "nullable" : true
          },
          "managerialApproved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "managerialApprovedRMAs" : {
            "$ref" : "#/components/schemas/rctpRMAType"
          },
          "rctpPartnerRequested" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rctpPartnerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rctpRMAs" : {
            "$ref" : "#/components/schemas/rctpRMAType"
          }
        }
      },
      "AirQualityIndexPollutantEnum" : {
        "type" : "string",
        "enum" : [ "OZONE", "PM2P5", "PM10P0", "CO", "NO2", "SO2", "UNKNOWN" ]
      },
      "AlertActionRecordType" : {
        "type" : "object",
        "properties" : {
          "policyAlertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/AlertActionStatusEnum"
          }
        }
      },
      "AlertActionStatusEnum" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "ERROR", "PAUSED", "IGNORED", "MUTED", "BACKOFF", "UNKNOWN" ]
      },
      "AlertMonitoringCatalogItem" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "monthlyVerificationLimit" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "AlertMonitoringEventRecordType" : {
        "type" : "object",
        "properties" : {
          "alertMonitoringEventType" : {
            "$ref" : "#/components/schemas/AlertMonitoringRulesEventTypeEnum"
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "threatCaseUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AlertMonitoringLicenseType" : {
        "type" : "object",
        "properties" : {
          "allowedDeviceCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "claimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "licenseType" : {
            "$ref" : "#/components/schemas/License"
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "monthlyVerificationLimit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "monthsReset" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "percentUsage" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "remainingAlarms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "remainingVerifications" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "warningStage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AlertMonitoringPIN" : {
        "type" : "object",
        "description" : "Alert monitoring PIN to update.",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in epoch ms when this PIN was created.",
            "nullable" : true,
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "PIN description.",
            "maxLength" : 255,
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when this PIN expires.",
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "Set of location uuids associated with this PIN.",
            "items" : {
              "type" : "string",
              "description" : "Set of location uuids associated with this PIN.",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "description" : "PIN name.",
            "maxLength" : 64,
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "description" : "Org uuid.",
            "nullable" : true
          },
          "rotatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in epoch ms when this PIN was last rotated.",
            "nullable" : true,
            "readOnly" : true
          },
          "rotationPeriodDays" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in days that determines when this PIN will be automatically rotated. If an expiration date is specified, that is when the first rotation will occur. Auto-rotation is disabled if this value is null.",
            "minimum" : 1,
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "description" : "Determines whether this PIN can be shared.",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when this PIN becomes active.",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in epoch ms when this PIN was last modified.",
            "nullable" : true,
            "readOnly" : true
          },
          "userUuids" : {
            "type" : "array",
            "description" : "Set of user uuids associated with this PIN.",
            "items" : {
              "type" : "string",
              "description" : "Set of user uuids associated with this PIN.",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "description" : "PIN uuid.",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "description" : "PIN value.",
            "maxLength" : 16,
            "minLength" : 4,
            "nullable" : true
          }
        },
        "required" : [ "locationUuids", "value" ]
      },
      "AlertMonitoringPinType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AlertMonitoringRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertMonitoringRulesEventType" : {
              "$ref" : "#/components/schemas/AlertMonitoringRulesEventTypeEnum"
            },
            "locationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "AlertMonitoringRulesEventTypeEnum" : {
        "type" : "string",
        "enum" : [ "ALARM_CREATED", "ALARM_CANCELED", "UNKNOWN" ]
      },
      "AlertMonitoringSubmissionDelayIntervalType" : {
        "type" : "object",
        "properties" : {
          "escalationDelayMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "promptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          }
        }
      },
      "AlertMonitoringThreatCaseType" : {
        "type" : "object",
        "properties" : {
          "associatedDeviceUuids" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "noonlightAlarmId" : {
            "type" : "string",
            "nullable" : true
          },
          "noonlightVerificationId" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "promptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "sharedClipGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sirenSettings" : {
            "$ref" : "#/components/schemas/AMSirenSettingsType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ThreatCaseStatus"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "submissionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "submitDelayExpireTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timelineEventList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ThreatCaseTimelineEventType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "verificationHistory" : {
            "$ref" : "#/components/schemas/VerificationHistory"
          }
        }
      },
      "Alertmonitoring_AMDeviceHistogramItem" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_AcceptAlertMonitoringTermsOfServiceForLocationRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_AcceptAlertMonitoringTermsOfServiceRequest" : {
        "type" : "object"
      },
      "Alertmonitoring_AcceptAlertMonitoringTermsOfServiceResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_AmModifiedBy" : {
        "type" : "object",
        "properties" : {
          "armed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "event" : {
            "type" : "string",
            "enum" : [ "UPDATED", "CREATED", "DELETED", "ARMED", "DISARMED", "NO_CHANGE" ],
            "nullable" : true
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CancelThreatCaseWSRequest" : {
        "type" : "object",
        "properties" : {
          "pin" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CancelThreatCaseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CountType" : {
        "type" : "object",
        "properties" : {
          "dayOfMonth" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deactivated" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "month" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "value" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreateCustomPinForNoonlightWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreateCustomPinForNoonlightWSResponse" : {
        "type" : "object",
        "properties" : {
          "alreadyExists" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreateNoonlightSettingsForLocationRequest" : {
        "type" : "object",
        "properties" : {
          "noonlightSettings" : {
            "$ref" : "#/components/schemas/NoonlightVersionedSettingsType"
          }
        }
      },
      "Alertmonitoring_CreateNoonlightSettingsForLocationResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreatePinForNoonlightWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreatePinForNoonlightWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CumulativeChartData" : {
        "type" : "object",
        "properties" : {
          "cumulativeMonthlyVerifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_CountType"
            },
            "nullable" : true
          },
          "dailyVerifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_CountType"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeleteNoonlightSettingsForLocationRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeleteNoonlightSettingsForLocationResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeletePinForNoonlightWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeletePinForNoonlightWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DisableLocationRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DisableLocationResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DismissThreatCaseWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DismissThreatCaseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_EnableLocationRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_EnableLocationResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_EscalateThreatCaseToAlarmWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_EscalateThreatCaseToAlarmWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GenerateMonthlyVerificationsForYearReportForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GenerateMonthlyVerificationsForYearReportForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "verificationsPerMonthPerLocation" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GenerateReportDataForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GenerateReportDataForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "cumulativeChartData" : {
            "$ref" : "#/components/schemas/Alertmonitoring_CumulativeChartData"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedBy" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_AmModifiedBy"
            },
            "nullable" : true
          },
          "threatCaseReportItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_ThreatCaseReportItem"
            },
            "nullable" : true
          },
          "verificationsByDevice" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_AMDeviceHistogramItem"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetAlertMonitoringTripwireGroupCountWSRequest" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetAlertMonitoringTripwireGroupCountWSResponse" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetNoonlightSettingsForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "includePreviousVersions" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetNoonlightSettingsForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "alertMonitoringSettings" : {
            "$ref" : "#/components/schemas/Alertmonitoring_NoonlightWSSettings"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "previousVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightVersionedSettingsType"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetNoonlightSettingsWSRequest" : {
        "type" : "object"
      },
      "Alertmonitoring_GetNoonlightSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "alertMonitoringSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Alertmonitoring_NoonlightWSSettings"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_LocationStatusWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_LocationStatusWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/MonitoringEnableStatus"
          }
        }
      },
      "Alertmonitoring_NoonlightWSSettings" : {
        "type" : "object",
        "properties" : {
          "acceptedTermsOfService" : {
            "type" : "boolean",
            "nullable" : true
          },
          "badgeAuthDisablesMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultDelay" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "defaultEmergencyContact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "defaultPromptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabledOnMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "emergencyContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmergencyResponseContactsScheduleType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledOnMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "entryInstructions" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "manualEscalationSettings" : {
            "$ref" : "#/components/schemas/NoonlightScheduleType"
          },
          "modifiedByEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedByIntegration" : {
            "type" : "boolean",
            "nullable" : true
          },
          "modifiedByMetadata" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedByUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "monitoringMode" : {
            "type" : "string",
            "enum" : [ "MANUAL", "SCHEDULED", "UNKNOWN" ],
            "nullable" : true
          },
          "oneTimePauses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "oneTimeSchedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringPinType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "schedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/MonitoringEnableStatus"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "talkdownEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_OrgStatusWSRequest" : {
        "type" : "object"
      },
      "Alertmonitoring_OrgStatusWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationStatuses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MonitoringEnableStatus"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_ResetAlertMonitoringTripwireGroupCountWSRequest" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_ResetAlertMonitoringTripwireGroupCountWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_ThreatCaseReportItem" : {
        "type" : "object",
        "properties" : {
          "alertNotFound" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "associatedDeviceUuids" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceNotFound" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "noonlightAlarmId" : {
            "type" : "string",
            "nullable" : true
          },
          "noonlightVerificationId" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "promptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "reason" : {
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClipGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sirenSettings" : {
            "$ref" : "#/components/schemas/AMSirenSettingsType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ThreatCaseStatus"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "submissionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "submitDelayExpireTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timelineEventList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ThreatCaseTimelineEventType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "verificationHistory" : {
            "$ref" : "#/components/schemas/VerificationHistory"
          }
        }
      },
      "Alertmonitoring_UpdateNoonlightSettingsForLocationRequest" : {
        "type" : "object",
        "properties" : {
          "noonlightSettings" : {
            "$ref" : "#/components/schemas/NoonlightVersionedSettingsType"
          }
        }
      },
      "Alertmonitoring_UpdateNoonlightSettingsForLocationResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_BasePinWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "$ref" : "#/components/schemas/AlertMonitoringPIN"
          }
        }
      },
      "Alertmonitoring_pin_BulkPinsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedUsers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "pins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringPIN"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_BulkProvisionPinsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when these PINs expire. PINs will never expire if this value is left null.",
            "minimum" : 0,
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "Set of location uuids these PINs are assigned to.",
            "items" : {
              "type" : "string",
              "description" : "Set of location uuids these PINs are assigned to.",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "notifyUsers" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the assigned users notifying them of their new PIN code.",
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PINs to be generated. Accepts length between 4 and 16.",
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "rotationPeriodDays" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in days that determines when this PIN will be automatically rotated. If an expiration date is specified, that is when the first rotation will occur. Auto-rotation is disabled if this value is null.",
            "minimum" : 1,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when these PINs become active. PINs activate immediately if this value is left null.",
            "minimum" : 0,
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "description" : "Set of user uuids to provision PINs for.",
            "items" : {
              "type" : "string",
              "description" : "Set of user uuids to provision PINs for.",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        },
        "required" : [ "locationUuids", "pinLength", "userUuids" ]
      },
      "Alertmonitoring_pin_BulkRotatePinsWSRequest" : {
        "type" : "object",
        "properties" : {
          "notifyUsers" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the assigned users notifying them of their new PIN code.",
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PINs to be generated. Accepts length between 4 and 16.",
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "pinUuids" : {
            "type" : "array",
            "description" : "Uuids of PINs to rotate in bulk.",
            "items" : {
              "type" : "string",
              "description" : "Uuids of PINs to rotate in bulk.",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        },
        "required" : [ "pinLength", "pinUuids" ]
      },
      "Alertmonitoring_pin_CreatePinWSRequest" : {
        "type" : "object",
        "properties" : {
          "notifyUser" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the user assigned this PIN notifying them of their new PIN code. If no user is assigned, notifications will not be sent.",
            "nullable" : true
          },
          "pin" : {
            "$ref" : "#/components/schemas/AlertMonitoringPIN"
          }
        },
        "required" : [ "pin" ]
      },
      "Alertmonitoring_pin_DeletePinWSRequest" : {
        "type" : "object",
        "properties" : {
          "pinUuid" : {
            "type" : "string",
            "description" : "Uuid of the alert monitoring PIN to delete.",
            "nullable" : true
          }
        },
        "required" : [ "pinUuid" ]
      },
      "Alertmonitoring_pin_FindPinsByLocationAndUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "description" : "Location uuid to filter search results with.",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "description" : "User uuid to filter search results with.",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_FindPinsByOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/PinQueryFilter"
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          }
        }
      },
      "Alertmonitoring_pin_FindPinsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "pins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringPIN"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_GetAvailableALMPinCodeWSRequest" : {
        "type" : "object",
        "properties" : {
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PIN to be generated.",
            "nullable" : true
          }
        },
        "required" : [ "pinLength" ]
      },
      "Alertmonitoring_pin_GetAvailableALMPinCodeWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pinCode" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_GetPinWSRequest" : {
        "type" : "object",
        "properties" : {
          "pinUuid" : {
            "type" : "string",
            "description" : "Uuid of the alert monitoring PIN to retrieve.",
            "nullable" : true
          }
        },
        "required" : [ "pinUuid" ]
      },
      "Alertmonitoring_pin_RotatePinWSRequest" : {
        "type" : "object",
        "properties" : {
          "notifyUser" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the user assigned this PIN notifying them of their new PIN code. If no user is assigned, notifications will not be sent.",
            "nullable" : true
          },
          "pinUuid" : {
            "type" : "string",
            "description" : "Uuid of the PIN to rotate.",
            "nullable" : true
          }
        },
        "required" : [ "pinUuid" ]
      },
      "Alertmonitoring_pin_UpdatePinWSRequest" : {
        "type" : "object",
        "properties" : {
          "notifyUser" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the user assigned this PIN notifying them of their current PIN code. If no user is assigned, notifications will not be sent.",
            "nullable" : true
          },
          "pin" : {
            "$ref" : "#/components/schemas/AlertMonitoringPIN"
          },
          "selectiveUpdate" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If set to true, only the non-null fields will be considered for this update.",
            "nullable" : true
          }
        },
        "required" : [ "pin" ]
      },
      "AlteredView" : {
        "type" : "object",
        "properties" : {
          "crop" : {
            "$ref" : "#/components/schemas/CroppedPermyriadRect"
          },
          "dewarp" : {
            "$ref" : "#/components/schemas/DewarpedView"
          }
        }
      },
      "AmtSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioDoorExtension" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorDeviceId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "aperioDoorDeviceId", "aperioDoorId", "aperioGatewayId" ]
      },
      "AperioDoorExtensionShadow" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatorState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "activatorStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "aperioDoorDeviceId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "aperioId" : {
              "type" : "string",
              "nullable" : true
            },
            "clockRetrievedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "connectionStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceClockSec" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceTimezone" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "doorMode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "doorModeUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            },
            "dtcsUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "gatewayComponentId" : {
              "type" : "string",
              "nullable" : true
            },
            "handleState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "handleStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "keyCylinderState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "keyCylinderStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "lastSeenMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "name" : {
              "type" : "string",
              "nullable" : true
            },
            "removed" : {
              "type" : "boolean",
              "nullable" : true
            },
            "stateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "tamperState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "tamperStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AperioDoorExtensionStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatorState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "activatorStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "aperioId" : {
              "type" : "string",
              "nullable" : true
            },
            "clockRetrievedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "connectionStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceClockSec" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceTimezone" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "doorMode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "doorModeUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            },
            "handleState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "handleStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "keyCylinderState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "keyCylinderStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "removed" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tamperState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "tamperStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioDoorPositionIndicator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "dpiType" : {
              "$ref" : "#/components/schemas/DoorPositionIndicatorEnumType"
            },
            "normalState" : {
              "$ref" : "#/components/schemas/NormalStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioDoorReader" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "disableCardReader" : {
              "type" : "boolean",
              "nullable" : true
            },
            "disableKeypad" : {
              "type" : "boolean",
              "nullable" : true
            },
            "disableWaveToUnlock" : {
              "type" : "boolean",
              "nullable" : true
            },
            "otherReaderUnlockAudioFeedbackEnabled" : {
              "type" : "boolean",
              "nullable" : true
            },
            "readerType" : {
              "$ref" : "#/components/schemas/DoorReaderEnumType"
            },
            "remoteUnlockAudioFeedbackEnabled" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioDoorRelay" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "deviceId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "relayType" : {
              "$ref" : "#/components/schemas/DoorRelayEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioDoorRequestToExit" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "intentOnly" : {
              "type" : "boolean",
              "nullable" : true
            },
            "intentOnlyEvents" : {
              "type" : "boolean",
              "nullable" : true
            },
            "normalState" : {
              "$ref" : "#/components/schemas/NormalStateEnumType"
            },
            "rexType" : {
              "$ref" : "#/components/schemas/RequestToExitEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioDtcEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDeviceId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioGateway" : {
        "type" : "object",
        "properties" : {
          "aperioGatewayId" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "hwVersion" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oemCode" : {
            "type" : "string",
            "nullable" : true
          },
          "oemGeneratedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioGatewayConnectionStateChangeEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "stateChangedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioGatewayShadow" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "connectionStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceClockSec" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceTimezone" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            },
            "firmwareVersion" : {
              "type" : "string",
              "nullable" : true
            },
            "hwVersion" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "ipAddress" : {
              "type" : "string",
              "nullable" : true
            },
            "lastSeenMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "oemCode" : {
              "type" : "string",
              "nullable" : true
            },
            "oemCodeFetchedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "protocolVersionMajor" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "protocolVersionMinor" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "protocolVersionPatch" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "rawTamperState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "stateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AperioGatewayStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "connectionStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceClockSec" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceTimezone" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            },
            "firmwareVersion" : {
              "type" : "string",
              "nullable" : true
            },
            "hwVersion" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "ipAddress" : {
              "type" : "string",
              "nullable" : true
            },
            "lastSeenMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "oemCode" : {
              "type" : "string",
              "nullable" : true
            },
            "oemCodeFetchedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "protocolVersionMajor" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "protocolVersionMinor" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "protocolVersionPatch" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "rawTamperState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioTamperStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "rawState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "stateChangedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ApiClientTypeEnum" : {
        "type" : "string",
        "enum" : [ "PARTNER_DEVELOPER", "DEVELOPER", "INTERNAL_SALESFORCE", "TVOS", "KIOSK", "KEYPAD", "SQUARE", "KISI", "OPENPATH", "TOAST", "BRIVO", "EXECUTABLE", "HALO", "SALTO", "BUTTERFLYMX", "GENEA", "PRODATAKEY", "ENVOY", "AMT", "PIMLOC", "PLACEOS", "OMNIALERT", "FLIC", "NINEONEONECELLULAR", "UNKNOWN" ]
      },
      "ApiTokenApplicationType" : {
        "type" : "object",
        "properties" : {
          "authType" : {
            "$ref" : "#/components/schemas/ApiTokenAuthTypeEnum"
          },
          "authenticationTokenHash" : {
            "type" : "string",
            "nullable" : true
          },
          "clientDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/ApiClientTypeEnum"
          },
          "csr" : {
            "type" : "string",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ApiTokenAuthTypeEnum" : {
        "type" : "string",
        "enum" : [ "API_TOKEN", "CERT" ]
      },
      "ApiTokenEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "tokenName" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "ApiTokenLockdownEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "tokenName" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "ApiTokenType" : {
        "type" : "object",
        "properties" : {
          "allowedRequetsPerSecond" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "authType" : {
            "$ref" : "#/components/schemas/ApiTokenAuthTypeEnum"
          },
          "authenticationTokenHash" : {
            "type" : "string",
            "nullable" : true
          },
          "cert" : {
            "type" : "string",
            "nullable" : true
          },
          "certFingerprint" : {
            "type" : "string",
            "nullable" : true
          },
          "clientDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/ApiClientTypeEnum"
          },
          "csr" : {
            "type" : "string",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "hashed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AspectRatio" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioExpressionDetectionConfig" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "confidence_min" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "expression" : {
            "type" : "string",
            "nullable" : true
          },
          "loudness_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioGatewayStatusEnum" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "ERROR", "BACKOFF", "IGNORED", "SUBMITTED", "UNKNOWN" ]
      },
      "AudioLoudActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "audioLufsThreshold" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "AudioParamConfig" : {
        "type" : "object",
        "properties" : {
          "expressions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioExpressionDetectionConfig"
            },
            "nullable" : true
          },
          "significant_loudness_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioPlaybackActionRecordType" : {
        "type" : "object",
        "properties" : {
          "audioClipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "audioGatewayStatuses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AudioGatewayStatusEnum"
            },
            "nullable" : true
          }
        }
      },
      "AudioPlaybackActionType" : {
        "type" : "object",
        "properties" : {
          "audioClipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "audioGateways" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "loopDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "playCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioPolicyType" : {
        "type" : "object",
        "properties" : {
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AudioScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "AudioTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "threshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioUploadMetadataType" : {
        "type" : "object",
        "properties" : {
          "audioPlaintext" : {
            "type" : "string",
            "nullable" : true
          },
          "audioSSML" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "durationMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "s3ObjectKey" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "voiceId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_AudioGatewayOfflineLanStreamingInfo" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Audiogateway_DeleteAudioGatewayWSRequest" : {
        "type" : "object",
        "properties" : {
          "gatewayUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Audiogateway_DeleteAudioGatewayWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioGatewayConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioGatewayUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioGatewayConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/IAudioUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioGatewayOfflineLanStreamingInfoWSRequest" : {
        "type" : "object"
      },
      "Audiogateway_GetAudioGatewayOfflineLanStreamingInfoWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "info" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Audiogateway_AudioGatewayOfflineLanStreamingInfo"
            },
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetFullAudioGatewayStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "force" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetFullAudioGatewayStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "fullAudioGatewayState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Audiogateway_GetMediaUrisWSRequest" : {
        "type" : "object",
        "properties" : {
          "gatewayUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetMediaUrisWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lanCheckUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveMpdUris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveOpusUris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodMpdUrisTemplates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveOpusUri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetMinimalAudioGatewayStatesWSRequest" : {
        "type" : "object"
      },
      "Audiogateway_GetMinimalAudioGatewayStatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "audioGatewayStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MinimalAudioGatewayStateType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_RebootAudioGatewayWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioGatewayUuid" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "audioGatewayUuid" ]
      },
      "Audiogateway_UpdateAudioGatewayConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioExternalMicBoost" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust boost for external mic.  Integer between 0 and 3.",
            "nullable" : true
          },
          "audioExternalMicVolume" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust volume for external mic.  Integer between 0 and 63.",
            "nullable" : true
          },
          "audioExternalSpeakerVolume" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust volume for external speaker.  Integer between 0 and 127.",
            "nullable" : true
          },
          "audioInternalMicAecEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audioInternalMicBoost" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust boost for internal mic.  Integer between 0 and 3.",
            "nullable" : true
          },
          "audioInternalMicVolume" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust volume for internal mic.  Integer between 0 and 63.",
            "nullable" : true
          },
          "audioInternalSpeakerVolume" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust volume for internal speaker.  Integer between 0 and 127.",
            "nullable" : true
          },
          "audioRecord" : {
            "type" : "boolean",
            "description" : "Enable/disable audio recording.  Cannot set to true unless organization settings allow it",
            "nullable" : true
          },
          "audioUseExternalMic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audioUseExternalSpeaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceMicEnabled" : {
            "type" : "boolean",
            "description" : "Enable/disable device mic.  Cannot set to true unless organization settings allow it",
            "nullable" : true
          },
          "deviceSpeakerEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_UpdateAudioGatewayConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_UpdateAudioGatewayDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_UpdateAudioGatewayDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_CancelLoopingAudioPlaybackWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Audioplayback_CancelLoopingAudioPlaybackWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "successMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Audioplayback_DeleteAudioUploadMetadataWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioUploadUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_DeleteAudioUploadMetadataWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_GetAudioUploadMetadataForOrgWSRequest" : {
        "type" : "object"
      },
      "Audioplayback_GetAudioUploadMetadataForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "audioUploadMetadata" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioUploadMetadataType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_PlayAudioUploadWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioGatewayUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "audioUploadUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "loopDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "playCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Audioplayback_PlayAudioUploadWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Audioplayback_UpdateAudioUploadMetadataWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioUploadUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "newDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "newDisplayName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_UpdateAudioUploadMetadataWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_UploadAudioPcmWSResponse" : {
        "type" : "object",
        "properties" : {
          "encodingFailure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_UploadAudioTextWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioPlaintext" : {
            "type" : "string",
            "nullable" : true
          },
          "audioSSML" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "voiceId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_UploadAudioTextWSResponse" : {
        "type" : "object",
        "properties" : {
          "encodingFailure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invalidSSML" : {
            "type" : "boolean",
            "nullable" : true
          },
          "synthesisFailure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AuditRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "auditEvent" : {
              "$ref" : "#/components/schemas/SimpleAuditEventType"
            },
            "userUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "AuthDecisionSourceEnum" : {
        "type" : "string",
        "enum" : [ "ACCESS_GRANT", "ACCESS_REVOCATION", "LOCKDOWN", "FIRST_IN_SETTINGS", "CONFIG", "ADMIN", "PRIVACY", "ERROR", "UNKNOWN" ]
      },
      "AuxiliaryEnumType" : {
        "type" : "string",
        "enum" : [ "integrated_generic_input", "integrated_generic_relay" ]
      },
      "AuxiliaryInputPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_INPUT", "GPIO_INPUT_SUPERVISED" ]
      },
      "AuxiliaryInputPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/AuxiliaryInputPhysicalPortEnumType"
          },
          "supervisionConfiguration" : {
            "$ref" : "#/components/schemas/PortSupervisionConfigurationType"
          }
        }
      },
      "AuxiliaryRelayPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_OUTPUT" ]
      },
      "AuxiliaryRelayPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/AuxiliaryRelayPhysicalPortEnumType"
          }
        }
      },
      "AvigilonAltaType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorToCameraMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "email" : {
              "type" : "string",
              "nullable" : true
            },
            "eventToWebhookIdMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "nullable" : true
            },
            "eventToWebhookMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/WebhookMapEntry"
              },
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "password" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookId" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AwsSettings" : {
        "type" : "object",
        "properties" : {
          "accessKey" : {
            "type" : "string",
            "nullable" : true
          },
          "bucketName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "secretKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BackblazeSettings" : {
        "type" : "object",
        "properties" : {
          "applicationKey" : {
            "type" : "string",
            "nullable" : true
          },
          "applicationKeyId" : {
            "type" : "string",
            "nullable" : true
          },
          "bucketName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "BadgeIntegrationDefaultOptions" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultOptionsEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "BadgeIntegrationDoorInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorName" : {
            "type" : "string",
            "nullable" : true
          },
          "leadingSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "remoteUnlock" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "BadgeIntegrationRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "BadgeIntegrationSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "placeId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "placeName" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "BadgeTemplate" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseBadgeTemplateElement"
            },
            "nullable" : true
          },
          "front" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "portrait" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BadgeTemplateElementEnum" : {
        "type" : "string",
        "enum" : [ "CUSTOM_TEXT", "USER_METADATA", "USER_CUSTOM_METADATA", "CUSTOM_IMAGE", "USER_PROFILE_PHOTO" ]
      },
      "BadgeTemplateImage" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originalFileName" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BadgeTemplateImageSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originalFileName" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BadgeTemplateSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseBadgeTemplateElement"
            },
            "nullable" : true
          },
          "front" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "portrait" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Badgereader_DeleteBadgeReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "badgeReaderUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "badgeReaderUuid", "mummify" ]
      },
      "Badgereader_DeleteBadgeReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Badgereader_GetBadgeReaderConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalReadableFacetedUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Badgereader_GetBadgeReaderFullStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "fullState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Badgereader_GetBadgeReaderMinimalStateListWSResponse" : {
        "type" : "object",
        "properties" : {
          "minimalStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MinimalDeviceStateType"
            },
            "nullable" : true
          }
        }
      },
      "Badgereader_RebootBadgeReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "badgeReaderUuid" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "badgeReaderUuid" ]
      },
      "Badgereader_UpdateBadgeReaderConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalUpdateableFacetedUserConfig"
          }
        }
      },
      "Badgereader_UpdateBadgeReaderDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BaseApiResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BaseBadgeTemplateElement" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/CustomTextElement"
        }, {
          "$ref" : "#/components/schemas/UserMetadataTextElement"
        }, {
          "$ref" : "#/components/schemas/UserCustomMetadataTextElement"
        }, {
          "$ref" : "#/components/schemas/CustomImageElement"
        }, {
          "$ref" : "#/components/schemas/UserProfilePhotoElement"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "BaseCatalogItem" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "productType"
        },
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "BaseClaimKey" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "claimEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key ended successfully.",
            "nullable" : true
          },
          "claimStartDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key started.",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "expirationEmailState" : {
            "type" : "string",
            "enum" : [ "NINETY_DAY_EMAIL_SUCCEEDED", "NINETY_DAY_EMAIL_FAILED", "SIXTY_DAY_EMAIL_SUCCEEDED", "SIXTY_DAY_EMAIL_FAILED", "FOURTY_FIVE_DAY_EMAIL_SUCCEEDED", "FOURTY_FIVE_DAY_EMAIL_FAILED", "THIRTY_DAY_EMAIL_SUCCEEDED", "THIRTY_DAY_EMAIL_FAILED", "TWENTY_ONE_DAY_EMAIL_SUCCEEDED", "TWENTY_ONE_DAY_EMAIL_FAILED", "FOURTEEN_DAY_EMAIL_SUCCEEDED", "FOURTEEN_DAY_EMAIL_FAILED", "TEN_DAY_EMAIL_SUCCEEDED", "TEN_DAY_EMAIL_FAILED", "FIVE_DAY_EMAIL_SUCCEEDED", "FIVE_DAY_EMAIL_FAILED", "FOUR_DAY_EMAIL_SUCCEEDED", "FOUR_DAY_EMAIL_FAILED", "THREE_DAY_EMAIL_SUCCEEDED", "THREE_DAY_EMAIL_FAILED", "TWO_DAY_EMAIL_SUCCEEDED", "TWO_DAY_EMAIL_FAILED", "ONE_DAY_EMAIL_SUCCEEDED", "ONE_DAY_EMAIL_FAILED", "ZERO_DAY_EMAIL_SUCCEEDED", "ZERO_DAY_EMAIL_FAILED", "GRACE_PERIOD_EMAILS_IN_PROGRESS", "GRACE_PERIOD_EMAILS_COMPLETED", "UNKNOWN" ],
            "nullable" : true
          },
          "gracePeriodEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "maskedClaimCode" : {
            "type" : "string",
            "description" : "Masked claim code for redeemed claim keys. This field can be used for reference purposes.",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "renewedByClaimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "requestId" : {
            "type" : "string",
            "description" : "Externally supplied request id to prevent creation of unnecessary claim keys due to reprocessing or bugs. Unnecessary claim keys are claim keys that are not tied to anything in the external system.  This property is unique for all claim keys.",
            "nullable" : true
          },
          "returnHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClaimKeyReturnEvent"
            },
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "NEW", "RENEWAL" ],
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BaseComponentType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RhombusOsdpDoorReaderType"
        }, {
          "$ref" : "#/components/schemas/OsdpDoorReaderType"
        }, {
          "$ref" : "#/components/schemas/WiegandDoorReaderType"
        }, {
          "$ref" : "#/components/schemas/IntegratedDoorPositionIndicatorType"
        }, {
          "$ref" : "#/components/schemas/IntegratedRequestToExitType"
        }, {
          "$ref" : "#/components/schemas/IntegratedDoorRelayType"
        }, {
          "$ref" : "#/components/schemas/IntegratedGenericRelayType"
        }, {
          "$ref" : "#/components/schemas/IntegratedGenericInputType"
        }, {
          "$ref" : "#/components/schemas/IntegratedGenericButtonType"
        }, {
          "$ref" : "#/components/schemas/AperioDoorReader"
        }, {
          "$ref" : "#/components/schemas/AperioGateway"
        }, {
          "$ref" : "#/components/schemas/AperioDoorExtension"
        }, {
          "$ref" : "#/components/schemas/AperioDoorRelay"
        }, {
          "$ref" : "#/components/schemas/AperioDoorPositionIndicator"
        } ],
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BaseDoorStateOverride" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ManualDoorStateChangeEnum"
          }
        }
      },
      "BaseDoorStateOverride_Minimal" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator_Minimal"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ManualDoorStateChangeEnum_Minimal"
          }
        }
      },
      "BaseEventOriginator" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SupportAuthorityEventOriginator"
        }, {
          "$ref" : "#/components/schemas/ApiTokenEventOriginator"
        }, {
          "$ref" : "#/components/schemas/UserEventOriginator"
        }, {
          "$ref" : "#/components/schemas/RuleEventOriginator"
        }, {
          "$ref" : "#/components/schemas/ComponentCompositeEventOriginator"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "BaseEventOriginator_Minimal" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SupportAuthorityEventOriginator"
        }, {
          "$ref" : "#/components/schemas/ApiTokenEventOriginator"
        }, {
          "$ref" : "#/components/schemas/UserEventOriginator"
        }, {
          "$ref" : "#/components/schemas/RuleEventOriginator"
        }, {
          "$ref" : "#/components/schemas/ComponentCompositeEventOriginator"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum_Minimal"
          }
        }
      },
      "BaseFirstInReset" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DailyFirstInReset"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/FirstInResetEnum"
          }
        }
      },
      "BaseLicenseType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "productType"
        },
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BaseLocationLockdownEventOriginator" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "BaseLockdownPlanType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LocationLockdownPlanType"
        } ],
        "properties" : {
          "activationPlan" : {
            "$ref" : "#/components/schemas/LockdownActivationPlanType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deactivationPlan" : {
            "$ref" : "#/components/schemas/LockdownDeactivationPlanType"
          },
          "defaultLockdownState" : {
            "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
          },
          "doorLockdownStateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "physicalAccess" : {
            "$ref" : "#/components/schemas/LockdownPhysicalAccessType"
          },
          "scopeUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "testPlan" : {
            "$ref" : "#/components/schemas/LockdownTestPlanType"
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownPlanScopeEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BaseLockdownStateEventType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followingTestPlan" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseLocationLockdownEventOriginator"
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownStateEventEnumType"
          }
        }
      },
      "BasePolicyAlertType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PolicyAlertV2Type"
        }, {
          "$ref" : "#/components/schemas/AccessControlledDoorPolicyAlertType"
        } ],
        "properties" : {
          "alertMonitoringThreatCaseUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "alertMonitoringVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clipLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "clipLocationMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "delayedProcessing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "finalized" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "saved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "textDescription" : {
            "type" : "string",
            "description" : "Natural language description of the alert",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "POLICY_ALERT_V2", "ACCESS_CONTROLLED_DOOR_POLICY_ALERT" ],
            "nullable" : true,
            "readOnly" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BaseRuleTriggerType" : {
        "type" : "object",
        "discriminator" : {
          "mapping" : {
            "ALERT_MONITORING_EVENT" : "#/components/schemas/AlertMonitoringRuleTriggerType",
            "AUDIT_EVENT" : "#/components/schemas/AuditRuleTriggerType",
            "BADGE_INTEGRATION_EVENT" : "#/components/schemas/BadgeIntegrationRuleTriggerType",
            "BUTTON_INTEGRATION_EVENT" : "#/components/schemas/ButtonIntegrationRuleTriggerType",
            "DEVICE_ACTIVITY_EVENT" : "#/components/schemas/DeviceActivityRuleTriggerType",
            "DIAGNOSTIC_EVENT" : "#/components/schemas/DiagnosticRuleTriggerType",
            "LOCATION_LOCKDOWN_ACTIVATED_EVENT" : "#/components/schemas/LocationLockdownActivatedRuleTriggerType",
            "LOCATION_LOCKDOWN_DEACTIVATED_EVENT" : "#/components/schemas/LocationLockdownDeactivatedRuleTriggerType",
            "RECURRING_EVENT" : "#/components/schemas/RecurringRuleTriggerType",
            "SCHEDULED_EVENT" : "#/components/schemas/ScheduledRuleTriggerType",
            "VISION_LLM_EVENT" : "#/components/schemas/VisionLLMRuleTriggerType"
          },
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DeviceActivityRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/AuditRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/AlertMonitoringRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/DiagnosticRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/BadgeIntegrationRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/ScheduledRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/VisionLLMRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/RecurringRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/LocationLockdownActivatedRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/LocationLockdownDeactivatedRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/ButtonIntegrationRuleTriggerType"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        },
        "title" : "RuleTriggerType"
      },
      "BaseSavedScheduleType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "strategy"
        },
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BaseSavedScheduleType_Minimal" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "strategy"
        },
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BatchRegistrationTokenUsageResult" : {
        "type" : "object",
        "properties" : {
          "di" : {
            "type" : "string",
            "nullable" : true
          },
          "hi" : {
            "type" : "string",
            "nullable" : true
          },
          "rs" : {
            "type" : "string",
            "nullable" : true
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Ble_BleDeviceMap" : {
        "type" : "object",
        "properties" : {
          "keyToSecureBeacon" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Ble_BleRegisteredDeviceWSType" : {
        "type" : "object",
        "properties" : {
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "secret" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "updateToFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Ble_BleUnregisteredHardwareWSType" : {
        "type" : "object",
        "properties" : {
          "mac" : {
            "type" : "string",
            "nullable" : true
          },
          "secret" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Ble_GetBaseStationsWSRequest" : {
        "type" : "object"
      },
      "Ble_GetBaseStationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "baseStations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Ble_GetSecureSecretForRegisteredWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareVariationToFirmwareDownloadUrl" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "keyToRegisteredDevice" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Ble_BleRegisteredDeviceWSType"
            },
            "nullable" : true
          }
        }
      },
      "Ble_GetSecureSecretForUnregisteredWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "keyToUnregisteredDevice" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Ble_BleUnregisteredHardwareWSType"
            },
            "nullable" : true
          }
        }
      },
      "Ble_GetSensorHardwareFirmwareUpdateDetailsRequest" : {
        "type" : "object"
      },
      "Ble_GetSensorHardwareFirmwareUpdateDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "hardwareVariationToFirmwareDownloadUrl" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Ble_RegisterSensorWSRequest" : {
        "type" : "object",
        "properties" : {
          "bleData" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNum" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Ble_RegisterSensorWSResponse" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Ble_UnregisterSensorWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Ble_UnregisterSensorWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "BoardPhysicalPortConfigType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PhysicalPortType"
            },
            "nullable" : true
          }
        }
      },
      "BodyPart" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object",
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Providers"
          }
        }
      },
      "BoundingBoxType" : {
        "type" : "object",
        "properties" : {
          "bottom" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "left" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "right" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "top" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "BoxSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "enterpriseId" : {
            "type" : "string",
            "nullable" : true
          },
          "folderId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BrivoSettings" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorToCameraMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "writeOnly" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "BrivoType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "accessToken" : {
              "type" : "string",
              "nullable" : true
            },
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiKey" : {
              "type" : "string",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "clientId" : {
              "type" : "string",
              "nullable" : true
            },
            "clientSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "password" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "username" : {
              "type" : "string",
              "nullable" : true
            },
            "version" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "webhookId" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BurstyRateLimit" : {
        "type" : "object",
        "properties" : {
          "base_interval_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "burst_token_generation_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "burst_token_initial_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "burst_token_max_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ButterflyMXSettings" : {
        "type" : "object",
        "properties" : {
          "buildingWebhookIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "A HashMap of <ButterflyMx Building Id, Webhook Id>. ",
              "nullable" : true
            },
            "description" : "A HashMap of <ButterflyMx Building Id, Webhook Id>. ",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "panelInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ButterflymxPanelInfoType"
            },
            "description" : "A HashMap of <Panel Id, ButterflymxPanelInfoType>.",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ButterflyMXType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "buildingWebhookIdMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "description" : "A HashMap of <ButterflyMx Building Id, Webhook Id>. ",
                "nullable" : true
              },
              "description" : "A HashMap of <ButterflyMx Building Id, Webhook Id>. ",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "panelInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ButterflymxPanelInfoType"
              },
              "description" : "A HashMap of <Panel Id, ButterflymxPanelInfoType>.",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ButterflymxBuilding" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "panels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorType"
            },
            "nullable" : true
          }
        }
      },
      "ButterflymxPanelInfoType" : {
        "type" : "object",
        "description" : "A HashMap of <Panel Id, ButterflymxPanelInfoType>.",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "description" : "The list of Rhombus Camera RUUIDs.",
            "items" : {
              "type" : "string",
              "description" : "The list of Rhombus Camera RUUIDs.",
              "nullable" : true
            },
            "nullable" : true
          },
          "buildingId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The ButterflyMx Building Id.",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "description" : "Rhombus location of the Butterflymx panel",
            "nullable" : true
          },
          "panelName" : {
            "type" : "string",
            "description" : "The ButterflyMx Panel Name.",
            "nullable" : true
          }
        }
      },
      "ButtonEnumType" : {
        "type" : "string",
        "enum" : [ "integrated_generic_button", "integrated_doorbell_button" ]
      },
      "ButtonEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "buttonPress" : {
              "$ref" : "#/components/schemas/ButtonPressEnum"
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ButtonIntegrationRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "thirdPartyBatteryLevel" : {
              "type" : "string",
              "nullable" : true
            },
            "thirdPartyButtonAction" : {
              "type" : "string",
              "nullable" : true
            },
            "thirdPartyButtonName" : {
              "type" : "string",
              "nullable" : true
            },
            "thirdPartyButtonSerialNumber" : {
              "type" : "string",
              "nullable" : true
            },
            "thirdPartyButtonUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "timestamp" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "ButtonModeEnum" : {
        "type" : "string",
        "enum" : [ "PANIC", "PROGRAMMABLE", "DOORBELL", "NONE" ]
      },
      "ButtonPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_INPUT", "BUTTON_INPUT" ]
      },
      "ButtonPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/ButtonPhysicalPortEnumType"
          }
        }
      },
      "ButtonPressEnum" : {
        "type" : "string",
        "enum" : [ "NONE", "SINGLE", "DOUBLE", "LONG", "INITIAL_PRESS", "LONG_RELEASE" ]
      },
      "ButtonSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Button settings",
        "properties" : {
          "button_emergency_onsite_contact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "button_test_mode_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Button_ButtonHealthDetailsEnum" : {
        "type" : "string",
        "enum" : [ "FIRMWARE_BEHIND", "NO_HEARTBEAT", "NONE" ]
      },
      "Button_ButtonHealthEnum" : {
        "type" : "string",
        "enum" : [ "GREEN", "RED" ]
      },
      "Button_CreateRuleForButtonWSRequest" : {
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/Button_ExternalButtonRuleType"
          }
        }
      },
      "Button_CreateRuleForButtonWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Button_DeleteRuleForButtonWSRequest" : {
        "type" : "object",
        "properties" : {
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Button_DeleteRuleForButtonWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Button_ExternalButtonRuleType" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RuleActionType"
          },
          "ruleFilters" : {
            "$ref" : "#/components/schemas/RuleFilterType"
          },
          "ruleName" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerPress" : {
            "$ref" : "#/components/schemas/ButtonPressEnum"
          }
        }
      },
      "Button_GetButtonPressEventsForSensorWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Button_GetButtonPressEventsForSensorWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ButtonEventType"
            },
            "nullable" : true
          }
        }
      },
      "Button_GetButtonRulesForOrgWSRequest" : {
        "type" : "object"
      },
      "Button_GetButtonRulesForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "buttonUuidToRulesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Button_ExternalButtonRuleType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Button_GetMinimalButtonStatesWSRequest" : {
        "type" : "object"
      },
      "Button_GetMinimalButtonStatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "states" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Button_MinimalButtonStateType"
            },
            "nullable" : true
          }
        }
      },
      "Button_GetRulesForButtonWSRequest" : {
        "type" : "object",
        "properties" : {
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Button_GetRulesForButtonWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Button_ExternalButtonRuleType"
            },
            "nullable" : true
          }
        }
      },
      "Button_MinimalButtonStateType" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "buttonEmergencyOnsiteContact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "buttonMode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "closestBaseStation" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "health" : {
            "$ref" : "#/components/schemas/Button_ButtonHealthEnum"
          },
          "healthDetails" : {
            "$ref" : "#/components/schemas/Button_ButtonHealthDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "testModeEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Button_UpdateButtonConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableButtonUserConfig"
          }
        }
      },
      "Button_UpdateButtonDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "buttonMode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Buyer" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "address3" : {
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "contactName" : {
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "COSensorType" : {
        "type" : "object",
        "properties" : {
          "adcRaw" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "adcVoltage" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "coConcentration" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "CameraAiDewarpConfigType" : {
        "type" : "object",
        "properties" : {
          "dewarp_tile_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "dewarp_tile_width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orientation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CameraConfiguration" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "checkEquationsOverride" : {
            "$ref" : "#/components/schemas/CheckEquations"
          },
          "promptExtension" : {
            "type" : "string",
            "nullable" : true
          },
          "promptOverride" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionPolygonType"
          }
        }
      },
      "CameraCrossCountingSettingsType" : {
        "type" : "object",
        "properties" : {
          "directions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "INGRESS", "EGRESS" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "in_roi" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "object_type" : {
            "type" : "string",
            "enum" : [ "HUMAN", "VEHICLE", "UNKNOWN" ],
            "nullable" : true
          },
          "out_roi" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          }
        }
      },
      "CameraHumanLoiteringSettingsType" : {
        "type" : "object",
        "properties" : {
          "roi" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          }
        }
      },
      "CameraMeteringConfigType" : {
        "type" : "object",
        "properties" : {
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "table" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "CameraMotorConfigType" : {
        "type" : "object",
        "properties" : {
          "af_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "af_region" : {
            "$ref" : "#/components/schemas/PermyriadRect"
          },
          "focus" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "piris" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zoom" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CameraPTZConfigType" : {
        "type" : "object",
        "properties" : {
          "offset_x_percent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "offset_y_percent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "size_percent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "CameraPolicyV2Type" : {
        "type" : "object",
        "properties" : {
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "CameraScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "CameraTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "faceAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "faceAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "threshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "vehicleAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicleAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "CameraType" : {
        "type" : "object",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraFramerate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hardwareId" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "CameraVisualTamperConfigType" : {
        "type" : "object",
        "properties" : {
          "analyze_fps" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "analyze_res" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "canny_thresh" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "edge_cov_diff_thresh" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "long_buf_size" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "short_buf_size" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Camera_CameraBackwardsCompatUpdateType" : {
        "type" : "object",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_CameraCurrentStateType" : {
        "type" : "object",
        "properties" : {
          "baseVideoOperationUri" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "enum" : [ "RED", "ORANGE", "GREEN" ],
            "nullable" : true
          },
          "connectionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "healthStatus" : {
            "type" : "string",
            "enum" : [ "RED", "ORANGE", "GREEN" ],
            "nullable" : true
          },
          "healthStatusDetails" : {
            "type" : "string",
            "enum" : [ "DISCONNECTED", "FIRMWARE_BEHIND", "NONE" ],
            "nullable" : true
          },
          "latestFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "onCameraState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "onCloudState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "versionsBehind" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Camera_CameraExternalFacetedType" : {
        "type" : "object",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraFramerate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_CameraExternalType" : {
        "type" : "object",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraFramerate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_CameraOfflineLanStreamingInfo" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_CreateCustomFootageSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomFootageSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_CreateFootageBoundingBoxesWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "footageBoundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_CreateFootageBoundingBoxesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_CreateFootageSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_CreateSharedLiveVideoStreamWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioGatewayUuid" : {
            "type" : "string",
            "description" : "Audio Gateway uuid is needed if audio is included",
            "nullable" : true
          },
          "cameraUuid" : {
            "type" : "string",
            "description" : "Camera facet uuid to get stream from",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Add a expiration date for accessing the stream in seconds",
            "nullable" : true
          },
          "includeAudio" : {
            "type" : "boolean",
            "description" : "Camera must be associated with an audio gateway to have audio",
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "description" : "If given a schedule uuid, will hide the stream during the schedule instead and show it otherwise",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "If not provided, will be named 'Unnamed'",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Add a password to allow access to your shared stream",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "description" : "Uuid of a relative or absolute schedule",
            "nullable" : true
          },
          "ssoProtected" : {
            "type" : "boolean",
            "description" : "Org must have SSO setup to use SSO protected streams",
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          },
          "vodEnabled" : {
            "type" : "boolean",
            "description" : "Enables recording of live footage to a VOD",
            "nullable" : true
          }
        },
        "required" : [ "cameraUuid", "includeAudio", "ssoProtected", "streamType", "vodEnabled" ]
      },
      "Camera_CreateSharedLiveVideoStreamWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveM3U8StreamUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreamUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreamUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_CreateSharedVideoWallWSRequest" : {
        "type" : "object",
        "properties" : {
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "videoWallUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "vodEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_CreateSharedVideoWallWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreamUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreamUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_CreateVideoWallWSRequest" : {
        "type" : "object",
        "properties" : {
          "videoWall" : {
            "$ref" : "#/components/schemas/VideoWallType"
          }
        }
      },
      "Camera_CreateVideoWallWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Camera_DeleteCustomFootageSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "description" : "List of camera uuids to delete custom seekpoints for",
            "items" : {
              "type" : "string",
              "description" : "List of camera uuids to delete custom seekpoints for",
              "nullable" : true
            },
            "nullable" : true
          },
          "customName" : {
            "type" : "string",
            "description" : "Filter which custom seekpoints to delete with the custom name provided",
            "nullable" : true
          },
          "endTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX milliseconds timestamp to end custom seekpoint deletion, up to 24 hours from the start timestamp",
            "minimum" : 0,
            "nullable" : true
          },
          "startTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX milliseconds timestamp to start custom seekpoint deletion",
            "minimum" : 0,
            "nullable" : true
          }
        },
        "required" : [ "cameraUuids", "endTimestampMs", "startTimestampMs" ]
      },
      "Camera_DeleteCustomFootageSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "deleteSeekpointResponseMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_DeleteCustomFootageSeekpointsWSResponse_SeekPointDeleteResponse"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteCustomFootageSeekpointsWSResponse_SeekPointDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "err" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteSharedLiveVideoStreamWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteSharedVideoWallWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "videoWallUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteSharedVideoWallWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteVideoWallWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteVideoWallWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_EraseCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_EraseCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_FindAllSharedLiveVideoStreamsWSRequest" : {
        "type" : "object"
      },
      "Camera_FindAllSharedLiveVideoStreamsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_SharedLiveVideoStreamWS"
            },
            "nullable" : true
          }
        }
      },
      "Camera_FindSharedLiveVideoStreamsForWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_FindSharedLiveVideoStreamsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_SharedLiveVideoStreamWS"
            },
            "nullable" : true
          }
        }
      },
      "Camera_FindSharedVideoWallsWSRequest" : {
        "type" : "object",
        "properties" : {
          "videoWallUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_FindSharedVideoWallsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedVideoWalls" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_SharedVideoWallWS"
            },
            "nullable" : true
          }
        }
      },
      "Camera_FootageBoundingBoxSummaryType" : {
        "type" : "object",
        "properties" : {
          "deviceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_FootageSeekPointSummaryType" : {
        "type" : "object",
        "properties" : {
          "activityCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceNames" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "poses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "recognizedObjects" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unidentifiedFaceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleLicensePlates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleNames" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Camera_GenerateBatchRegistrationInfoRequest" : {
        "type" : "object",
        "properties" : {
          "adminUserPermissionGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "readOnlyUserPermissionGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_GenerateBatchRegistrationInfoResponse" : {
        "type" : "object",
        "properties" : {
          "env" : {
            "type" : "string",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GenerateWifiChangeAuthorizationTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "perceivedIp" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GenerateWifiChangeAuthorizationTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "authorizationToken" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetBatchRegistrationTokenUsageRequest" : {
        "type" : "object",
        "properties" : {
          "sinceMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetBatchRegistrationTokenUsageResponse" : {
        "type" : "object",
        "properties" : {
          "usageList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BatchRegistrationTokenUsageResult"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetCameraAIThresholdsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetCameraAIThresholdsWSResponse" : {
        "type" : "object",
        "properties" : {
          "consecutiveHumanFilter" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Require this many consecutive frames of seeing a human to include that human detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
            "maximum" : 5,
            "minimum" : 1,
            "nullable" : true
          },
          "consecutiveVehicleFilter" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Require this many consecutive frames of seeing a vehicle to include that vehicle detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
            "maximum" : 5,
            "minimum" : 1,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "faceConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for face detection. 0 or null means the built-in default.",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          },
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "deprecated" : true,
            "description" : "Confidence threshold for face matching (determining if two faces are the same person). 0 or null means the built-in default. We no longer support device specific face matching threshold. This property is deprecated and will be removed.",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          },
          "humanConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for human detection. 0 or null means the built-in default.",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          },
          "lprConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for license plate detection and character recognition. 0 or null means the built-in default.",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          },
          "maxEventDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The max event duration for an alert in milliseconds.  Default is 30000, lowering down to 4000 will result in faster alert delivery but shorter alert clips.",
            "maximum" : 30000,
            "minimum" : 4000,
            "nullable" : true
          },
          "vehicleConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for vehicle detection. 0 or null means the built-in default.",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          }
        }
      },
      "Camera_GetCameraDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetCameraDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "cameras" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_CameraExternalType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetCloudArchivedMediaInfoWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetCloudArchivedMediaInfoWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "oldestArchivedVideoSegmentSecs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Camera_GetCloudArchivingConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetCloudArchivingConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "archivingConfig" : {
            "$ref" : "#/components/schemas/ScopedCloudArchivingConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalReadableAudioVideoUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetCurrentStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "force" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_GetCurrentStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "cameraState" : {
            "$ref" : "#/components/schemas/Camera_CameraCurrentStateType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetCustomFootageSeekpointsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "customDescription" : {
            "type" : "string",
            "description" : "(Optional) Filters which custom footage seekpoint to search for by description",
            "nullable" : true
          },
          "customDisplayName" : {
            "type" : "string",
            "description" : "(Optional) Filters which custom footage seekpoint to search for by name",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "(Optional) List of device uuids to filter the search",
            "items" : {
              "type" : "string",
              "description" : "(Optional) List of device uuids to filter the search",
              "nullable" : true
            },
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "How far from the start timestamp to search in seconds",
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "(Optional) List of location uuids to filter the search",
            "items" : {
              "type" : "string",
              "description" : "(Optional) List of location uuids to filter the search",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Starting timestamp of the search in UNIX seconds",
            "nullable" : true
          }
        },
        "required" : [ "duration", "startTime" ]
      },
      "Camera_GetCustomFootageSeekpointsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "customFootageSeekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SeekpointIndexType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetFacetedCameraDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "cameras" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_CameraExternalFacetedType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageBoundingBoxesForMultipleWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageBoundingBoxesForMultipleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageBoundingBoxMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_FootageBoundingBoxSummaryType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageBoundingBoxesWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageBoundingBoxesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageBoundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsForMultipleWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsForMultipleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPointMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_FootageSeekPointSummaryType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetFullCameraStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "force" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_GetFullCameraStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "fullCameraState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Camera_GetLineCrossingEnabledCamerasForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetLineCrossingEnabledCamerasForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "camerasToConfigs" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalReadableFacetedUserConfig"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetMediaUrisWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetMediaUrisWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lanCheckUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveH264Uris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveM3u8Uris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveMpdUris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodM3u8UrisTemplates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodMpdUrisTemplates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveM3u8Uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodH264UriTemplate" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalCameraLocationMapWSRequest" : {
        "type" : "object"
      },
      "Camera_GetMinimalCameraLocationMapWSResponse" : {
        "type" : "object",
        "properties" : {
          "cameraLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_GetMinimalCameraLocationMapWSResponse_CameraLocationInfo"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalCameraLocationMapWSResponse_CameraLocationInfo" : {
        "type" : "object",
        "properties" : {
          "cameraName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalCameraStateListWSRequest" : {
        "type" : "object",
        "properties" : {
          "includeMummified" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalCameraStateListWSResponse" : {
        "type" : "object",
        "properties" : {
          "cameraStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MinimalDeviceStateType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalListWSRequest" : {
        "type" : "object",
        "properties" : {
          "includeMummified" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalListWSResponse" : {
        "type" : "object",
        "properties" : {
          "cameras" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_MinimalCameraType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetOccupancyEnabledCamerasWSRequest" : {
        "type" : "object"
      },
      "Camera_GetOfflineLanStreamingInfoWSRequest" : {
        "type" : "object"
      },
      "Camera_GetOfflineLanStreamingInfoWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "info" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_CameraOfflineLanStreamingInfo"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetPresenceWindowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Camera_GetPresenceWindowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/TimeWindowSeconds"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetSharedCameraCurrentStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "cameraState" : {
            "$ref" : "#/components/schemas/Camera_SharedCameraCurrentStateType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetStorageRecoveryFileWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetStorageRecoveryFileWSResponse" : {
        "type" : "object",
        "properties" : {
          "fileContents" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetUptimeWindowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Camera_GetUptimeWindowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uptimeWindows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetVideoWallsWSRequest" : {
        "type" : "object"
      },
      "Camera_GetVideoWallsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "userNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "videoWalls" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_VideoWallSummaryType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_MinimalCameraType" : {
        "type" : "object",
        "properties" : {
          "connectionStatus" : {
            "type" : "string",
            "enum" : [ "RED", "ORANGE", "GREEN" ],
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "type" : "string",
            "enum" : [ "RED", "ORANGE", "GREEN" ],
            "nullable" : true
          },
          "healthStatusDetails" : {
            "type" : "string",
            "enum" : [ "DISCONNECTED", "FIRMWARE_BEHIND", "NONE" ],
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Camera_RebootCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_RebootCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS_REBOOT_SENT", "FAILED_CAMERA_OFFLINE", "FAILED_CAMERA_NOT_AUTHORIZED" ],
            "nullable" : true
          }
        }
      },
      "Camera_SharedCameraCurrentStateType" : {
        "type" : "object",
        "properties" : {
          "baseVideoOperationUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "enum" : [ "GREEN", "RED" ],
            "nullable" : true
          },
          "oldestArchivedMediaSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "onCameraState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "onCloudState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_SharedLiveVideoStreamWS" : {
        "type" : "object",
        "properties" : {
          "audioDeviceHwVar" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "audioGatewayUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "audioPushToTalkEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceHwVar" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTime" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hideOverlay" : {
            "type" : "boolean",
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "passwordProtected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveM3U8StreamUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreamUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedWithMonitoringService" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ssoProtected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "unscheduledMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "vodEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_SharedVideoWallWS" : {
        "type" : "object",
        "properties" : {
          "deviceScheduleMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DeviceSchedule"
            },
            "nullable" : true
          },
          "expirationTime" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hideOverlay" : {
            "type" : "boolean",
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "passwordProtected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedVideoWallUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "unscheduledMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "videoWallUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "vodEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraAIThresholdsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "description" : "Device uuid to update thresholds for",
            "nullable" : true
          },
          "consecutiveHumanFilter" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Require this many consecutive frames of seeing a human to include that human detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
            "maximum" : 5,
            "minimum" : 1,
            "nullable" : true
          },
          "consecutiveVehicleFilter" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Require this many consecutive frames of seeing a vehicle to include that vehicle detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
            "maximum" : 5,
            "minimum" : 1,
            "nullable" : true
          },
          "faceConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for face detection. Set to 0 or null to use the default. Maximum range of 1. Default = 0.7",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          },
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "deprecated" : true,
            "description" : "Confidence threshold for face matching (determining if two faces are the same person). Set to 0 or null to use the default. Maximum range of 1. Default = 0.7. We no longer support device specific face matching threshold. This property is deprecated and will be removed.",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          },
          "humanConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for human detection. Set to 0 or null to use the default. Maximum range of 1. Default = 0.6",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          },
          "lprConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for license plate detection and character recognition. Set to 0 or null to use the default. Maximum range of 1. Default = 0.8",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          },
          "maxEventDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Set the max event duration for an alert in milliseconds.  Default is 30000, lowering down to 4000 will result in faster alert delivery but shorter alert clips.",
            "maximum" : 30000,
            "minimum" : 4000,
            "nullable" : true
          },
          "vehicleConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for vehicle detection. Set to 0 or null to use the default. Maximum range of 1. Default = 0.6",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          }
        },
        "required" : [ "cameraUuid" ]
      },
      "Camera_UpdateCameraAIThresholdsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraFirmwareWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraFirmwareWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ALREADY_ON_THE_LATEST_FIRMWARE", "DEVICE_ON_A_SPECIAL_FIRMWARE_AND_CANNOT_BE_UPDATED", "UPDATE_STARTED", "UNABLE_TO_REACH_DEVICE", "FIRMWARE_UPDATE_ALREADY_IN_PROGESS", "DEVICE_NOT_AUTHROIZED" ],
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraHumanLoiteringConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "description" : "Device uuid to update the human loitering feature for.",
            "nullable" : true
          },
          "rois" : {
            "type" : "array",
            "description" : "Region of interests of the human loitering feature. NULL or empty list will disable the feature",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          }
        },
        "required" : [ "cameraUuid" ]
      },
      "Camera_UpdateCameraHumanLoiteringWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraLineCrossingThresholdsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "description" : "Device uuid to update the line-crossing feature for.",
            "nullable" : true
          },
          "directions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "INGRESS", "EGRESS" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "inverted" : {
            "type" : "boolean",
            "default" : false,
            "description" : "By default, INGRESS events occur when the following condition is met for the following line types: an entity moves from top -> bottom when a horizontal line is defined, an entity moves from left -> right when a vertical line is defined, an entity moves from top-left -> bottom-right when an upwards sloping line is defined, and an entity moves from top-right to bottom-left when a downwards sloping line is defined. Setting this value to true will switch INGRESS to EGRESS events and vice-versa.",
            "nullable" : true
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "HUMAN", "VEHICLE", "UNKNOWN" ],
            "nullable" : true
          },
          "pointA" : {
            "$ref" : "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSRequest_Coordinate"
          },
          "pointB" : {
            "$ref" : "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSRequest_Coordinate"
          }
        },
        "required" : [ "cameraUuid" ]
      },
      "Camera_UpdateCameraLineCrossingThresholdsWSRequest_Coordinate" : {
        "type" : "object",
        "description" : "(X,Y) coordinate expressed as a percentage of the camera's resolution.Minimum range is 0.1 and maximum range is 0.9. Leaving this value as null will disable line-crossing.",
        "properties" : {
          "x" : {
            "type" : "number",
            "format" : "float",
            "description" : "Value ranges from 0.1 to 0.9",
            "maximum" : 0.9,
            "minimum" : 0.1,
            "nullable" : true
          },
          "y" : {
            "type" : "number",
            "format" : "float",
            "description" : "Value ranges from 0.1 to 0.9",
            "maximum" : 0.9,
            "minimum" : 0.1,
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraLineCrossingThresholdsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "customDataUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "directionRadiansUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "facetNameMapUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mummifiedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "camera" : {
            "$ref" : "#/components/schemas/Camera_CameraBackwardsCompatUpdateType"
          }
        }
      },
      "Camera_UpdateCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCamerasBulkV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraBulkDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_UpdateCameraV2WSRequest"
            },
            "nullable" : true
          }
        }
      },
      "Camera_UpdateConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableAudioVideoUserConfig"
          }
        }
      },
      "Camera_UpdateVideoWallWSRequest" : {
        "type" : "object",
        "properties" : {
          "videoWall" : {
            "$ref" : "#/components/schemas/VideoWallType"
          }
        }
      },
      "Camera_UpdateVideoWallWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateWifiWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateWifiWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_VideoWallSummaryType" : {
        "type" : "object",
        "properties" : {
          "deviceList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "numShares" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "othersCanEdit" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "CancelLoopingAudioPlaybackActionRecordType" : {
        "type" : "object",
        "properties" : {
          "statusMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AudioGatewayStatusEnum"
            },
            "nullable" : true
          }
        }
      },
      "CancelLoopingAudioPlaybackActionType" : {
        "type" : "object",
        "properties" : {
          "_audioDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "audioDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "CancelledDoorStateOverride" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cancelledDoorStateOverride" : {
              "$ref" : "#/components/schemas/DoorStateOverride"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ManualDoorStateChangeEnum"
          }
        }
      },
      "ChangeType" : {
        "type" : "string",
        "enum" : [ "REFRESH", "DELETE", "CREATE", "UPDATE" ]
      },
      "ChatRecord" : {
        "type" : "object",
        "properties" : {
          "contextId" : {
            "type" : "string",
            "nullable" : true
          },
          "llmInfo" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "principalUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "queriedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "query" : {
            "type" : "string",
            "nullable" : true
          },
          "respondedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "response" : {
            "type" : "string",
            "nullable" : true
          },
          "timeline" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryTimelineEvent"
            },
            "nullable" : true
          },
          "toolingTimeline" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryTool"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_DeleteChatbotConversationWSRequest" : {
        "type" : "object",
        "properties" : {
          "contextId" : {
            "type" : "string",
            "description" : "Context identifier of the conversation to delete.",
            "nullable" : true
          }
        },
        "required" : [ "contextId" ]
      },
      "Chatbot_GetChatHistoryByContextIdWSRequest" : {
        "type" : "object",
        "properties" : {
          "contextId" : {
            "type" : "string",
            "description" : "Context ID to get chat history for.",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          }
        },
        "required" : [ "contextId" ]
      },
      "Chatbot_GetChatHistoryWSResponse" : {
        "type" : "object",
        "properties" : {
          "chatHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChatRecord"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_GetChatbotConversationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          }
        }
      },
      "Chatbot_GetChatbotConversationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "conversations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContextRecord"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_SubmitChatWSRequest" : {
        "type" : "object",
        "properties" : {
          "contextId" : {
            "type" : "string",
            "description" : "Uuid used to track the current conversation with Rhombus MIND.",
            "nullable" : true
          },
          "conversationName" : {
            "type" : "string",
            "description" : "The name of the conversation if this query is the start of a new conversation. If not specified, the conversation will be named after the first query.",
            "nullable" : true
          },
          "query" : {
            "type" : "string",
            "description" : "The query to submit to Rhombus MIND.",
            "nullable" : true
          }
        },
        "required" : [ "contextId", "query" ]
      },
      "Chatbot_SubmitChatWSResponse" : {
        "type" : "object",
        "properties" : {
          "chatRecordUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_UpdateChatbotConversationWSRequest" : {
        "type" : "object",
        "properties" : {
          "selectiveUpdate" : {
            "$ref" : "#/components/schemas/ContextRecordSelectiveUpdate"
          }
        }
      },
      "Chatbot_UpdateChatbotConversationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "conversation" : {
            "$ref" : "#/components/schemas/ContextRecord"
          }
        }
      },
      "CheckEquations" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "equation" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "shortName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClaimKey" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "entry" : {
              "$ref" : "#/components/schemas/ClaimKeyEntry"
            },
            "startDate" : {
              "type" : "string",
              "format" : "date-time",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "claimEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key ended successfully.",
            "nullable" : true
          },
          "claimStartDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key started.",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "expirationEmailState" : {
            "type" : "string",
            "enum" : [ "NINETY_DAY_EMAIL_SUCCEEDED", "NINETY_DAY_EMAIL_FAILED", "SIXTY_DAY_EMAIL_SUCCEEDED", "SIXTY_DAY_EMAIL_FAILED", "FOURTY_FIVE_DAY_EMAIL_SUCCEEDED", "FOURTY_FIVE_DAY_EMAIL_FAILED", "THIRTY_DAY_EMAIL_SUCCEEDED", "THIRTY_DAY_EMAIL_FAILED", "TWENTY_ONE_DAY_EMAIL_SUCCEEDED", "TWENTY_ONE_DAY_EMAIL_FAILED", "FOURTEEN_DAY_EMAIL_SUCCEEDED", "FOURTEEN_DAY_EMAIL_FAILED", "TEN_DAY_EMAIL_SUCCEEDED", "TEN_DAY_EMAIL_FAILED", "FIVE_DAY_EMAIL_SUCCEEDED", "FIVE_DAY_EMAIL_FAILED", "FOUR_DAY_EMAIL_SUCCEEDED", "FOUR_DAY_EMAIL_FAILED", "THREE_DAY_EMAIL_SUCCEEDED", "THREE_DAY_EMAIL_FAILED", "TWO_DAY_EMAIL_SUCCEEDED", "TWO_DAY_EMAIL_FAILED", "ONE_DAY_EMAIL_SUCCEEDED", "ONE_DAY_EMAIL_FAILED", "ZERO_DAY_EMAIL_SUCCEEDED", "ZERO_DAY_EMAIL_FAILED", "GRACE_PERIOD_EMAILS_IN_PROGRESS", "GRACE_PERIOD_EMAILS_COMPLETED", "UNKNOWN" ],
            "nullable" : true
          },
          "gracePeriodEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "maskedClaimCode" : {
            "type" : "string",
            "description" : "Masked claim code for redeemed claim keys. This field can be used for reference purposes.",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "renewedByClaimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "requestId" : {
            "type" : "string",
            "description" : "Externally supplied request id to prevent creation of unnecessary claim keys due to reprocessing or bugs. Unnecessary claim keys are claim keys that are not tied to anything in the external system.  This property is unique for all claim keys.",
            "nullable" : true
          },
          "returnHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClaimKeyReturnEvent"
            },
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "NEW", "RENEWAL" ],
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClaimKeyEntry" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "productQuantities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "ClaimKeyReturnEvent" : {
        "type" : "object",
        "properties" : {
          "returnedProductQuantities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          }
        }
      },
      "ClaimKeySearchFilter" : {
        "type" : "object",
        "properties" : {
          "excludeUnclaimed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "excludedStates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "includedStates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "ClimateActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "climateThreshold" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "ClimateEventType" : {
        "type" : "object",
        "properties" : {
          "alertActivities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "baseStationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "batteryPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bleDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "bleRssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closeBaseStations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "co2" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ethanol" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "heatIndexRangeWarning" : {
            "$ref" : "#/components/schemas/HeatIndexRangeWarningEnum"
          },
          "humidity" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pm25" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tampered" : {
            "type" : "boolean",
            "nullable" : true
          },
          "temp" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thcDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "thcPercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeSmokeDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vapeSmokePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "ClimatePolicyType" : {
        "type" : "object",
        "properties" : {
          "backoffAlertSecs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimateTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimateScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClimateScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimateTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "ClimateSettings" : {
        "type" : "object",
        "properties" : {
          "alert_window_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "smoke_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thc_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "ClimateSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Sensor Climate settings",
        "properties" : {
          "alert_window_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "smoke_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thc_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "vape_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "ClimateTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "audioThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Climate_DeleteEnvironmentalGatewayWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Climate_DeleteEnvironmentalGatewayWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Climate_GetClimateEventsForSensorWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetClimateEventsForSensorWSResponse" : {
        "type" : "object",
        "properties" : {
          "climateEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimateEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetClimateSensorConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetClimateSensorConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/IClimateUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetEnvironmentalGatewayShadowsWSRequest" : {
        "type" : "object"
      },
      "Climate_GetEnvironmentalGatewayShadowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "environmentalGatewayShadows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvironmentalGatewayShadowType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetEventsForEnvironmentalGatewayWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Climate_GetEventsForEnvironmentalGatewayWSResponse" : {
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/E50ClimateEventType"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetMinimalClimateStatesWSRequest" : {
        "type" : "object"
      },
      "Climate_GetMinimalClimateStatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "climateStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Climate_MinimalClimateStateType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetMinimalEnvironmentalGatewayStatesWSRequest" : {
        "type" : "object"
      },
      "Climate_GetMinimalEnvironmentalGatewayStatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "minimalEnvironmentalGatewayStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Climate_MinimalEnvironmentalGatewayStateType"
            },
            "nullable" : true
          }
        }
      },
      "Climate_MinimalClimateStateType" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "calibrating" : {
            "type" : "boolean",
            "nullable" : true
          },
          "closestBaseStation" : {
            "type" : "string",
            "nullable" : true
          },
          "co2" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "ethanol" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "health" : {
            "type" : "string",
            "enum" : [ "GREEN", "RED" ],
            "nullable" : true
          },
          "healthDetails" : {
            "type" : "string",
            "enum" : [ "FIRMWARE_BEHIND", "NO_HEARTBEAT", "NONE" ],
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "heatIndexRangeWarning" : {
            "$ref" : "#/components/schemas/HeatIndexRangeWarningEnum"
          },
          "humidity" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pm25" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "probeConnected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "temperatureCelcius" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thcPercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Climate_MinimalEnvironmentalGatewayStateType" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "airQualityIndex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "airQualityIndexPollutant" : {
            "$ref" : "#/components/schemas/AirQualityIndexPollutantEnum"
          },
          "alertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "calibrating" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ch2oPpb" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "co2Ppm" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "coConcentration" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "connected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "falsePositiveConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "heatIndexRangeWarning" : {
            "$ref" : "#/components/schemas/HeatIndexRangeWarningEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "leakDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "leakProbePresent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nc0p5" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc10p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc1p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc2p5" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc4p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "noxIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pm10p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm1p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm2p5" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm4p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pressure" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "smokeConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smokeTobaccoConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempProbePresent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "typPartSize" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vapeThcConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vocIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Climate_RebootEnvironmentalGatewayWSRequest" : {
        "type" : "object",
        "properties" : {
          "environmentalGatewayUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_UpdateClimateSensorDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_UpdateClimateSensorDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_UpdateEnvironmentalGatewayDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_UpdateEnvironmentalGatewayDetailsWSResponse" : {
        "type" : "object"
      },
      "ClipAccessSettings" : {
        "type" : "object",
        "properties" : {
          "allowedUsers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "visibility" : {
            "$ref" : "#/components/schemas/ClipVisibility"
          }
        }
      },
      "ClipBoundingBoxType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bottom" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "confidence" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "croppedImageLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "customActivityDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "nullable" : true
          },
          "inMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "keypointsV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PointType"
            },
            "nullable" : true
          },
          "left" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "loudness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "pose" : {
            "type" : "string",
            "nullable" : true
          },
          "relativeSecond" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "right" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorValType" : {
            "$ref" : "#/components/schemas/SensorValType"
          },
          "toastOrderIdInfo" : {
            "$ref" : "#/components/schemas/ToastOrderIdType"
          },
          "top" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "unidentifiedFaceId" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipGroupType" : {
        "type" : "object",
        "properties" : {
          "clips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipV2Type"
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "isShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipGroupWithDetailsType" : {
        "type" : "object",
        "properties" : {
          "clips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipWithDetailsType"
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "isShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipMetaDataType" : {
        "type" : "object",
        "properties" : {
          "activitySeekPoints" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "float",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "activitySeekPointsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointType"
            },
            "nullable" : true
          },
          "activitySeekPointsV3" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "mGrids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "soundSignificantLufs" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipSeekPointType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bottom" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "nullable" : true
          },
          "keypointsV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PointType"
            },
            "nullable" : true
          },
          "left" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "pose" : {
            "type" : "string",
            "nullable" : true
          },
          "relativeSecond" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "right" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "top" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "unidentifiedFaceId" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipSeekPointV2Type" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "customActivityDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "dcao" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "inMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "loudness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "pose" : {
            "type" : "string",
            "nullable" : true
          },
          "relativeSecond" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "sensorValType" : {
            "$ref" : "#/components/schemas/SensorValType"
          },
          "toastOrderIdInfo" : {
            "$ref" : "#/components/schemas/ToastOrderIdType"
          },
          "tu" : {
            "type" : "string",
            "nullable" : true
          },
          "unidentifiedFaceId" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipVisibility" : {
        "type" : "string",
        "enum" : [ "PRIVATE", "ORG_WIDE" ]
      },
      "CloudArchivingStrategy" : {
        "type" : "string",
        "enum" : [ "WEEKLY_SCHEDULED", "CONTINUOUS" ]
      },
      "Co2SensorType" : {
        "type" : "object",
        "properties" : {
          "co2Ppm" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_CalibrateFloorplanProjectionWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraImagePointsPermyriad" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "floorplanImagePointsPermyriad" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_CalibrateFloorplanProjectionWSResponse" : {
        "type" : "object",
        "properties" : {
          "homography" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_GetBoundingBoxesWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetBoundingBoxesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageBoundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_GetCameraOrDoorbellCameraSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "activitySet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "seekpointDurationIntervalSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetFullDeviceStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "force" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetMediaUrisWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetMinimalDeviceStateListWSRequest" : {
        "type" : "object",
        "properties" : {
          "includeMummified" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetPresenceWindowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetPresenceWindowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/TimeWindowSeconds"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_GetSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_GetUptimeWindowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetUptimeWindowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uptimeWindows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_RebootDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "enum" : [ "REBOOT_SENT", "DEVICE_OFFLINE" ],
            "nullable" : true
          }
        }
      },
      "Common_devices_UpdateConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_UpdateDeviceDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_CreateRawHttpStreamWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rawStreamName" : {
            "type" : "string",
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          }
        },
        "required" : [ "streamType" ]
      },
      "Common_devices_rawstream_CreateRawHttpStreamWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lanAudioUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "lanVideoLowResUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "lanVideoUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_DeleteRawHttpStreamWSRequest" : {
        "type" : "object",
        "properties" : {
          "customPathPart" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_DeleteRawHttpStreamWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_FindAllRawHttpStreamsWSRequest" : {
        "type" : "object"
      },
      "Common_devices_rawstream_FindAllRawHttpStreamsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rawHttpStreams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Common_devices_rawstream_LanSpecificRawStreamType"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_GetRawHttpStreamsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_GetRawHttpStreamsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rawHttpStreams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Common_devices_rawstream_LanSpecificRawStreamType"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_LanSpecificRawStreamType" : {
        "type" : "object",
        "properties" : {
          "audioPath" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBy" : {
            "type" : "string",
            "nullable" : true
          },
          "customPathPart" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lanAudioUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "lanVideoLowResUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "lanVideoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          },
          "videoLowResPath" : {
            "type" : "string",
            "nullable" : true
          },
          "videoPath" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ComponentBaseEnumType" : {
        "type" : "string",
        "enum" : [ "reader", "dpi", "relay", "rex", "aux", "aperio", "button" ]
      },
      "ComponentCompositeEnumType" : {
        "type" : "string",
        "enum" : [ "AccessControlledDoor" ]
      },
      "ComponentCompositeEnumType_Minimal" : {
        "type" : "string",
        "enum" : [ "AccessControlledDoor" ]
      },
      "ComponentCompositeEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeName" : {
              "type" : "string",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "correlationId" : {
              "type" : "string",
              "nullable" : true
            },
            "eventUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "ComponentCompositeShadowEnum" : {
        "type" : "string",
        "enum" : [ "AccessControlledDoorShadow" ]
      },
      "ComponentEnumType" : {
        "type" : "string",
        "enum" : [ "RhombusOsdpDoorReader", "OsdpDoorReader", "WiegandDoorReader", "IntegratedDoorPositionIndicator", "IntegratedRequestToExit", "IntegratedDoorRelay", "IntegratedGenericRelay", "IntegratedGenericInput", "IntegratedGenericButton", "AperioGateway", "AperioDoorExtension", "AperioDoorRelay", "AperioDoorPositionIndicator", "AperioDoorReader", "AperioDoorRequestToExit" ]
      },
      "ComponentEventEnumType" : {
        "type" : "string",
        "enum" : [ "DoorbellEvent", "DoorReaderStateChangeEvent", "DoorRelayStateChangeEvent", "DoorPositionIndicatorStateChangeEvent", "RequestToExitStateChangeEvent", "CredentialReceivedEvent", "ButtonEvent", "GenericInputStateChangeEvent", "GenericRelayStateChangeEvent", "AccessControlUnitTamperEvent", "AccessControlUnitLocationLockdownStateEvent", "DoorLocationLockdownStateEvent", "PanicButtonEvent", "AccessControlUnitBatteryStateChangeEvent", "WaveToUnlockIntentExpiredEvent", "DoorStateChangeEvent", "DoorAuthFirstInStateEvent", "DoorScheduleFirstInStateEvent", "AccessControlUnitDoorFirstInStateEvent", "AperioDoorExtensionStateEvent", "AperioGatewayStateEvent", "AperioGatewayConnectionStateChangeEvent", "AperioDtcEvent", "AperioTamperStateEvent" ]
      },
      "ComponentEventType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DoorbellEventType"
        }, {
          "$ref" : "#/components/schemas/DoorReaderStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/DoorRelayStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/DoorPositionIndicatorStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/RequestToExitStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/CredentialReceivedEventType"
        }, {
          "$ref" : "#/components/schemas/ButtonEventType"
        }, {
          "$ref" : "#/components/schemas/GenericInputStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/GenericRelayStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/AccessControlUnitTamperEventType"
        }, {
          "$ref" : "#/components/schemas/AccessControlUnitLocationLockdownStateEventType"
        }, {
          "$ref" : "#/components/schemas/DoorLocationLockdownStateEventType"
        }, {
          "$ref" : "#/components/schemas/PanicButtonEventType"
        }, {
          "$ref" : "#/components/schemas/AccessControlUnitBatteryStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/WaveToUnlockIntentExpiredEvent"
        }, {
          "$ref" : "#/components/schemas/DoorStateChangeEvent"
        }, {
          "$ref" : "#/components/schemas/DoorAuthFirstInStateEvent"
        }, {
          "$ref" : "#/components/schemas/DoorScheduleFirstInStateEvent"
        }, {
          "$ref" : "#/components/schemas/AccessControlUnitDoorFirstInStateEvent"
        }, {
          "$ref" : "#/components/schemas/AperioDtcEvent"
        }, {
          "$ref" : "#/components/schemas/AperioDoorExtensionStateEvent"
        } ],
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ComponentReferenceType" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ComponentReferenceType_Minimal" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ComponentRelayOutputType" : {
        "type" : "string",
        "enum" : [ "TRANSIENT", "STEADY" ]
      },
      "ComponentSeekPointType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "componentCompositeUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "customActivityDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originalEvent" : {
            "type" : "object",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ComponentShadowEnumType" : {
        "type" : "string",
        "enum" : [ "DoorReaderShadow", "DoorRelayShadow", "DoorPositionIndicatorShadow", "RequestToExitShadow", "GenericRelayShadow", "GenericInputShadow", "GenericButtonShadow", "AperioGatewayShadow", "AperioDoorExtensionShadow" ]
      },
      "ComponentShadowType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DoorReaderShadowType"
        }, {
          "$ref" : "#/components/schemas/DoorRelayShadowType"
        }, {
          "$ref" : "#/components/schemas/DoorPositionIndicatorShadowType"
        }, {
          "$ref" : "#/components/schemas/RequestToExitShadowType"
        }, {
          "$ref" : "#/components/schemas/GenericInputShadowType"
        }, {
          "$ref" : "#/components/schemas/IntegratedDoorRelayType"
        }, {
          "$ref" : "#/components/schemas/GenericRelayShadowType"
        }, {
          "$ref" : "#/components/schemas/GenericButtonShadowType"
        }, {
          "$ref" : "#/components/schemas/AperioGatewayShadow"
        }, {
          "$ref" : "#/components/schemas/AperioDoorExtensionShadow"
        } ],
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_AddAccessControlledDoorLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_AddAccessControlledDoorLabelWSResponse" : {
        "type" : "object"
      },
      "Component_AggregatedCredentialReceivedEventInfo" : {
        "type" : "object",
        "properties" : {
          "firstEvent" : {
            "$ref" : "#/components/schemas/CredentialReceivedEventType"
          },
          "lastEvent" : {
            "$ref" : "#/components/schemas/CredentialReceivedEventType"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_ApplyAccessControlledDoorStateOverrideWSRequest" : {
        "type" : "object",
        "description" : "Door state overrides are temporary changes to door's lock/unlock state even if otherwise scheduled. They can be superseded or cancelled at anytime.",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "description" : "RUUID of the target door",
            "nullable" : true
          },
          "doorAuthFirstInState" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          },
          "doorScheduleFirstInState" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          },
          "expireEarlyMode" : {
            "$ref" : "#/components/schemas/EarlyExpireModeEnum"
          },
          "expiresAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "A millisecond epoch time that represents when the override will end if not ended earlier by a regular schedule interval. Cannot be longer than 24 hours and default is 24hours long",
            "nullable" : true
          },
          "followFirstInRules" : {
            "type" : "boolean",
            "description" : "Default is false if not specified, the door state override will ignore schedule first-in requirements (if applicable) if false",
            "nullable" : true
          },
          "startDelaySeconds" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Default is 0 if not specified, determines how long to wait before applying the override",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          }
        },
        "required" : [ "accessControlledDoorUuid", "state" ]
      },
      "Component_ApplyAccessControlledDoorStateOverrideWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Component_CancelAccessControlledDoorStateOverrideWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "description" : "RUUID of the target door",
            "nullable" : true
          }
        },
        "required" : [ "accessControlledDoorUuid" ]
      },
      "Component_CancelAccessControlledDoorStateOverrideWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Component_CreateAccessControlledDoorSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomFootageSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_CreateAccessControlledDoorSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "successMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_CreateAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          },
          "accessControlledDoorLabels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Component_CreateAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_CreateAperioDoorInfo" : {
        "type" : "object",
        "description" : "The Aperio-assigned ID of the door(s) and the Aperio-assigned ID of their lock device.",
        "properties" : {
          "aperioDoorDeviceId" : {
            "type" : "string",
            "nullable" : true
          },
          "aperioDoorId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_CreateAperioDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "aperioGatewayComponentId" : {
            "type" : "string",
            "description" : "The Rhombus-assigned RUUID of the componentized Aperio Gateway that provides access to the door(s).",
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "description" : "The Aperio-assigned ID of the door(s) and the Aperio-assigned ID of their lock device.",
            "items" : {
              "$ref" : "#/components/schemas/Component_CreateAperioDoorInfo"
            },
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "description" : "RUUID of the Rhombus device (e.g. door controller) connected to the Aperio gateway through which communication with Aperio's doors is achieved.",
            "nullable" : true
          }
        },
        "required" : [ "aperioGatewayComponentId", "doors", "ownerDeviceUuid" ]
      },
      "Component_CreateAperioDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          }
        }
      },
      "Component_CreateAperioGatewayWSRequest" : {
        "type" : "object",
        "properties" : {
          "aperioGatewayId" : {
            "type" : "string",
            "description" : "The Aperio-assigned ID of the gateway, given as a hex string, e.g. \"034AB5\".",
            "nullable" : true
          },
          "includeAperioDoors" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, also creates Aperio doors with this request.",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "description" : "RUUID of the Rhombus device (e.g. door controller) to be connected with the Aperio gateway.",
            "nullable" : true
          }
        },
        "required" : [ "aperioGatewayId", "ownerDeviceUuid" ]
      },
      "Component_CreateAperioGatewayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/AperioGateway"
          },
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          }
        }
      },
      "Component_CreateIntegratedDoorPositionIndicatorWSRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorPortType"
          }
        }
      },
      "Component_CreateIntegratedDoorPositionIndicatorWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedDoorPositionIndicatorType"
          }
        }
      },
      "Component_CreateIntegratedDoorRelayWSRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorRelayPortType"
          }
        }
      },
      "Component_CreateIntegratedDoorRelayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedDoorRelayType"
          }
        }
      },
      "Component_CreateIntegratedGenericButtonWSRequest" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/ButtonPortType"
          }
        }
      },
      "Component_CreateIntegratedGenericButtonWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericButtonType"
          }
        }
      },
      "Component_CreateIntegratedGenericInputWSRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryInputPortType"
          }
        }
      },
      "Component_CreateIntegratedGenericInputWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericInputType"
          }
        }
      },
      "Component_CreateIntegratedGenericRelayWSRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryRelayPortType"
          },
          "steadyState" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          }
        }
      },
      "Component_CreateIntegratedGenericRelayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericRelayType"
          }
        }
      },
      "Component_CreateIntegratedRequestToExitWSRequest" : {
        "type" : "object",
        "properties" : {
          "intentOnly" : {
            "type" : "boolean",
            "nullable" : true
          },
          "intentOnlyEvents" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/RequestToExitPortType"
          }
        }
      },
      "Component_CreateIntegratedRequestToExitWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedRequestToExitType"
          }
        }
      },
      "Component_CreateOsdpReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "allowUnencrypted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_CreateOsdpReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/OsdpDoorReaderType"
          }
        }
      },
      "Component_CreateRhombusOsdpReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_CreateRhombusOsdpReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/RhombusOsdpDoorReaderType"
          }
        }
      },
      "Component_CreateWiegandReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "buzzerPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "d0Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "d1Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "gledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "tamperPort" : {
            "$ref" : "#/components/schemas/WiegandInputPortType"
          }
        }
      },
      "Component_CreateWiegandReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/WiegandDoorReaderType"
          }
        }
      },
      "Component_DeleteAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_DeleteAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Component_DeleteComponentWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_DeleteComponentWSResponse" : {
        "type" : "object"
      },
      "Component_DeleteComponentsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_DeleteComponentsByOwnerDeviceWSResponse" : {
        "type" : "object"
      },
      "Component_FindAccessControlledDoorShadowsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorShadowsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "shadows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorShadow"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorShadowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorShadowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "shadows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorShadow"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindAllComponentShadowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Component_FindAllComponentShadowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "acuComponentShadowMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ComponentShadowType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByApiTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByApiTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByComponentWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByComponentWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCorrelationWSRequest" : {
        "type" : "object",
        "properties" : {
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCorrelationWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialHexValueWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credentialHexValue" : {
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialHexValueWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialUuidWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialUuidWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialValueWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credentialValue" : {
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialValueWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsBySupportAuthorityWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "supportAuthorityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsBySupportAuthorityWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForOrgDashboardWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "reverseSearch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForOrgDashboardWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForVideoIntercomWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          },
          "videoIntercomUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForVideoIntercomWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByAccessControlledDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuidList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sortResponse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByAccessControlledDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByComponentWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByComponentWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentShadowsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentShadowsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentShadows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentShadowType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "components" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseComponentType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindDistinctOriginatorCredentialReceivedEventsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "activityFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credSourceFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CredentialSourceEnumType"
            },
            "nullable" : true
          },
          "originatorTypeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventOriginatorEnum"
            },
            "nullable" : true
          },
          "userFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Component_FindDistinctOriginatorCredentialReceivedEventsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Component_AggregatedCredentialReceivedEventInfo"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindDistinctOriginatorCredentialReceivedEventsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "activityFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "componentCompositeFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credSourceFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CredentialSourceEnumType"
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originatorTypeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventOriginatorEnum"
            },
            "nullable" : true
          },
          "userFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Component_FindDistinctOriginatorCredentialReceivedEventsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Component_AggregatedCredentialReceivedEventInfo"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindMinimalStateAccessControlledDoorsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindMinimalStateAccessControlledDoorsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Component_MinimalStateAccessControlledDoor"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindMinimalStateAccessControlledDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindMinimalStateAccessControlledDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Component_MinimalStateAccessControlledDoor"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_GetAccessControlledDoorLabelsForOrgWSRequest" : {
        "type" : "object"
      },
      "Component_GetAccessControlledDoorLabelsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorLabels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          }
        }
      },
      "Component_GetCurrentExpectedAccessControlledDoorStateWSRequest" : {
        "type" : "object",
        "description" : "Determines the expected door state based on the current time and current door configuration",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "description" : "RUUID of the target door",
            "nullable" : true
          }
        },
        "required" : [ "accessControlledDoorUuid" ]
      },
      "Component_GetCurrentExpectedAccessControlledDoorStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "activeDoorState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "activeDoorStateSource" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "defaultDoorStateSource" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "defaultState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "doorStateIfFirstInRequired" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "doorStateIfFirstInSatisfied" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "doorStateSourceIfFirstInRequired" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "doorStateSourceIfFirstInSatisfied" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "firstInRequirementEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firstInRequirementSatisfied" : {
            "type" : "boolean",
            "nullable" : true
          },
          "nextNearestSchedule" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorNextNearestSchedule"
          }
        }
      },
      "Component_GetFullAccessControlledDoorShadowWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_GetFullAccessControlledDoorShadowWSResponse" : {
        "type" : "object",
        "properties" : {
          "doorComponentShadowMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ComponentShadowType"
            },
            "nullable" : true
          },
          "doorShadow" : {
            "$ref" : "#/components/schemas/AccessControlledDoorShadow"
          }
        }
      },
      "Component_GetOrCreateDevicePhysicalPortConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_GetOrCreateDevicePhysicalPortConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "detectedInvalidPortConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvalidPhysicalPortConfigType"
            },
            "nullable" : true
          },
          "deviceComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseComponentType"
            },
            "nullable" : true
          },
          "devicePhysicalPortConfig" : {
            "$ref" : "#/components/schemas/DevicePhysicalPortConfigType"
          }
        }
      },
      "Component_MinimalStateAccessControlledDoor" : {
        "type" : "object",
        "properties" : {
          "door" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          },
          "shadow" : {
            "$ref" : "#/components/schemas/AccessControlledDoorShadow"
          }
        }
      },
      "Component_RemoveAccessControlledDoorLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_RemoveAccessControlledDoorLabelWSResponse" : {
        "type" : "object"
      },
      "Component_UpdateAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ajarTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "associatedFaceDetectionCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "defaultState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "doorStateToScheduleUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "dpiComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "forceAllReadersFirstInAuthRequiredLedFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersFirstInUnlockPendingLedFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersOtherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersRemoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forcedOpenEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forcedOpenTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "geofenceEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "geofenceRadius" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "proximityUnlockSettings" : {
            "$ref" : "#/components/schemas/ProximityUnlockSettingsType"
          },
          "readerComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relayComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relockAfterOpenTimeMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rexComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unlockTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "unlockTimeSecRex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "waveToUnlockSettings" : {
            "$ref" : "#/components/schemas/WaveToUnlockSettingsType"
          }
        }
      },
      "Component_UpdateAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_UpdateIntegratedDoorPositionIndicatorWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorPortType"
          }
        }
      },
      "Component_UpdateIntegratedDoorPositionIndicatorWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedDoorPositionIndicatorType"
          }
        }
      },
      "Component_UpdateIntegratedDoorRelayWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorRelayPortType"
          }
        }
      },
      "Component_UpdateIntegratedDoorRelayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedDoorRelayType"
          }
        }
      },
      "Component_UpdateIntegratedGenericButtonWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/ButtonPortType"
          }
        }
      },
      "Component_UpdateIntegratedGenericButtonWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericButtonType"
          }
        }
      },
      "Component_UpdateIntegratedGenericInputWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryInputPortType"
          }
        }
      },
      "Component_UpdateIntegratedGenericInputWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericInputType"
          }
        }
      },
      "Component_UpdateIntegratedGenericRelaySteadyStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "steadyState" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          }
        }
      },
      "Component_UpdateIntegratedGenericRelaySteadyStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericRelayType"
          }
        }
      },
      "Component_UpdateIntegratedGenericRelayTransientStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "activate" : {
            "type" : "boolean",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_UpdateIntegratedGenericRelayTransientStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_UpdateIntegratedGenericRelayWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryRelayPortType"
          }
        }
      },
      "Component_UpdateIntegratedGenericRelayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericRelayType"
          }
        }
      },
      "Component_UpdateIntegratedRequestToExitWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "intentOnly" : {
            "type" : "boolean",
            "nullable" : true
          },
          "intentOnlyEvents" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "port" : {
            "$ref" : "#/components/schemas/RequestToExitPortType"
          }
        }
      },
      "Component_UpdateIntegratedRequestToExitWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedRequestToExitType"
          }
        }
      },
      "Component_UpdateOsdpReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_UpdateOsdpReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/OsdpDoorReaderType"
          }
        }
      },
      "Component_UpdateRhombusOsdpReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_UpdateRhombusOsdpReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/RhombusOsdpDoorReaderType"
          }
        }
      },
      "Component_UpdateWiegandReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "buzzerPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "d0Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "d1Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "gledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "tamperPort" : {
            "$ref" : "#/components/schemas/WiegandInputPortType"
          }
        }
      },
      "Component_UpdateWiegandReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/WiegandDoorReaderType"
          }
        }
      },
      "Consignee" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "address3" : {
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "contactName" : {
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ContentDisposition" : {
        "type" : "object",
        "properties" : {
          "attachment" : {
            "type" : "boolean",
            "nullable" : true
          },
          "charset" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "registered" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "filename" : {
            "type" : "string",
            "nullable" : true
          },
          "formData" : {
            "type" : "boolean",
            "nullable" : true
          },
          "inline" : {
            "type" : "boolean",
            "nullable" : true
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ContextRecord" : {
        "type" : "object",
        "properties" : {
          "contextId" : {
            "type" : "string",
            "nullable" : true
          },
          "expiresAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "principalUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "queriedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ContextRecordSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "realTarget" : {
            "$ref" : "#/components/schemas/ContextRecord"
          },
          "updatedFieldNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "CountingActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "countingThreshold" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "CredentialEntry" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "credSource"
        },
        "nullable" : true,
        "properties" : {
          "credSource" : {
            "$ref" : "#/components/schemas/CredentialSourceEnumType"
          },
          "credentialId" : {
            "type" : "string",
            "nullable" : true
          },
          "firstInEligible" : {
            "type" : "boolean",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          }
        }
      },
      "CredentialEntryBleWave" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "finalRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "firstRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "firstRssiAtIntentElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "lostAtIntentElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "lostAtRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "maxRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "maxRssiAtIntentElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionFirstRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionFirstRssiAtElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionLostAtElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionLostAtRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionMaxRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionMaxRssiAtElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "credSource" : {
            "$ref" : "#/components/schemas/CredentialSourceEnumType"
          },
          "credentialId" : {
            "type" : "string",
            "nullable" : true
          },
          "firstInEligible" : {
            "type" : "boolean",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          }
        }
      },
      "CredentialQueryFilter" : {
        "type" : "object",
        "properties" : {
          "credTypeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "lastUsedAccessControlledDoorUuidFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "lastUsedAfterFilter" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedBeforeFilter" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuidFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "workflowStatusFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "CredentialReceivedEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "accessGrantOrRevocationUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "activeDoorLockdownState" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "activeLockdownPlanUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "appName" : {
              "type" : "string",
              "nullable" : true
            },
            "appOS" : {
              "type" : "string",
              "nullable" : true
            },
            "appVersion" : {
              "type" : "string",
              "nullable" : true
            },
            "authDecisionSource" : {
              "$ref" : "#/components/schemas/AuthDecisionSourceEnum"
            },
            "authDecisionUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "authWaitTimeMs" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "authenticationResult" : {
              "$ref" : "#/components/schemas/AccessControlAuthenticationResultEnumType"
            },
            "authorizationResult" : {
              "$ref" : "#/components/schemas/AccessControlAuthorizationResultEnumType"
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "credSource" : {
              "$ref" : "#/components/schemas/CredentialSourceEnumType"
            },
            "credentialHexValue" : {
              "type" : "string",
              "nullable" : true
            },
            "credentialUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "credentialValue" : {
              "type" : "string",
              "nullable" : true
            },
            "credentialValueLengthBits" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "credentials" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CredentialEntry"
              },
              "nullable" : true
            },
            "deviceModel" : {
              "type" : "string",
              "nullable" : true
            },
            "managedCredentialUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "satisfiesFirstInSettingsUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "userAgent" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "CredentialSourceEnumType" : {
        "type" : "string",
        "enum" : [ "UNKNOWN", "NFC", "BLE_WAVE", "BLE", "WIEGAND", "REMOTE", "REMOTE_ADMIN", "UNK_3P_OSDP", "APERIO_NFC", "APERIO_LF", "APERIO_KEYPAD", "KEYPAD_3P_WIEGAND", "KEYPAD_OSDP", "BLE_PROX" ]
      },
      "CroppedPermyriadRect" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CrossingCountsType" : {
        "type" : "object",
        "properties" : {
          "egressCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ingressCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "CustomFootageSeekPointType" : {
        "type" : "object",
        "properties" : {
          "color" : {
            "type" : "string",
            "description" : "Custom activity seekpoint color",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "maxLength" : 100,
            "nullable" : true
          },
          "displayOverlay" : {
            "type" : "boolean",
            "description" : "Whether to display this seekpoint as an overlay in Console",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Custom activity display name, maximum 32 characters",
            "maxLength" : 32,
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX MS timestamp",
            "minimum" : 0,
            "nullable" : true
          }
        },
        "required" : [ "name", "timestampMs" ]
      },
      "CustomImageElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "height" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "imageUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "width" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CustomTextElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "color" : {
              "type" : "string",
              "nullable" : true
            },
            "content" : {
              "type" : "string",
              "nullable" : true
            },
            "maxWidth" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "style" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CustomerShipmentType" : {
        "type" : "object",
        "properties" : {
          "ait-aitTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ait-carrierTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ait-depositorOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ait-destinationAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "ait-isIngramDistributorShipment" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ait-shipmentDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "ait-shippedItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ShippedItemType"
            },
            "nullable" : true
          },
          "interchangeControlNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "lastStateUpdateSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "rhombus-additionalEmails" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-chosenCarrierName" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-claimKeyToLicenseMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "rhombus-claimKeyToLicenseMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/SalesforceLicenseStartDateTimeAndEndDateTime"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "rhombus-customerEmails" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-customerName" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-partnerOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-purchaseOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-rmaReturnTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-rmaUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-rmaUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "rhombus-salesForceOpportunityId" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-zendeskTicketNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "shipmentCategory" : {
            "type" : "string",
            "enum" : [ "RMA", "PURCHASE_ORDER", "TRIAL", "UNKNOWN" ],
            "nullable" : true
          },
          "shipmentEmailState" : {
            "type" : "string",
            "enum" : [ "SHIPPING_CONFIRMATION_SUCCESS", "SHIPPING_CONFIRMATION_FAILURE", "SHIPPING_SHIPPED_SUCCESS", "SHIPPING_SHIPPED_FAILURE", "UNKNOWN" ],
            "nullable" : true
          },
          "shipmentState" : {
            "type" : "string",
            "enum" : [ "CREATED", "SHIPPED", "DELIVERED", "RETURN_REGISTERED", "RETURN_SENT", "RETURN_DELIVERED", "COMPLETE", "UNKNOWN" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_AcceptUsagePolicyRequest" : {
        "type" : "object"
      },
      "Customer_AcceptUsagePolicyResponse" : {
        "type" : "object"
      },
      "Customer_DeleteNotificationSnoozeSettingWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_DeleteNotificationSnoozeSettingWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_GetCurrentPartnerUserWSRequest" : {
        "type" : "object"
      },
      "Customer_GetCurrentPartnerUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsType"
          },
          "notificationSettingsV2" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsV2"
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "Customer_GetCurrentRhombusKeyUserWSRequest" : {
        "type" : "object"
      },
      "Customer_GetCurrentRhombusKeyUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "orgDetails" : {
            "$ref" : "#/components/schemas/User_RhombusKeyOrgDetailsType"
          },
          "rhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          },
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "Customer_GetCurrentUserConsoleOrgsForContextSwitchWSRequest" : {
        "type" : "object"
      },
      "Customer_GetCurrentUserConsoleOrgsForContextSwitchWSResponse" : {
        "type" : "object",
        "properties" : {
          "orgs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Customer_SelectableOrgForContextSwitch"
            },
            "nullable" : true
          }
        }
      },
      "Customer_GetCurrentUserRhombusKeyOrgsForContextSwitchWSRequest" : {
        "type" : "object"
      },
      "Customer_GetCurrentUserRhombusKeyOrgsForContextSwitchWSResponse" : {
        "type" : "object",
        "properties" : {
          "orgs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Customer_SelectableOrgForContextSwitch"
            },
            "nullable" : true
          }
        }
      },
      "Customer_GetCurrentUserSessionsWSRequest" : {
        "type" : "object"
      },
      "Customer_GetCurrentUserSessionsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sessions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SessionInfoWSType"
            },
            "nullable" : true
          }
        }
      },
      "Customer_GetCurrentUserWSRequest" : {
        "type" : "object"
      },
      "Customer_GetCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "customizations" : {
            "$ref" : "#/components/schemas/UserCustomizationsType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/UserNotificationSettingsV3Type"
          },
          "notificationSettingsV2" : {
            "$ref" : "#/components/schemas/UserNotificationSettingsV4Type"
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "Customer_GetDashboardStatusWSResponse" : {
        "type" : "object",
        "properties" : {
          "dashboardStatus" : {
            "$ref" : "#/components/schemas/DashboardStatus"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_GetDashboardstatusWSRequest" : {
        "type" : "object"
      },
      "Customer_GetRhombusKeyConfigForCurrentUserWSRequest" : {
        "type" : "object"
      },
      "Customer_GetRhombusKeyConfigForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "userRhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          }
        }
      },
      "Customer_GetUserSnoozedNotificationSettingsWSRequest" : {
        "type" : "object"
      },
      "Customer_GetUserSnoozedNotificationSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "snoozedForAllNotificationsIntervals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledIntervalType"
            },
            "nullable" : true
          },
          "snoozedForComponentCompositesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "snoozedForDevicesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "snoozedForLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Customer_LogoutAllOtherCurrentUserSessionsRequest" : {
        "type" : "object"
      },
      "Customer_LogoutAllOtherCurrentUserSessionsResponse" : {
        "type" : "object"
      },
      "Customer_SelectableOrgForContextSwitch" : {
        "type" : "object",
        "properties" : {
          "companyThumbnailLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusKeyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "userName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_SetFlagWSRequest" : {
        "type" : "object",
        "properties" : {
          "flagName" : {
            "type" : "string",
            "nullable" : true
          },
          "flagValue" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_SetFlagWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_SnoozeAllNotificationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Customer_SnoozeAllNotificationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_SnoozeNotificationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentCompositeUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Customer_SnoozeNotificationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateCurrentPartnerWSRequest" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsType"
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateCurrentPartnerWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "dashboardCustomizations" : {
            "$ref" : "#/components/schemas/DashboardCustomizations"
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationIntervalsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateDashboardCustomizationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "fullCamera" : {
            "type" : "string",
            "nullable" : true
          },
          "fullCameraUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "halfCamera" : {
            "type" : "string",
            "nullable" : true
          },
          "halfCameraUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "layout" : {
            "type" : "string",
            "nullable" : true
          },
          "layoutUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rememberedLocation" : {
            "type" : "string",
            "nullable" : true
          },
          "rememberedLocationUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "report" : {
            "type" : "string",
            "nullable" : true
          },
          "reportUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "videoWall" : {
            "type" : "string",
            "nullable" : true
          },
          "videoWallUpdated" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateDashboardCustomizationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateFrontendCustomizationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "customizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Customer_UpdateFrontendCustomizationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateRhombusKeyPreferencesForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "favoriteAccessControlledDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "favoriteAccessControlledDoorUuidsUpdated" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateRhombusKeyPreferencesForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "userRhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          }
        }
      },
      "DailyFirstInReset" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "minuteOfDay" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/FirstInResetEnum"
          }
        }
      },
      "DashboardCustomizations" : {
        "type" : "object",
        "properties" : {
          "fullCamera" : {
            "type" : "string",
            "nullable" : true
          },
          "halfCamera" : {
            "type" : "string",
            "nullable" : true
          },
          "layout" : {
            "type" : "string",
            "nullable" : true
          },
          "rememberedLocation" : {
            "type" : "string",
            "nullable" : true
          },
          "report" : {
            "type" : "string",
            "nullable" : true
          },
          "videoWall" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DashboardStatus" : {
        "type" : "object",
        "properties" : {
          "camerasDown" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "camerasDownByLocation" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "camerasUp" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatusIndicator" : {
            "type" : "string",
            "enum" : [ "GREEN", "YELLOW", "RED" ],
            "nullable" : true
          },
          "healthStatusMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationCameraStatus" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "totalCameras" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalClimateSensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalDoorSensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalLocations" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalProximitySensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "DateRangeFilter" : {
        "type" : "object",
        "properties" : {
          "localEndDateRangeEnd" : {
            "type" : "string",
            "description" : "End of the date range to filter local end date. This date is inclusive.",
            "nullable" : true
          },
          "localEndDateRangeStart" : {
            "type" : "string",
            "description" : "Start of the date range to filter local end date. This date is inclusive.",
            "nullable" : true
          },
          "localStartDateRangeEnd" : {
            "type" : "string",
            "description" : "End of the date range to filter local start date. This date is inclusive.",
            "nullable" : true
          },
          "localStartDateRangeStart" : {
            "type" : "string",
            "description" : "Start of the date range to filter local start date. This date is inclusive.",
            "nullable" : true
          }
        }
      },
      "DeleteSharedLiveVideoStreamForDeviceResponse" : {
        "type" : "object"
      },
      "Developer_CreateEventListenerWSRequest" : {
        "type" : "object",
        "properties" : {
          "eventListner" : {
            "$ref" : "#/components/schemas/EventListenerType"
          }
        }
      },
      "Developer_CreateEventListenerWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventListenerUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Developer_DeleteEventListenerWSRequest" : {
        "type" : "object",
        "properties" : {
          "eventListenerUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Developer_DeleteEventListenerWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Developer_GetAllEventListenersWSRequest" : {
        "type" : "object"
      },
      "Developer_GetAllEventListenersWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventListeners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventListenerType"
            },
            "nullable" : true
          }
        }
      },
      "Developer_GetEventListenersForDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Developer_GetEventListenersForDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventListeners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventListenerType"
            },
            "nullable" : true
          }
        }
      },
      "DeviceActivityRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activityEvent" : {
              "$ref" : "#/components/schemas/SimpleDeviceActivityEventType"
            },
            "componentCompositeUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "componentUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "deviceLabels" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "deviceUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "locationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "DeviceAssignableLicenseGroupStats" : {
        "type" : "object",
        "properties" : {
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceLicenseFamilyStats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceLicenseFamilyStats"
            },
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "DeviceCatalogItem" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cloudArchiveDays" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "deviceType" : {
              "$ref" : "#/components/schemas/DeviceTypeEnum"
            },
            "licenseFamily" : {
              "type" : "string",
              "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
              "nullable" : true
            },
            "licenseType" : {
              "$ref" : "#/components/schemas/License"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "DeviceEventRecordType" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "componentCompositeUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "eventUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DeviceFacet" : {
        "type" : "string",
        "format" : "DeviceFacet",
        "description" : "facet information for media",
        "enum" : [ "", "v0", "v1", "v2", "v3", "a0", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14", "v15", "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28", "v29", "v30", "v31", "v32", "v33", "v34", "v35", "v36", "v37", "v38", "v39", "v40", "v41", "v42", "v43", "v44", "v45", "v46", "v47", "v48", "v49", "v50", "v51", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "a10", "a11", "a12", "a13", "a14", "a15", "a16", "a17", "a18", "a19", "a20", "a21", "a22", "a23", "a24", "a25", "a26", "a27", "a28", "a29", "a30", "a31", "a32", "a33", "a34", "a35", "a36", "a37", "a38", "a39", "a40", "a41", "a42", "a43", "a44", "a45", "a46", "a47", "a48", "a49", "a50", "a51" ],
        "example" : "v0, a0"
      },
      "DeviceFeatureEnum" : {
        "type" : "string",
        "enum" : [ "COLOR_SEARCH", "FACE_RECOGNITION", "LICENSE_PLATE_RECOGNITION", "PEOPLE_COUNTING", "PPE_DETECTION", "UNUSUAL_BEHAVIOR_DETECTION", "VEHICLE_COUNTING", "CAMERA_ENTERPRISE_CLOUD_ARCHIVING", "TIMELAPSE", "VISUAL_TAMPER", "AUDIO_AI_ANALYTICS", "AUDIO_ENTERPRISE_CLOUD_ARCHIVING", "AUDIO_SPEAKER_ENABLED", "BADGE_READER_ENTERPRISE_CLOUD_ARCHIVING", "OBJECT_SEARCH", "UNKNOWN" ]
      },
      "DeviceHealthStatusDetailsEnum" : {
        "type" : "string",
        "enum" : [ "DISCONNECTED", "FIRMWARE_BEHIND", "NOT_RECORDING", "MALFUNCTIONING_MODULES", "CALIBRATING", "DELAYED", "NONE" ]
      },
      "DeviceIntegrationSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DeviceIntegrationType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "deviceSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/DeviceIntegrationSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DeviceLicenseFamilyStats" : {
        "type" : "object",
        "properties" : {
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceLicenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "DeviceLicenseType" : {
        "type" : "object",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LicenseFeature"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "licenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "licenseType" : {
            "$ref" : "#/components/schemas/License"
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DeviceOrientationEnum" : {
        "type" : "string",
        "enum" : [ "CEILING", "FLOOR", "WALL", "WALL_CROOKED", "INDETERMINATE" ]
      },
      "DevicePhysicalPortConfigType" : {
        "type" : "object",
        "properties" : {
          "boardMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BoardPhysicalPortConfigType"
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DeviceSchedule" : {
        "type" : "object",
        "properties" : {
          "invertSchedule" : {
            "type" : "boolean",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "unscheduledMessage" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DeviceStatusEnum" : {
        "type" : "string",
        "enum" : [ "RED", "ORANGE", "YELLOW", "GREEN" ]
      },
      "DeviceTargetScope" : {
        "type" : "string",
        "enum" : [ "ORG", "LOCATION", "DEVICE" ]
      },
      "DeviceTypeEnum" : {
        "type" : "string",
        "enum" : [ "BLE_TRACKER", "CAMERA", "DOOR_SENSOR", "ENVIRONMENTAL_SENSOR", "OCCUPANCY_SENSOR", "AUDIO_GATEWAY", "EXECUTABLE", "BADGE_READER", "DOOR_CONTROLLER", "BLE_BUTTON", "IO_BOARD", "ENVIRONMENTAL_GATEWAY", "NVR", "UNKNOWN" ]
      },
      "DeviceTypeV2" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "hardwareId" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DeviceVideoSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update selective video settings",
        "properties" : {
          "alert_rate_limit_human_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "alert_rate_limit_motion_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "alert_rate_limit_vehicle_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "ir_double_tap" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ir_filter_mode" : {
            "type" : "string",
            "enum" : [ "ON", "OFF", "AUTO" ],
            "nullable" : true
          },
          "ir_leds_mode" : {
            "type" : "string",
            "enum" : [ "ON", "OFF", "AUTO" ],
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Deviceconfig_GetConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_GetFacetedUserConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalReadableFacetedUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_UpdateFacetedUserConfigWSRequest" : {
        "type" : "object",
        "description" : "Add which settings need to be updated",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalUpdateableFacetedUserConfig"
          }
        }
      },
      "Deviceconfig_settings_ExternalAudioSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Audio settings",
        "properties" : {
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalDeviceSettingsSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "vlan_ip_v4_address" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalDoorControllerSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Door Controller settings",
        "properties" : {
          "autocomponentize_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "autoregister_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "flip_display_orientation" : {
            "type" : "boolean",
            "nullable" : true
          },
          "pressure_switch_tamper_normally_open" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_distance_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableAudioSettings" : {
        "type" : "object",
        "properties" : {
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_analysis_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableButtonSettings" : {
        "type" : "object",
        "properties" : {
          "button_emergency_onsite_contact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "button_test_mode_enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableDeviceSettings" : {
        "type" : "object",
        "properties" : {
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_days" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cloud_archive_upload_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "cloud_archive_upload_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_upload_schedule_uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_event_duration_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "vlan_ip_v4_address" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableDeviceVideoSettings" : {
        "type" : "object",
        "properties" : {
          "alert_rate_limit_human_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "alert_rate_limit_motion_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "alert_rate_limit_vehicle_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "ir_double_tap" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ir_filter_mode" : {
            "type" : "string",
            "enum" : [ "ON", "OFF", "AUTO" ],
            "nullable" : true
          },
          "ir_leds_mode" : {
            "type" : "string",
            "enum" : [ "ON", "OFF", "AUTO" ],
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableDoorControllerSettings" : {
        "type" : "object",
        "properties" : {
          "autocomponentize_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "autoregister_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "flip_display_orientation" : {
            "type" : "boolean",
            "nullable" : true
          },
          "pressure_switch_tamper_normally_open" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_distance_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableVideoSettings" : {
        "type" : "object",
        "properties" : {
          "ai_dewarp_config" : {
            "$ref" : "#/components/schemas/CameraAiDewarpConfigType"
          },
          "behavior_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "blocked_debounce_time_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "blocked_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "color_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "con_human_filter" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "con_vehicle_filter" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cross_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cross_counting_settings" : {
            "$ref" : "#/components/schemas/CameraCrossCountingSettingsType"
          },
          "dewarpMode" : {
            "type" : "string",
            "enum" : [ "NO_TRANSFORM", "NORMAL", "PANORAMA", "SUB_REGION", "VERTICAL_PANORAMA", "TRANSVERSE_MERCATOR", "MERCATOR", "EQUIRECTANGULAR" ],
            "nullable" : true
          },
          "disabled_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "disabled_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabled_schedule_uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "engagement_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "face_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "face_counting_nonunique" : {
            "type" : "boolean",
            "nullable" : true
          },
          "face_id_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_match_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_recognition" : {
            "type" : "boolean",
            "nullable" : true
          },
          "fisheye_display_mode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "floorplan_homography" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "hdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "high_res_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering_settings" : {
            "$ref" : "#/components/schemas/CameraHumanLoiteringSettingsType"
          },
          "img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "licenseplate_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lpr_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "motion_grid_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motion_grid_window_sec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "motion_lightweight_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motion_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "motor_config" : {
            "$ref" : "#/components/schemas/CameraMotorConfigType"
          },
          "mounting_direction" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "new_motion_feature_flag" : {
            "type" : "boolean",
            "nullable" : true
          },
          "night_exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "night_sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "obj_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "object_search" : {
            "type" : "boolean",
            "nullable" : true
          },
          "people_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "person_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pose_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ppe_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "privacy_window_polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "privacy_windows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PermyriadRect"
            },
            "nullable" : true
          },
          "ptz_config" : {
            "$ref" : "#/components/schemas/CameraPTZConfigType"
          },
          "region_for_occupancy" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest_groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterestGroup"
            },
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "segment_max_bytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_interval_secs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "target_ai_fps" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tile_views" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "timelapse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "upload_all_detections" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_onboard_ai" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_pilot_face_id" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vehicle_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "video_persist_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "visual_tamper_config" : {
            "$ref" : "#/components/schemas/CameraVisualTamperConfigType"
          },
          "wdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_strength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_bitrate_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_quality" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalVideoResolution" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalVideoSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Video Settings",
        "properties" : {
          "blocked_debounce_time_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "blocked_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "dewarpMode" : {
            "type" : "string",
            "enum" : [ "NO_TRANSFORM", "NORMAL", "PANORAMA", "SUB_REGION", "VERTICAL_PANORAMA", "TRANSVERSE_MERCATOR", "MERCATOR", "EQUIRECTANGULAR" ],
            "nullable" : true
          },
          "disabled_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "disabled_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabled_schedule_uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "fisheye_display_mode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "floorplan_homography" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "hdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "high_res_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering_settings" : {
            "$ref" : "#/components/schemas/CameraHumanLoiteringSettingsType"
          },
          "img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "motor_config" : {
            "$ref" : "#/components/schemas/CameraMotorConfigType"
          },
          "mounting_direction" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "night_exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "night_sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "object_search" : {
            "type" : "boolean",
            "nullable" : true
          },
          "privacy_window_polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "privacy_windows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PermyriadRect"
            },
            "nullable" : true
          },
          "ptz_config" : {
            "$ref" : "#/components/schemas/CameraPTZConfigType"
          },
          "region_for_occupancy" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest_groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterestGroup"
            },
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "segment_max_bytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_interval_secs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "tile_views" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "upload_all_detections" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "video_persist_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_strength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_bitrate_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_IntRange" : {
        "type" : "object",
        "properties" : {
          "max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_VideoConfigurationDefault" : {
        "type" : "object",
        "properties" : {
          "humanDetection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "segmentMaxBytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorGainMax" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutterTimeMin" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "vehicleDetection" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_VideoConfigurationOption" : {
        "type" : "object",
        "properties" : {
          "maxBitrateRange" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_IntRange"
          },
          "maxZoomPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "wdrRange" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_IntRange"
          }
        }
      },
      "Deviceconfig_userconfig_ExternalReadableFacetedUserConfig" : {
        "type" : "object",
        "properties" : {
          "audioFacetSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableAudioSettings"
            },
            "nullable" : true
          },
          "buttonSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableButtonSettings"
          },
          "climateSettings" : {
            "$ref" : "#/components/schemas/ClimateSettings"
          },
          "deviceSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableDeviceSettings"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceVideoSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableDeviceVideoSettings"
          },
          "doorControllerSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableDoorControllerSettings"
          },
          "doorReaderSettings" : {
            "$ref" : "#/components/schemas/DoorReaderSettings"
          },
          "doorSensorSettings" : {
            "$ref" : "#/components/schemas/DoorSensorSettings"
          },
          "environmentalGatewaySettings" : {
            "$ref" : "#/components/schemas/EnvironmentalGatewaySettings"
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "tamperSettings" : {
            "$ref" : "#/components/schemas/TamperSettings"
          },
          "thirdPartyCameraSettings" : {
            "$ref" : "#/components/schemas/ThirdPartyCameraSettings"
          },
          "videoDoorbellSettings" : {
            "$ref" : "#/components/schemas/VideoDoorbellSettings"
          },
          "videoFacetSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableVideoSettings"
            },
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_ExternalUpdateableFacetedUserConfig" : {
        "type" : "object",
        "description" : "Select and add settings to be updated",
        "properties" : {
          "audioFacetSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalAudioSettingsSelectiveUpdate"
            },
            "description" : "Update Audio settings",
            "nullable" : true
          },
          "buttonSettings" : {
            "$ref" : "#/components/schemas/ButtonSettingsSelectiveUpdate"
          },
          "climateSettings" : {
            "$ref" : "#/components/schemas/ClimateSettingsSelectiveUpdate"
          },
          "deviceSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalDeviceSettingsSelectiveUpdate"
          },
          "deviceUuid" : {
            "type" : "string",
            "description" : "Add device UUID to update",
            "nullable" : true
          },
          "deviceVideoSettings" : {
            "$ref" : "#/components/schemas/DeviceVideoSettingsSelectiveUpdate"
          },
          "doorControllerSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalDoorControllerSettingsSelectiveUpdate"
          },
          "doorReaderSettings" : {
            "$ref" : "#/components/schemas/DoorReaderSettingsSelectiveUpdate"
          },
          "doorSensorSettings" : {
            "$ref" : "#/components/schemas/DoorSensorSettingsSelectiveUpdate"
          },
          "environmentalGatewaySettings" : {
            "$ref" : "#/components/schemas/EnvironmentalGatewaySettingsSelectiveUpdate"
          },
          "tamperSettings" : {
            "$ref" : "#/components/schemas/TamperSettingsSelectiveUpdate"
          },
          "videoDoorbellSettings" : {
            "$ref" : "#/components/schemas/VideoDoorbellSettingsSelectiveUpdate"
          },
          "videoFacetSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoSettingsSelectiveUpdate"
            },
            "description" : "Update Video Settings",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalReadableAudioVideoUserConfig" : {
        "type" : "object",
        "properties" : {
          "ai_dewarp_config" : {
            "$ref" : "#/components/schemas/CameraAiDewarpConfigType"
          },
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_analysis_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "behavior_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "blocked_debounce_time_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "blocked_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "cloud_archive_days" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cloud_archive_upload_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "cloud_archive_upload_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_upload_schedule_uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "color_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "con_human_filter" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "con_vehicle_filter" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cross_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cross_counting_settings" : {
            "$ref" : "#/components/schemas/CameraCrossCountingSettingsType"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "dewarpMode" : {
            "type" : "string",
            "enum" : [ "NO_TRANSFORM", "NORMAL", "PANORAMA", "SUB_REGION", "VERTICAL_PANORAMA", "TRANSVERSE_MERCATOR", "MERCATOR", "EQUIRECTANGULAR" ],
            "nullable" : true
          },
          "disabled_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "disabled_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabled_schedule_uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "engagement_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "face_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "face_counting_nonunique" : {
            "type" : "boolean",
            "nullable" : true
          },
          "face_id_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_match_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_recognition" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "fisheye_display_mode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "floorplan_homography" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "high_res_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering_settings" : {
            "$ref" : "#/components/schemas/CameraHumanLoiteringSettingsType"
          },
          "img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "licenseplate_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lpr_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "max_event_duration_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "motion_grid_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motion_grid_window_sec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "motion_lightweight_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motion_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "motor_config" : {
            "$ref" : "#/components/schemas/CameraMotorConfigType"
          },
          "mounting_direction" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "new_motion_feature_flag" : {
            "type" : "boolean",
            "nullable" : true
          },
          "night_exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "night_sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "obj_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "object_search" : {
            "type" : "boolean",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "people_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "person_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pose_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ppe_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "privacy_window_polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "privacy_windows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PermyriadRect"
            },
            "nullable" : true
          },
          "ptz_config" : {
            "$ref" : "#/components/schemas/CameraPTZConfigType"
          },
          "region_for_occupancy" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest_groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterestGroup"
            },
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "segment_max_bytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_interval_secs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "target_ai_fps" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "tile_views" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "timelapse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "upload_all_detections" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_onboard_ai" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_pilot_face_id" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vehicle_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "video_persist_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "visual_tamper_config" : {
            "$ref" : "#/components/schemas/CameraVisualTamperConfigType"
          },
          "vlan_ip_v4_address" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_strength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_bitrate_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_quality" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalReadableDoorControllerUserConfig" : {
        "type" : "object",
        "properties" : {
          "autocomponentize_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "autoregister_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_days" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cloud_archive_upload_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "cloud_archive_upload_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_upload_schedule_uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "flip_display_orientation" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_event_duration_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pressure_switch_tamper_normally_open" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_distance_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "vlan_ip_v4_address" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalUpdateableAudioVideoUserConfig" : {
        "type" : "object",
        "properties" : {
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "blocked_debounce_time_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "blocked_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "dewarpMode" : {
            "type" : "string",
            "enum" : [ "NO_TRANSFORM", "NORMAL", "PANORAMA", "SUB_REGION", "VERTICAL_PANORAMA", "TRANSVERSE_MERCATOR", "MERCATOR", "EQUIRECTANGULAR" ],
            "nullable" : true
          },
          "disabled_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "disabled_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabled_schedule_uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "fisheye_display_mode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "floorplan_homography" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "high_res_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering_settings" : {
            "$ref" : "#/components/schemas/CameraHumanLoiteringSettingsType"
          },
          "img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "motor_config" : {
            "$ref" : "#/components/schemas/CameraMotorConfigType"
          },
          "mounting_direction" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "night_exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "night_sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "object_search" : {
            "type" : "boolean",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "privacy_window_polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "privacy_windows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PermyriadRect"
            },
            "nullable" : true
          },
          "ptz_config" : {
            "$ref" : "#/components/schemas/CameraPTZConfigType"
          },
          "region_for_occupancy" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest_groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterestGroup"
            },
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "segment_max_bytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_interval_secs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "tile_views" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "upload_all_detections" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "video_persist_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vlan_ip_v4_address" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_strength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_bitrate_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalUpdateableButtonUserConfig" : {
        "type" : "object",
        "properties" : {
          "button_emergency_onsite_contact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "button_test_mode_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalUpdateableDoorControllerUserConfig" : {
        "type" : "object",
        "properties" : {
          "autocomponentize_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "autoregister_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "flip_display_orientation" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pressure_switch_tamper_normally_open" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_distance_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "vlan_ip_v4_address" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "DewarpedView" : {
        "type" : "object",
        "properties" : {
          "aspectRatio" : {
            "$ref" : "#/components/schemas/AspectRatio"
          },
          "pitchDegrees" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "rollDegrees" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "verticalFieldOfViewDegrees" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "yawDegrees" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "DiagnosticEventType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "type" : "string",
            "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
            "nullable" : true
          },
          "apMac" : {
            "type" : "string",
            "nullable" : true
          },
          "asi" : {
            "type" : "string",
            "nullable" : true
          },
          "componentCompositeUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "reportingDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "DiagnosticRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "deviceLabels" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "deviceUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "diagnosticEvent" : {
              "$ref" : "#/components/schemas/SimpleDiagnosticEventType"
            },
            "locationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "DiceSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DiceType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DiscoveredThirdPartyCameraType" : {
        "type" : "object",
        "description" : "The imported (discovered) third-party camera. This field is populated only if the RTSP URL specified in the import resulted in creation of a new discovery or an addition of a RTSP URL to an existing discovery. It is null, if the RTSP URL already existed or if the import was not successful.",
        "properties" : {
          "codec" : {
            "type" : "string",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "lastVisibleMs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "macAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "manufacturer" : {
            "type" : "string",
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "onvifPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "onvifProfileToken" : {
            "type" : "string",
            "nullable" : true
          },
          "onvifUsername" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspEndpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RtspEndpoint"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorAjarActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "doorAjarThresholdSec" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "DoorAuthFirstInStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "acuEventUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/FirstInFirmwareStatus"
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "settingsUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "source" : {
              "$ref" : "#/components/schemas/FirstInSourceEnum"
            },
            "stateChangedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorEventType" : {
        "type" : "object",
        "properties" : {
          "baseStationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "batteryPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bleDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "bleRssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closeBaseStations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          },
          "stateChanged" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorFirstInStateChangeEventReference" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "doorUuidToEventUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "newState" : {
            "$ref" : "#/components/schemas/FirstInFirmwareStatus"
          },
          "originatingDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originatingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "source" : {
            "$ref" : "#/components/schemas/FirstInSourceEnum"
          },
          "stateChangedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorLocationLockdownStateEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatedLockdownPlan" : {
              "$ref" : "#/components/schemas/LockdownPlanReference"
            },
            "activeLockdownPlan" : {
              "$ref" : "#/components/schemas/LockdownPlanReference"
            },
            "acuEventUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "deactivatedLockdownPlan" : {
              "$ref" : "#/components/schemas/LockdownPlanReference"
            },
            "followingTestPlan" : {
              "type" : "boolean",
              "nullable" : true
            },
            "locationLockdownStateChangedAtMillis" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "state" : {
              "$ref" : "#/components/schemas/LocationLockdownStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorLockdownStateEnumType" : {
        "type" : "string",
        "enum" : [ "LOCKED_DOWN", "ACCESS_CONTROLLED", "UNLOCKED", "UNKNOWN" ]
      },
      "DoorLockdownStateEventReference" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "activatedLockdownPlan" : {
            "$ref" : "#/components/schemas/LockdownPlanReference"
          },
          "activeLockdownPlan" : {
            "$ref" : "#/components/schemas/LockdownPlanReference"
          },
          "deactivatedLockdownPlan" : {
            "$ref" : "#/components/schemas/LockdownPlanReference"
          },
          "doorEventUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorPolicyType" : {
        "type" : "object",
        "properties" : {
          "defaultAjarThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorPositionIndicatorEnumType" : {
        "type" : "string",
        "enum" : [ "integrated", "remote" ]
      },
      "DoorPositionIndicatorPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_INPUT", "GPIO_INPUT_SUPERVISED" ]
      },
      "DoorPositionIndicatorPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorPhysicalPortEnumType"
          },
          "supervisionConfiguration" : {
            "$ref" : "#/components/schemas/PortSupervisionConfigurationType"
          }
        }
      },
      "DoorPositionIndicatorShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/DoorPositionIndicatorStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "supervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorPositionIndicatorStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/DoorPositionIndicatorStateEnumType"
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorPositionIndicatorStateEnumType" : {
        "type" : "string",
        "enum" : [ "OPEN", "CLOSED", "AJAR", "FORCED_OPEN", "ERROR", "UNKNOWN" ]
      },
      "DoorReaderEnumType" : {
        "type" : "string",
        "enum" : [ "wiegand", "osdp", "rhombus_osdp", "aperio_wireless" ]
      },
      "DoorReaderSettings" : {
        "type" : "object",
        "properties" : {
          "dr_enable_audio_feedback" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tof_max_distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tof_min_distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tof_min_signal_over_noise" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "DoorReaderSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Door Reader settings",
        "properties" : {
          "dr_enable_audio_feedback" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tof_max_distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tof_min_distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tof_min_signal_over_noise" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "DoorReaderShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/DoorReaderStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorReaderStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/DoorReaderStateEnumType"
            },
            "reason" : {
              "$ref" : "#/components/schemas/DoorReaderStateChangeReasonEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorReaderStateChangeReasonEnumType" : {
        "type" : "string",
        "enum" : [ "FIRMWARE_UPGRADE", "FORCED_REBOOT", "UNKNOWN" ]
      },
      "DoorReaderStateEnumType" : {
        "type" : "string",
        "enum" : [ "CONNECTED", "DISCONNECTED", "UNKNOWN" ]
      },
      "DoorRelayEnumType" : {
        "type" : "string",
        "enum" : [ "integrated", "remote" ]
      },
      "DoorRelayPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_OUTPUT" ]
      },
      "DoorRelayPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/DoorRelayPhysicalPortEnumType"
          }
        }
      },
      "DoorRelayShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/DoorRelayStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorRelayStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/DoorRelayStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorRelayStateEnumType" : {
        "type" : "string",
        "enum" : [ "UNLOCKED", "LOCKED", "UNKNOWN" ]
      },
      "DoorScheduleExceptionType" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX timestamp in milliseconds when exception was created.",
            "nullable" : true,
            "readOnly" : true
          },
          "defaultState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "description" : {
            "type" : "string",
            "description" : "Exception description",
            "nullable" : true
          },
          "doorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "intervals" : {
            "type" : "array",
            "description" : "List of intervals each specifying door state during date range. List must contain at least one element",
            "items" : {
              "$ref" : "#/components/schemas/LocalInterval"
            },
            "nullable" : true
          },
          "localEndDate" : {
            "type" : "string",
            "description" : "Exception end date in 'yyyy-MM-dd' format. End date is inclusive.",
            "nullable" : true
          },
          "localStartDate" : {
            "type" : "string",
            "description" : "Exception start date in 'yyyy-MM-dd' format. Start date is inclusive.",
            "nullable" : true
          },
          "locationToDoorsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Mapping of location uuid to a list of door uuids, representing the doors assigned to each location. Map must contain at least one entry with at least one door.",
              "items" : {
                "type" : "string",
                "description" : "Mapping of location uuid to a list of door uuids, representing the doors assigned to each location. Map must contain at least one entry with at least one door.",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "description" : "Mapping of location uuid to a list of door uuids, representing the doors assigned to each location. Map must contain at least one entry with at least one door.",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "description" : "Location uuid",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Exception name",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX timestamp in milliseconds when exception was modified.",
            "nullable" : true,
            "readOnly" : true
          },
          "uuid" : {
            "type" : "string",
            "description" : "Exception uuid",
            "nullable" : true
          }
        },
        "required" : [ "intervals", "localEndDate", "localStartDate", "name" ]
      },
      "DoorScheduleFirstInStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "acuEventUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/FirstInFirmwareStatus"
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "settingsUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "source" : {
              "$ref" : "#/components/schemas/FirstInSourceEnum"
            },
            "stateChangedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "ajarThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "DoorSensorSettings" : {
        "type" : "object",
        "properties" : {
          "ajar_threshold_enabled" : {
            "type" : "boolean",
            "description" : "Option to Enabled or Disable the Ajar Threshold. Defaults to Disabled (False).",
            "nullable" : true
          },
          "ajar_threshold_sec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Threshold value for Door Sensor Ajar state. Defaults to 30s.",
            "nullable" : true
          }
        }
      },
      "DoorSensorSettingsSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "ajar_threshold_enabled" : {
            "type" : "boolean",
            "description" : "Option to Enabled or Disable the Ajar Threshold. Defaults to Disabled (False).",
            "nullable" : true
          },
          "ajar_threshold_sec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Threshold value for Door Sensor Ajar state. Defaults to 30s.",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "DoorStateChangeEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "source" : {
              "$ref" : "#/components/schemas/DoorStateSourceEnum"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorStateOverride" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "expireEarlyMode" : {
            "$ref" : "#/components/schemas/EarlyExpireModeEnum"
          },
          "expiresAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followFirstInRules" : {
            "type" : "boolean",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDelaySeconds" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ManualDoorStateChangeEnum"
          }
        }
      },
      "DoorStateShadow" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/DoorStateSourceEnum"
          },
          "state" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "stateUpdateEventTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorStateSourceEnum" : {
        "type" : "string",
        "enum" : [ "DEFAULT_STATE", "SCHEDULE", "SCHEDULE_EXCEPTION", "FIRST_IN", "DOOR_STATE_OVERRIDE", "LOCKDOWN", "PRIVACY", "UNKNOWN" ]
      },
      "DoorType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Door_GetDoorEventsForSensorWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "stateFilter" : {
            "type" : "string",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          }
        }
      },
      "Door_GetDoorEventsForSensorWSResponse" : {
        "type" : "object",
        "properties" : {
          "doorEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Door_GetMinimalDoorStatesWSRequest" : {
        "type" : "object"
      },
      "Door_GetMinimalDoorStatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "doorStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Door_MinimalDoorStateType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Door_MinimalDoorStateType" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closestBaseStation" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "health" : {
            "type" : "string",
            "enum" : [ "GREEN", "RED" ],
            "nullable" : true
          },
          "healthDetails" : {
            "type" : "string",
            "enum" : [ "FIRMWARE_BEHIND", "NO_HEARTBEAT", "NONE" ],
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          }
        }
      },
      "Door_UpdateDoorSensorDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Door_UpdateDoorSensorDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorbellEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_CreateRuleForDoorbellCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/Doorbellcamera_ExternalDoorbellCameraComponentRuleType"
          }
        }
      },
      "Doorbellcamera_CreateRuleForDoorbellCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_CreateSharedLiveVideoStreamWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioGatewayUuid" : {
            "type" : "string",
            "description" : "Null disables audio, otherwise set it to the doorbellCamera's uuid to use its own audio or to an associated AudioGateway's Uuid",
            "nullable" : true
          },
          "doorbellCameraUuid" : {
            "type" : "string",
            "description" : "DoorbellCamera facet uuid to get stream from",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Add a expiration date for accessing the stream in seconds",
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "description" : "If given a schedule uuid, will hide the stream during the schedule instead and show it otherwise",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "If not provided, will be named 'Unnamed'",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Add a password to allow access to your shared stream. If null or blank password is not set.",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "description" : "Uuid of a relative or absolute schedule",
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          },
          "vodEnabled" : {
            "type" : "boolean",
            "description" : "Enables recording of live footage to a VOD",
            "nullable" : true
          }
        },
        "required" : [ "doorbellCameraUuid", "streamType", "vodEnabled" ]
      },
      "Doorbellcamera_CreateSharedLiveVideoStreamWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveM3U8StreamUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreamUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreamUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_DeleteDoorbellCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "doorbellCameraUuid", "mummify" ]
      },
      "Doorbellcamera_DeleteDoorbellCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_DeleteRuleForDoorbellCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_DeleteRuleForDoorbellCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_DoorbellCameraOfflineLanStreamingInfo" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_ExternalDoorbellCameraComponentRuleType" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RuleActionType"
          },
          "doorbellCameraComponentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "doorbellCameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleFilters" : {
            "$ref" : "#/components/schemas/RuleFilterType"
          },
          "ruleName" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerActivity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "Doorbellcamera_FindComponentEventsForDoorbellCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "doorbellCameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_FindComponentEventsForDoorbellCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_FindComponentSeekPointsForDoorbellCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_FindComponentSeekPointsForDoorbellCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_FindSharedLiveVideoStreamsForWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_FindSharedLiveVideoStreamsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_SharedLiveVideoStreamWS"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalReadableAudioVideoUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraFullStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "fullState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraMediaUrisWSResponse" : {
        "type" : "object",
        "properties" : {
          "lanCheckUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveH264Uris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveMpdUris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveOpusUris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodM3u8UrisTemplates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodMpdUrisTemplates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveOpusUri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraMinimalStateListWSResponse" : {
        "type" : "object",
        "properties" : {
          "minimalStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MinimalObservableDeviceStateType"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraOfflineLanStreamingInfoWSRequest" : {
        "type" : "object"
      },
      "Doorbellcamera_GetDoorbellCameraOfflineLanStreamingInfoWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "info" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Doorbellcamera_DoorbellCameraOfflineLanStreamingInfo"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraRulesForOrgWSRequest" : {
        "type" : "object"
      },
      "Doorbellcamera_GetDoorbellCameraRulesForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "doorbellCameraUuidToRulesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Doorbellcamera_ExternalDoorbellCameraComponentRuleType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetRulesForDoorbellCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetRulesForDoorbellCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Doorbellcamera_ExternalDoorbellCameraComponentRuleType"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_RebootDoorbellCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        },
        "required" : [ "doorbellCameraUuid" ]
      },
      "Doorbellcamera_UpdateDoorbellCameraConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableAudioVideoUserConfig"
          }
        }
      },
      "Doorbellcamera_UpdateDoorbellCameraDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_CreateDoorControllerRuleWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Doorcontroller_CreateDoorControllerRuleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Doorcontroller_DeleteDoorControllerRuleWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DeleteDoorControllerRuleWSResponse" : {
        "type" : "object"
      },
      "Doorcontroller_DeleteDoorControllerWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "doorControllerUuid", "mummify" ]
      },
      "Doorcontroller_DeleteDoorControllerWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredAperioDoor" : {
        "type" : "object",
        "properties" : {
          "gatewayId" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredAperioGateway" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "nullable" : true
          },
          "protocolVersion" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredReaderType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredRhombusReaderType"
        }, {
          "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredThirdPartyReaderType"
        } ],
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "online" : {
            "type" : "boolean",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "RHOMBUS", "THIRD_PARTY" ],
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredRhombusReaderType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "serialNumber" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "online" : {
            "type" : "boolean",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "RHOMBUS", "THIRD_PARTY" ],
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredThirdPartyReaderType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "model" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "serialNumber" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "vendorCode" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "online" : {
            "type" : "boolean",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "RHOMBUS", "THIRD_PARTY" ],
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DoorControllerStateType" : {
        "type" : "object",
        "properties" : {
          "configUpdatedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "discoveredAperioDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredAperioDoor"
            },
            "nullable" : true
          },
          "discoveredAperioGateways" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredAperioGateway"
            },
            "nullable" : true
          },
          "discoveredReaders" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredReaderType"
            },
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "grantsUpdatedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "wanAddress" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalReadableDoorControllerUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerRuleWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerRuleWSResponse" : {
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Doorcontroller_GetDoorControllerRulesWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerRulesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleType"
            },
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerStateListWSRequest" : {
        "type" : "object"
      },
      "Doorcontroller_GetDoorControllerStateListWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "stateList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Doorcontroller_DoorControllerStateType"
            },
            "nullable" : true
          }
        }
      },
      "Doorcontroller_RegisterDiscoveredRhombusReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorControllerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_RegisterDiscoveredRhombusReaderWSResponse" : {
        "type" : "object"
      },
      "Doorcontroller_UpdateDoorControllerConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableDoorControllerUserConfig"
          }
        }
      },
      "Doorcontroller_UpdateDoorControllerDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_UpdateDoorControllerDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_UpdateDoorControllerRuleWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Doorcontroller_UpdateDoorControllerRuleWSResponse" : {
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "DropboxSettingsV2" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "accountEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DtcInfo" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "code" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "failing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hasFailed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "testCompleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DynamoPageRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "E50ClimateEventType" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "alertTriggerThresholds" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "alertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "carbonMonoSense" : {
            "$ref" : "#/components/schemas/COSensorType"
          },
          "clipMetaData" : {
            "$ref" : "#/components/schemas/ClipMetaDataType"
          },
          "co2Sense" : {
            "$ref" : "#/components/schemas/Co2SensorType"
          },
          "derivedValues" : {
            "$ref" : "#/components/schemas/E50DerivedValuesType"
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "formaSense" : {
            "$ref" : "#/components/schemas/FormaSensorType"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "leakProbe" : {
            "$ref" : "#/components/schemas/LeakProbeType"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pmSense" : {
            "$ref" : "#/components/schemas/PmSensorType"
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pressSense" : {
            "$ref" : "#/components/schemas/PressureSensorType"
          },
          "tempProbe" : {
            "$ref" : "#/components/schemas/TempProbeType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "E50DerivedValuesType" : {
        "type" : "object",
        "properties" : {
          "airQualityIndex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "airQualityIndexPollutant" : {
            "$ref" : "#/components/schemas/AirQualityIndexPollutantEnum"
          },
          "calibrating" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceOrientation" : {
            "$ref" : "#/components/schemas/DeviceOrientationEnum"
          },
          "falsePositiveConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "heatIndexRangeWarning" : {
            "$ref" : "#/components/schemas/HeatIndexRangeWarningEnum"
          },
          "indoorAirQuality" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "malfunctioningModules" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "smokeConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smokeThcConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smokeTobaccoConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vapeThcConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "EarlyExpireModeEnum" : {
        "type" : "string",
        "enum" : [ "SCHEDULED_CHANGE", "STEADY_STATE_CHANGE", "OFF" ]
      },
      "EmailSettings" : {
        "type" : "object",
        "properties" : {
          "emailAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Embedding" : {
        "type" : "object",
        "description" : "Returns the generated embedding or null if the embedding could not be generated. If image contains multiple faces, only the first generated embedding is returned.",
        "properties" : {
          "embeddingComparisonType" : {
            "type" : "string",
            "nullable" : true
          },
          "embeddingConfidence" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "embeddingEncodingType" : {
            "$ref" : "#/components/schemas/EmbeddingEncodingType"
          },
          "encodedEmbedding" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EmbeddingEncodingType" : {
        "type" : "string",
        "enum" : [ "Q_8_24", "IEEE_754" ]
      },
      "EmergencyContact" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EmergencyResponseContactsIntervalType" : {
        "type" : "object",
        "properties" : {
          "emergencyContactList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmergencyContact"
            },
            "nullable" : true
          },
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "EmergencyResponseContactsScheduleType" : {
        "type" : "object",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "emergencyContactList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmergencyContact"
            },
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Entity" : {
        "type" : "string",
        "enum" : [ "ALARM_MONITORING_LOCATION_SETTINGS", "ALARM_MONITORING_LICENSE", "DEVICE", "LOCATION", "POLICY", "POLICY_ALERT", "POLICY_ADDENDUM", "POLICY_PAUSE", "USER", "CAMERA_USER_CONFIG", "ORG", "USER_PERMISSION_GROUP", "PARTNER_PERMISSION_GROUP", "VIDEO_WALL", "SHARED_CLIPS", "SAVED_CLIPS", "SHARED_STREAMS", "SPLICED_CLIPS", "TIMELAPSE", "AUDIT_EVENTS", "DIAGNOSTIC_EVENTS", "CAMERA_STATE", "CLIMATE_STATE", "DOOR_STATE", "NVR_STATE", "OCCUPANCY_STATE", "PROXIMITY_STATE", "AUDIO_STATE", "CAMERA", "NVR", "DOOR_SENSOR", "CLIMATE_SENSOR", "PROXIMITY_SENSOR", "BOUNDING_BOX", "SEEK_POINT", "SENSOR_SEEK_POINT", "SCHEDULE", "FACE_EVENT", "DEVICE_SHADOW", "THREAT_CASE", "KEYPAD", "COMPONENT_DOOR_READER_SHADOW", "COMPONENT_DOOR_RELAY_SHADOW", "COMPONENT_DOOR_POSITION_INDICATOR_SHADOW", "COMPONENT_APERIO_GATEWAY_SHADOW", "COMPONENT_APERIO_DOOR_SHADOW", "COMPONENT_REQUEST_TO_EXIT_SHADOW", "COMPONENT_GENERIC_RELAY_SHADOW", "COMPONENT_GENERIC_INPUT_SHADOW", "COMPONENT_GENERIC_BUTTON_SHADOW", "ACCESS_CONTROLLED_DOOR_SHADOW", "ACCESS_CONTROLLED_DOOR", "COMPONENT_SEEKPOINT", "VEHICLE_EVENT", "DEVICE_INTEGRATION", "SHELLY_INTEGRATION", "THIRD_PARTY_CAMERA_DISCOVERY", "THIRD_PARTY_CAMERA_ASSIGNMENT", "THIRD_PARTY_CAMERA_CREDENTIAL", "CHATBOT_QUERY", "UNKNOWN" ]
      },
      "EnvironmentalGatewaySettings" : {
        "type" : "object",
        "properties" : {
          "data_measurement_interval_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "data_upload_interval_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "false_positive_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "leak_detection_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "leak_detector_present" : {
            "type" : "boolean",
            "nullable" : true
          },
          "moist_detection_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_thc_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_tobacco_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_alert_backoff_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "vape_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_thc_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "EnvironmentalGatewaySettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Environmental Sensor settings",
        "properties" : {
          "data_measurement_interval_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "data_upload_interval_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "false_positive_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "leak_detection_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "leak_detector_present" : {
            "type" : "boolean",
            "nullable" : true
          },
          "moist_detection_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_thc_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_tobacco_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "vape_alert_backoff_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "vape_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_thc_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "EnvironmentalGatewayShadowType" : {
        "type" : "object",
        "properties" : {
          "activeAlertTriggers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "apMac" : {
            "type" : "string",
            "nullable" : true
          },
          "carbonMonoSense" : {
            "$ref" : "#/components/schemas/COSensorType"
          },
          "co2Sense" : {
            "$ref" : "#/components/schemas/Co2SensorType"
          },
          "connected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "connectionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "connectionUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "derivedValues" : {
            "$ref" : "#/components/schemas/E50DerivedValuesType"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "disconnectTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "formaSense" : {
            "$ref" : "#/components/schemas/FormaSensorType"
          },
          "hardwareUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "internalWanAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "jumpHostUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "leakProbe" : {
            "$ref" : "#/components/schemas/LeakProbeType"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pmSense" : {
            "$ref" : "#/components/schemas/PmSensorType"
          },
          "pressSense" : {
            "$ref" : "#/components/schemas/PressureSensorType"
          },
          "prevConnected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "prevConnectedUpdateTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "stateUpdatedTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tempProbe" : {
            "$ref" : "#/components/schemas/TempProbeType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "wanAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "EnvoyCustomField" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyDelivery" : {
        "type" : "object",
        "properties" : {
          "carrier" : {
            "$ref" : "#/components/schemas/EnvoyDeliveryInfo"
          },
          "carrierInfo" : {
            "$ref" : "#/components/schemas/EnvoyDeliveryInfo"
          },
          "deliveryArea" : {
            "$ref" : "#/components/schemas/EnvoyDeliveryInfo"
          },
          "deliveryAreaInfo" : {
            "$ref" : "#/components/schemas/EnvoyDeliveryInfo"
          },
          "locationId" : {
            "type" : "string",
            "nullable" : true
          },
          "pickedUpAt" : {
            "type" : "string",
            "nullable" : true
          },
          "pickedUpBy" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "receivedTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "recipient" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyDeliveryInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyExpectedGuest" : {
        "type" : "object",
        "properties" : {
          "expectedArrivalAt" : {
            "type" : "string",
            "nullable" : true
          },
          "expectedArrivalTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "host" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "invitee" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "locationId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyGuest" : {
        "type" : "object",
        "properties" : {
          "agreementsStatus" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "fullName" : {
            "type" : "string",
            "nullable" : true
          },
          "host" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "locationId" : {
            "type" : "string",
            "nullable" : true
          },
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "signedInAt" : {
            "type" : "string",
            "nullable" : true
          },
          "signedInTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "signedOutAt" : {
            "type" : "string",
            "nullable" : true
          },
          "signedOutTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "EnvoyInvite" : {
        "type" : "object",
        "properties" : {
          "customFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyCustomField"
            },
            "nullable" : true
          },
          "expectedArrivalAt" : {
            "type" : "string",
            "nullable" : true
          },
          "expectedDepartureAt" : {
            "type" : "string",
            "nullable" : true
          },
          "flowId" : {
            "type" : "string",
            "nullable" : true
          },
          "hostEmployeeId" : {
            "type" : "string",
            "nullable" : true
          },
          "inviteId" : {
            "type" : "string",
            "nullable" : true
          },
          "invitee" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "locationId" : {
            "type" : "string",
            "nullable" : true
          },
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "sendEmailToInvitee" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "EnvoyLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyLocationInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyPersonInfo" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "locationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoySettings" : {
        "type" : "object",
        "properties" : {
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "envoyIntegrationInstalled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EnvoyLocationInfoType"
            },
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "EnvoyType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "envoyIntegrationInstalled" : {
              "type" : "boolean",
              "nullable" : true
            },
            "envoyUserSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/EnvoyUserSettings"
              },
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "locationInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/EnvoyLocationInfoType"
              },
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyUserSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "guestsEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "packagesEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "EpochSecondsProvisioner" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/StaticEpochSecondsProvisioner"
        } ],
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "Ethernettester_GetEthernetTesterConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Ethernettester_GetEthernetTesterConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "configJson" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EventCount" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "number",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EventListenerType" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clientCertificate" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "clientKey" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "hostname" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "trustedCertificate" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "uri" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EventOriginatorEnum" : {
        "type" : "string",
        "enum" : [ "USER", "SUPPORT_AUTHORITY", "API_TOKEN", "RULE", "COMPONENT_COMPOSITE_EVENT", "UNKNOWN" ]
      },
      "EventOriginatorEnum_Minimal" : {
        "type" : "string",
        "enum" : [ "USER", "SUPPORT_AUTHORITY", "API_TOKEN", "RULE", "COMPONENT_COMPOSITE_EVENT", "UNKNOWN" ]
      },
      "Event_CreateSharedClipGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "plaintextPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event_RuuidWrapper"
            },
            "nullable" : true
          }
        }
      },
      "Event_CreateSharedClipGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DeleteAlertMonitoringThreatCaseByStatusWSRequest" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/ThreatCaseStatus"
          }
        }
      },
      "Event_DeleteAlertMonitoringThreatCaseByStatusWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DeleteAlertMonitoringThreatCaseWSRequest" : {
        "type" : "object",
        "properties" : {
          "threatCaseUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Event_DeleteAlertMonitoringThreatCaseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DeleteSavedClipWSRequest" : {
        "type" : "object",
        "properties" : {
          "savedClipUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DeleteSavedClipWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DeleteSharedClipGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DeleteSharedClipGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DismissAllPolicyAlertsForDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Event_DismissAllPolicyAlertsForDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DismissAllPolicyAlertsWSRequest" : {
        "type" : "object"
      },
      "Event_DismissAllPolicyAlertsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DismissPolicyAlertWSRequest" : {
        "type" : "object",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DismissPolicyAlertWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DismissPolicyAlertsWSRequest" : {
        "type" : "object",
        "properties" : {
          "alertUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Event_DismissPolicyAlertsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_FrontendCell" : {
        "type" : "object",
        "description" : "List of motion grid cells to include in the search",
        "properties" : {
          "col" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "row" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Event_GetAlertMonitoringThreatCaseWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetAlertMonitoringThreatCaseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "threatCase" : {
            "$ref" : "#/components/schemas/AlertMonitoringThreatCaseType"
          }
        }
      },
      "Event_GetAlertMonitoringThreatCasesWSRequest" : {
        "type" : "object",
        "properties" : {
          "afterTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "beforeTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "mostRecent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "statusFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ThreatCaseStatus"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetAlertMonitoringThreatCasesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "threatCases" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringThreatCaseType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetClipWithProgressWSRequest" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "description" : "Uuid of the clip to retrieve progress details for.",
            "nullable" : true
          }
        },
        "required" : [ "clipUuid" ]
      },
      "Event_GetClipWithProgressWSResponse" : {
        "type" : "object",
        "properties" : {
          "clip" : {
            "$ref" : "#/components/schemas/Event_SavedClipWithProgressType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetClipsWithProgressWSRequest" : {
        "type" : "object",
        "properties" : {
          "clipVisibilityFilter" : {
            "$ref" : "#/components/schemas/ClipVisibility"
          },
          "deviceUuidFilters" : {
            "type" : "array",
            "description" : "Device uuids to filter clips by.",
            "items" : {
              "type" : "string",
              "description" : "Device uuids to filter clips by.",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuidFilters" : {
            "type" : "array",
            "description" : "Location uuids to filter clips by.",
            "items" : {
              "type" : "string",
              "description" : "Location uuids to filter clips by.",
              "nullable" : true
            },
            "nullable" : true
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100,
            "description" : "Page size",
            "maximum" : 1000,
            "minimum" : 1,
            "nullable" : true
          },
          "pageToken" : {
            "type" : "string",
            "description" : "Page token received from the previous search request.",
            "nullable" : true
          },
          "searchFilter" : {
            "type" : "string",
            "nullable" : true
          },
          "sortField" : {
            "type" : "string",
            "nullable" : true
          },
          "sortOrder" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampFilterField" : {
            "type" : "string",
            "description" : "Timestamp to filter clips by (either clip creation date or clip footage date).",
            "nullable" : true
          },
          "timestampMsAfter" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp to find clips after this time.",
            "nullable" : true
          },
          "timestampMsBefore" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp to find clips before this time",
            "nullable" : true
          }
        }
      },
      "Event_GetClipsWithProgressWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pageToken" : {
            "type" : "string",
            "description" : "Token to be supplied on the next search request to get the next page. If token is null, there is no more data available.",
            "nullable" : true
          },
          "savedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event_SavedClipWithProgressType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetMotionGridCountsWSResponse" : {
        "type" : "object",
        "properties" : {
          "countGrid" : {
            "type" : "array",
            "description" : "Matrix where each cell is a fraction of the camera's resolution and stores the total number of motion events that occurred in the given timeframe",
            "items" : {
              "type" : "array",
              "description" : "Matrix where each cell is a fraction of the camera's resolution and stores the total number of motion events that occurred in the given timeframe",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Matrix where each cell is a fraction of the camera's resolution and stores the total number of motion events that occurred in the given timeframe",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetMotionGridWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "description" : "Uuid of the selected camera",
            "nullable" : true
          },
          "endTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time as a UNIX timestamp in seconds",
            "nullable" : true
          },
          "startTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time as a UNIX timestamp in seconds",
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid", "endTimeUtcSecs", "startTimeUtcSecs" ]
      },
      "Event_GetMotionGridWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "motionCells" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Event_FrontendCell"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertCountWSRequest" : {
        "type" : "object",
        "properties" : {
          "maxResultsSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertCountWSResponse" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyAlertUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlert" : {
            "$ref" : "#/components/schemas/PolicyAlertWithDetailsType"
          }
        }
      },
      "Event_GetPolicyAlertGroupsForDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsForDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event_PolicyAlertGroupV2"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event_PolicyAlertGroupV2"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event_PolicyAlertGroupV2"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "policyAlertUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlert" : {
            "$ref" : "#/components/schemas/PolicyAlertV2Type"
          }
        }
      },
      "Event_GetPolicyAlertWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyAlertUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlert" : {
            "$ref" : "#/components/schemas/BasePolicyAlertType"
          }
        }
      },
      "Event_GetPolicyAlertsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "afterTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "beforeTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "oldestPolicyAlert" : {
            "$ref" : "#/components/schemas/PolicyAlertV2Type"
          },
          "policyAlerts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyAlertV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertsWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorFilter" : {
            "type" : "array",
            "description" : "Filter including chosen Access Controlled Doors",
            "items" : {
              "type" : "string",
              "description" : "Filter including chosen Access Controlled Doors",
              "nullable" : true
            },
            "nullable" : true
          },
          "afterTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Enter starting timestamp interval in UNIX ms",
            "nullable" : true
          },
          "beforeTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Enter ending timestamp interval in UNIX ms",
            "nullable" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "description" : "Filter including chosen Devices",
            "items" : {
              "type" : "string",
              "description" : "Filter including chosen Devices",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Search with last known TimestampMs (Required for Pagination)",
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "description" : "Search with last known LastUuid (Required for Pagination)",
            "nullable" : true
          },
          "locationFilter" : {
            "type" : "array",
            "description" : "Filter any locations you would like to include",
            "items" : {
              "type" : "string",
              "description" : "Filter any locations you would like to include",
              "nullable" : true
            },
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Set a max result limit",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlerts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BasePolicyAlertType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipCountWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipCountWSResponse" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClip" : {
            "$ref" : "#/components/schemas/SavedClipWithDetailsType"
          }
        }
      },
      "Event_GetSavedClipsByExternalTransactionIdWSRequest" : {
        "type" : "object",
        "properties" : {
          "externalTransactionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipsByExternalTransactionIdWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavedClipV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "pageTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavedClipV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipsWSRequest" : {
        "type" : "object"
      },
      "Event_GetSavedClipsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavedClipV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSharedClipGroupDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetSharedClipGroupDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClipGroup" : {
            "$ref" : "#/components/schemas/SharedClipGroupWithDetailsType"
          }
        }
      },
      "Event_GetSharedClipGroupsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Event_GetSharedClipGroupsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClipGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipGroupWrapperV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSharedClipGroupsWSRequest" : {
        "type" : "object"
      },
      "Event_GetSharedClipGroupsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClipGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipGroupWrapperType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSplicedClipsInProgressWSRequest" : {
        "type" : "object"
      },
      "Event_GetSplicedClipsInProgressWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "splicedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SplicedClipType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetUnhealthyDeviceAlertsWSRequest" : {
        "type" : "object"
      },
      "Event_GetUnhealthyDeviceAlertsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "unhealthyDeviceAlerts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UnHealthyDeviceAlertType"
            },
            "nullable" : true
          }
        }
      },
      "Event_MuteNotificationsForDevicetWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Event_MuteNotificationsForDevicetWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_PolicyAlertGroupV2" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "policyAlerts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyAlertV2Type"
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Event_ReportBadPolicyAlertWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyAlert" : {
            "$ref" : "#/components/schemas/PolicyAlertV2Type"
          }
        }
      },
      "Event_ReportBadPolicyAlertWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_RuuidWrapper" : {
        "type" : "object",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "eventUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_SavePolicyAlertWSRequest" : {
        "type" : "object",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "fisheyePresentationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "savedClipDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClipTitle" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_SavePolicyAlertWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_SavedClipWithProgressType" : {
        "type" : "object",
        "properties" : {
          "accessSettings" : {
            "$ref" : "#/components/schemas/ClipAccessSettings"
          },
          "alterMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "analyzed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "byteCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "consoleDelete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "currentOperation" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "devicePresentationOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "externalTransactionId" : {
            "type" : "string",
            "nullable" : true
          },
          "fisheyeMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "integrationUploadList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          },
          "isMonitoringClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "isVendorClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastUpdatedSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "percentComplete" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sha256Hex" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceAlertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATING", "UPLOADING", "RENDERING", "FAILED", "COMPLETE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "videoResolution" : {
            "$ref" : "#/components/schemas/Resolution"
          }
        }
      },
      "Event_SearchMotionGridWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "description" : "Uuid of the selected camera",
            "nullable" : true
          },
          "endTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time as a UNIX timestamp in seconds",
            "nullable" : true
          },
          "searchCells" : {
            "type" : "array",
            "description" : "List of motion grid cells to include in the search",
            "items" : {
              "$ref" : "#/components/schemas/Event_FrontendCell"
            },
            "nullable" : true
          },
          "startTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time as a UNIX timestamp in seconds",
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid", "endTimeUtcSecs", "searchCells", "startTimeUtcSecs" ]
      },
      "Event_SearchMotionGridWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeUtcSecsList" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Event_SearchMotionGridWithActivitiesWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "description" : "Uuid of the selected camera",
            "nullable" : true
          },
          "endTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time as a UNIX timestamp in seconds",
            "nullable" : true
          },
          "searchCells" : {
            "type" : "array",
            "description" : "List of motion grid cells to include in the search",
            "items" : {
              "$ref" : "#/components/schemas/Event_FrontendCell"
            },
            "nullable" : true
          },
          "startTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time as a UNIX timestamp in seconds",
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid", "endTimeUtcSecs", "searchCells", "startTimeUtcSecs" ]
      },
      "Event_SearchMotionGridWithActivitiesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeUtcSecsToActivityMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSResponse_MotionGridActivity"
            },
            "nullable" : true
          }
        }
      },
      "Event_SearchMotionGridWithActivitiesWSResponse_ActivityWithId" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Event_SearchMotionGridWithActivitiesWSResponse_MotionGridActivity" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "activitiesWithId" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSResponse_ActivityWithId"
            },
            "nullable" : true
          },
          "bestTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Event_UnSavePolicyAlertWSRequest" : {
        "type" : "object",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClipUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UnSavePolicyAlertWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UpdatePolicyAlertTextDescriptionWSRequest" : {
        "type" : "object",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "textDescription" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UpdatePolicyAlertTextDescriptionWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UpdateSavedClipWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UpdateSavedClipWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UpdateSharedClipGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "writeOnly" : true
          },
          "plaintextPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UpdateSharedClipGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_groups_CreateClipGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event_RuuidWrapper"
            },
            "nullable" : true
          }
        }
      },
      "Event_groups_CreateClipGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_groups_DeleteClipGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_groups_DeleteClipGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_groups_GetClipGroupDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_groups_GetClipGroupDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "group" : {
            "$ref" : "#/components/schemas/ClipGroupWithDetailsType"
          }
        }
      },
      "Event_groups_GetClipGroupsForOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Event_groups_GetClipGroupsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Event_groups_UpdateClipGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Event_RuuidWrapper"
            },
            "nullable" : true
          }
        }
      },
      "Event_groups_UpdateClipGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Eventsearch_CombinedSeekPointType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "customActivityDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "originalEvent" : {
            "type" : "object",
            "nullable" : true
          },
          "seekpointEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "seekpointStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "thumbnailUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "unidentifiedFaceId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Eventsearch_GetCameraOrDoorbellCameraSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "combinedSeekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Eventsearch_CombinedSeekPointType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Eventsearch_GetEventSeekpointsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "description" : "Set of access controlled door uuids to retrieve component seekpoints for.",
            "items" : {
              "type" : "string",
              "description" : "Set of access controlled door uuids to retrieve component seekpoints for.",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "activityFilter" : {
            "type" : "array",
            "description" : "Optional filter to specify what activities are returned.",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clothingColorFilter" : {
            "type" : "array",
            "description" : "Optional filter to specify which human motion seekpoints are returned.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter to specify which human motion seekpoints are returned.",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clusterIntervalSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "An optional interval X (in seconds) that, when specified, causes this endpoint to return a smaller collection of seekpoints. These seekpoints represent clusters of activities that occur consecutively within X seconds of each other.",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "Set of device facet uuids to retrieve footage seekpoints for.",
            "items" : {
              "type" : "string",
              "description" : "Set of device facet uuids to retrieve footage seekpoints for.",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds since the start time to retrieve seekpoints for.",
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "default" : false,
            "description" : "Determines whether or not any motion seekpoints are returned.",
            "nullable" : true
          },
          "includeIntegrationEvents" : {
            "type" : "boolean",
            "default" : false,
            "description" : "Determines whether or not to include any seekpoints from enabled integrations.",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "description" : "Owner device uuid to retrieve component seekpoints for.",
            "nullable" : true
          },
          "searchCells" : {
            "type" : "array",
            "description" : "Optional filter used to limit the seekpoint search to the region provided.",
            "items" : {
              "$ref" : "#/components/schemas/Event_FrontendCell"
            },
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX timestamp in seconds for when to start retrieving seekpoints.",
            "nullable" : true
          },
          "vehicleColorFilter" : {
            "type" : "array",
            "description" : "Optional filter to specify which vehicle motion seekpoints are returned.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter to specify which vehicle motion seekpoints are returned.",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        },
        "required" : [ "durationSec", "startTimeSec" ]
      },
      "Eventsearch_GetEventSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "activitySet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "componentSeekPointsByAccessControlledDoorWSRequest" : {
            "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorWSRequest"
          },
          "componentSeekPointsByAccessControlledDoorsWSRequest" : {
            "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorsWSRequest"
          },
          "componentSeekPointsByOwnerDeviceWSRequest" : {
            "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByOwnerDeviceWSRequest"
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "searchColorAndVehicleByColorWSRequest" : {
            "$ref" : "#/components/schemas/Eventsearch_SearchClothingAndVehicleByColorWSRequest"
          },
          "searchMotionGridWithActivitiesWSRequest" : {
            "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSRequest"
          },
          "seekpointsWSRequest" : {
            "$ref" : "#/components/schemas/Common_devices_GetSeekpointsWSRequest"
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "videoFootageWSRequest" : {
            "$ref" : "#/components/schemas/Eventsearch_VideoFootageWSRequest"
          }
        }
      },
      "Eventsearch_GetEventSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "combinedSeekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Eventsearch_CombinedSeekPointType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Eventsearch_SearchClothingAndVehicleByColorWSRequest" : {
        "type" : "object",
        "properties" : {
          "clothingColorFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "vehicleColorFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Eventsearch_VideoFootageWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "useMultiCamera" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Export_ExportAuditEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endInterval" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "excludeActions" : {
            "type" : "array",
            "description" : "If not empty, events with actions specified in the list are filtered out. If both include and exclude actions are specified, exclude actions are ignored.",
            "items" : {
              "type" : "string",
              "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "UNKNOWN" ],
              "nullable" : true
            },
            "maxItems" : 50,
            "nullable" : true
          },
          "includeActions" : {
            "type" : "array",
            "description" : "If not empty, events with actions specified in the list are filtered out. If both include and exclude actions are specified, exclude actions are ignored.",
            "items" : {
              "type" : "string",
              "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "UNKNOWN" ],
              "nullable" : true
            },
            "maxItems" : 50,
            "nullable" : true
          },
          "startInterval" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Export_ExportClimateEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Export_ExportCountReportsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Enter the ending date in in ISO 8601 format",
            "example" : "2024-07-17T00:00:00Z",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime as a UNIX timestamp in milliseconds",
            "example" : 1721416242907,
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "The chosen interval time of reports",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "The chosen scope of report by Device, Organization, Region or Location",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Enter the starting date in ISO 8601 format",
            "example" : "2024-07-17T00:00:00Z",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime as a UNIX timestamp in milliseconds",
            "example" : 1719861042000,
            "minimum" : 0,
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of alert to fetch",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          },
          "uuidList" : {
            "type" : "array",
            "description" : "Enter the UUID of device(s) or location(s)",
            "items" : {
              "type" : "string",
              "description" : "Enter the UUID of device(s) or location(s)",
              "nullable" : true
            },
            "nullable" : true
          }
        },
        "required" : [ "endTimeMs", "interval", "scope", "startTimeMs", "type" ]
      },
      "Export_ExportDiagnosticEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endInterval" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startInterval" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Export_ExportDoorEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Export_ExportEnvironmentalGatewayEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Export_ExportInventoryWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Export_ExportMotionEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "After datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Before datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "description" : "Enter Motion Sensor Uuid",
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid" ]
      },
      "Export_ExportPeopleCountEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endInterval" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startInterval" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Export_ExportPeopleEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endInterval" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startInterval" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Export_ExportProximityEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "createBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "writeOnly" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Export_ExportProximityLocomotionEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "createBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "writeOnly" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Export_ExportUptimeWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "deprecated" : true,
            "description" : "Use deviceUuids instead",
            "items" : {
              "type" : "string",
              "deprecated" : true,
              "description" : "Use deviceUuids instead",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "endDateTime" : {
            "type" : "string",
            "nullable" : true
          },
          "granularity" : {
            "type" : "string",
            "enum" : [ "NANOSECONDS", "MICROSECONDS", "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS" ],
            "nullable" : true
          },
          "startDateTime" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Export_ExportUsersWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Export_ExportVehicleEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "fuzzy" : {
            "type" : "boolean",
            "description" : "Do you want a fuzzy search on the provided plate numbers?",
            "nullable" : true
          },
          "interval" : {
            "$ref" : "#/components/schemas/TimeInterval"
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "plateNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        },
        "required" : [ "fuzzy" ]
      },
      "FaceUploadMetadata" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "faceId" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "origS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          },
          "transactionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_DeleteFaceEventWSRequest" : {
        "type" : "object",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_DeleteFaceEventWSResponse" : {
        "type" : "object"
      },
      "Facerecognition_faceevent_ExportFaceEventsByOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_ExternalFaceEvent" : {
        "type" : "object",
        "properties" : {
          "detectionConfidence" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence value indicating the likelihood that the detected image is a face.",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "embeddingConfidence" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence value associated with the embedding generated for the face image.",
            "nullable" : true
          },
          "eventTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "description" : "Name of the person that matched the face image. If selectedPersonMatch is not null, faceName will be equal to the name field of selectedPersonMatch.",
            "nullable" : true
          },
          "hasEmbedding" : {
            "type" : "boolean",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "description" : "Uuid of the person that matched the face image. If selectedPersonMatch is not null, personUuid will be equal to the uuid field of the selectedPersonMatch.",
            "nullable" : true
          },
          "pitch" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "roll" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "selectedPersonMatch" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalPersonMatch"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "topPersonMatches" : {
            "type" : "array",
            "description" : "Top person matches found for the face image.",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalPersonMatch"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "yaw" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_ExternalFaceEventSearchFilter" : {
        "type" : "object",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of devices.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by a set of devices.",
              "nullable" : true
            },
            "nullable" : true
          },
          "faceNameContains" : {
            "type" : "string",
            "description" : "Optional filter by name substring. The face event is a match if its face name contains the specified value. The search will only be performed if the provided value is at least 3 characters long after trimming leading and trailing spaces. If both faceNameContains and faceNames are specified, faceNameContains takes a precedence.",
            "nullable" : true
          },
          "faceNames" : {
            "type" : "array",
            "description" : "Optional filter by people names.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by people names.",
              "nullable" : true
            },
            "nullable" : true
          },
          "hasEmbedding" : {
            "type" : "boolean",
            "description" : "Optional filter by the presence or absence of an embedding.",
            "nullable" : true
          },
          "hasName" : {
            "type" : "boolean",
            "description" : "Optional filter by the presence or absence of a person name.",
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "description" : "Optional filter by labels.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by labels.",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of locations.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by a set of locations.",
              "nullable" : true
            },
            "nullable" : true
          },
          "personUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of people.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by a set of people.",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/TimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_ExternalFaceEventSimilaritySearchFilter" : {
        "type" : "object",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of devices.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by a set of devices.",
              "nullable" : true
            },
            "nullable" : true
          },
          "embeddingConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional face embedding confidence threshold used to filter out face events with embeddingconfidence values less than the specified threshold. Valid range [0,1].",
            "maximum" : 1,
            "minimum" : 0,
            "nullable" : true
          },
          "faceMatchDistanceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional face match distance threshold used to compare face event images. Defaults to 0.7.Valid range [0,1].",
            "maximum" : 1,
            "minimum" : 0,
            "nullable" : true
          },
          "faceNameContains" : {
            "type" : "string",
            "description" : "Optional filter by name substring. The face event is a match if its face name contains the specified value. The search will only be performed if the provided value is at least 3 characters long after trimming leading and trailing spaces. If both faceNameContains and faceNames are specified, faceNameContains takes a precedence.",
            "nullable" : true
          },
          "faceNames" : {
            "type" : "array",
            "description" : "Optional filter by people names.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by people names.",
              "nullable" : true
            },
            "nullable" : true
          },
          "hasName" : {
            "type" : "boolean",
            "description" : "Optional filter by the presence or absence of a person name.",
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "description" : "Optional filter by labels.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by labels.",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of locations.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by a set of locations.",
              "nullable" : true
            },
            "nullable" : true
          },
          "personUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of people.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by a set of people.",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/TimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_ExternalPersonMatch" : {
        "type" : "object",
        "description" : "Top person matches found for the face image.",
        "properties" : {
          "confidence" : {
            "type" : "number",
            "format" : "float",
            "description" : "Match confidence level expressed as a value in range[0,1].",
            "nullable" : true
          },
          "faceId" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByDeviceForReportingWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ReportTimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByDeviceForReportingWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByLocationForReportingWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ReportTimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByLocationForReportingWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByOrgForReportingWSRequest" : {
        "type" : "object",
        "properties" : {
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ReportTimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByOrgForReportingWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsByEmbeddingWSRequest" : {
        "type" : "object",
        "properties" : {
          "embedding" : {
            "$ref" : "#/components/schemas/Embedding"
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSimilaritySearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsByEmbeddingWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsByFaceMatchmakerWSRequest" : {
        "type" : "object",
        "properties" : {
          "faceId" : {
            "type" : "string",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSimilaritySearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsByFaceMatchmakerWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "faceEventUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSimilaritySearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_GetFaceEventWSRequest" : {
        "type" : "object",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_GetFaceEventWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceEvent" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
          }
        }
      },
      "Facerecognition_faceevent_ProcessFaceEventSearchImageWSResponse" : {
        "type" : "object",
        "properties" : {
          "embedding" : {
            "$ref" : "#/components/schemas/Embedding"
          },
          "imageBase64" : {
            "type" : "string",
            "description" : "Base64 encoded image used for embedding generation. The image in the request may have been modified(cropped) in order to generate embedding.",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_ReportTimestampFilter" : {
        "type" : "object",
        "properties" : {
          "rangeStart" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "reportInterval" : {
            "type" : "string",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_UpdateFaceEventWSRequest" : {
        "type" : "object",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "personName" : {
            "type" : "string",
            "description" : "Name of the person associated with the face event. Ignored if person UUID matches to one of the top person matches.",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "description" : "UUID of the person selected as a match for the face event. If the UUID matches one of the top person matches, selectedPersonMatch will be set accordingly.",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_UpdateFaceEventWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceEvent" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
          }
        }
      },
      "Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSRequest" : {
        "type" : "object",
        "properties" : {
          "faceEventUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceMatchmaker" : {
            "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
          }
        }
      },
      "Facerecognition_matchmaker_CreatePersonAndFaceMatchmakersWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceMatchmakers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
            },
            "nullable" : true
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "transactionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_DeleteFaceMatchmakerWSRequest" : {
        "type" : "object",
        "properties" : {
          "faceId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_DeleteFaceMatchmakerWSResponse" : {
        "type" : "object"
      },
      "Facerecognition_matchmaker_ExternalFaceMatchmaker" : {
        "type" : "object",
        "properties" : {
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uploaded" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FileUploadResult" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "description" : "The name of the uploaded file.",
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Error message that occurred during upload.",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Indicates whether the file upload was successful. Note, that even if upload was successful, subsequent operations, such as adding the uploaded file as a matchmaker, may fail.",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSRequest" : {
        "type" : "object"
      },
      "Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceMatchmakers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
            },
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSRequest" : {
        "type" : "object",
        "properties" : {
          "personUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceMatchmakers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
            },
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSRequest" : {
        "type" : "object",
        "properties" : {
          "transactionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceUploadMetadata" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FaceUploadMetadata"
            },
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_GetFaceMatchingConfigWSRequest" : {
        "type" : "object"
      },
      "Facerecognition_matchmaker_GetFaceMatchingConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_GetFaceMatchmakerWSRequest" : {
        "type" : "object",
        "properties" : {
          "faceId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_GetFaceMatchmakerWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceMatchmaker" : {
            "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
          }
        }
      },
      "Facerecognition_matchmaker_UpdateFaceMatchingConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Minimum confidence level required for the system to automatically assign a match. If null, the system uses the built-in default.",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_UpdateFaceMatchingConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_UploadFaceMatchmakerForPersonWSResponse" : {
        "type" : "object",
        "properties" : {
          "fileUploadResult" : {
            "$ref" : "#/components/schemas/Facerecognition_matchmaker_FileUploadResult"
          },
          "transactionId" : {
            "type" : "string",
            "description" : "Transaction id to track face matchmaker upload progress.",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_UploadFaceMatchmakersWSResponse" : {
        "type" : "object",
        "properties" : {
          "fileUploadResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_matchmaker_FileUploadResult"
            },
            "nullable" : true
          },
          "transactionId" : {
            "type" : "string",
            "description" : "Transaction id to track face matchmakers upload progress.",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_ValidateFaceMatchmakerImageWSResponse" : {
        "type" : "object",
        "properties" : {
          "errorMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "valid" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_AddPersonLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_AddPersonLabelWSResponse" : {
        "type" : "object"
      },
      "Facerecognition_person_CreatePersonWSRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_CreatePersonWSResponse" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          }
        }
      },
      "Facerecognition_person_DeletePersonWSRequest" : {
        "type" : "object",
        "properties" : {
          "personUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_DeletePersonWSResponse" : {
        "type" : "object"
      },
      "Facerecognition_person_FindPeopleByOrgWSRequest" : {
        "type" : "object"
      },
      "Facerecognition_person_FindPeopleByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "people" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Person"
            },
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_FindPersonLabelsByOrgWSRequest" : {
        "type" : "object"
      },
      "Facerecognition_person_FindPersonLabelsByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "labelsByPerson" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_GetPersonWSRequest" : {
        "type" : "object",
        "properties" : {
          "personUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_GetPersonWSResponse" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          }
        }
      },
      "Facerecognition_person_RemovePersonLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_RemovePersonLabelWSResponse" : {
        "type" : "object"
      },
      "Facerecognition_person_UpdatePersonWSRequest" : {
        "type" : "object",
        "properties" : {
          "personSelectiveUpdate" : {
            "$ref" : "#/components/schemas/PersonSelectiveUpdate"
          }
        }
      },
      "Facerecognition_person_UpdatePersonWSResponse" : {
        "type" : "object",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          }
        }
      },
      "FeatureCompatabilityType" : {
        "type" : "object",
        "properties" : {
          "betaRolloutOrgFlag" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceFeatureEnablement" : {
            "$ref" : "#/components/schemas/DeviceFeatureEnum"
          },
          "featureName" : {
            "type" : "string",
            "nullable" : true
          },
          "generatedActivities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "hardwareDefaultMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "requiredLicenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/License"
            },
            "nullable" : true
          },
          "supportedHardware" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareVariationEnum"
            },
            "nullable" : true
          }
        }
      },
      "Feature_DeviceFeaturesType" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "featureMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceEventTypesWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceEventTypesWSResponse" : {
        "type" : "object",
        "properties" : {
          "eventTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceFeaturesListWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceFeaturesListWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "featureList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Feature_DeviceFeaturesType"
            },
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceFeaturesWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceFeaturesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "features" : {
            "$ref" : "#/components/schemas/Feature_DeviceFeaturesType"
          }
        }
      },
      "Feature_GetFeatureCompatabilityMatrixWSRequest" : {
        "type" : "object"
      },
      "Feature_GetFeatureCompatabilityMatrixWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "featureCompatabilityMatrix" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeatureCompatabilityType"
            },
            "nullable" : true
          }
        }
      },
      "Feature_UpdateDeviceFeaturesWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "featureMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Feature_UpdateDeviceFeaturesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FirmwareUpdateIntervalType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "FirmwareUpdateSettingsOverrideType" : {
        "type" : "object",
        "description" : "Overrides default firmware update settings.",
        "nullable" : true,
        "properties" : {
          "deviceTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceTypeEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "firmwareUpdateSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          }
        }
      },
      "FirmwareUpdateSettingsType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "intervalsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FirmwareUpdateIntervalType"
            },
            "nullable" : true
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "MANUAL", "SCHEDULED" ],
            "nullable" : true
          }
        }
      },
      "FirstInFirmwareStatus" : {
        "type" : "string",
        "enum" : [ "DISABLED", "NOT_CONFIGURED", "REQUIRED", "SATISFIED", "UNKNOWN" ]
      },
      "FirstInResetEnum" : {
        "type" : "string",
        "enum" : [ "DAILY" ]
      },
      "FirstInShadow" : {
        "type" : "object",
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "source" : {
            "$ref" : "#/components/schemas/FirstInSourceEnum"
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInFirmwareStatus"
          },
          "stateUpdateEventTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "FirstInSourceEnum" : {
        "type" : "string",
        "enum" : [ "CONFIG_MANUAL_OVERRIDE", "CONFIG_REQUIREMENT_CHANGE", "CONFIG_MEMBERSHIP", "SCHEDULED_RESET", "LOCAL_BADGE_EVENT", "LOCKDOWN", "UNKNOWN" ]
      },
      "FirstInState" : {
        "type" : "object",
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "FirstInState_Minimal" : {
        "type" : "object",
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator_Minimal"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus_Minimal"
          }
        }
      },
      "FirstInStatus" : {
        "type" : "string",
        "enum" : [ "REQUIRED", "SATISFIED" ]
      },
      "FirstInStatus_Minimal" : {
        "type" : "string",
        "enum" : [ "REQUIRED", "SATISFIED" ]
      },
      "FisheyeDisplayMode" : {
        "type" : "string",
        "enum" : [ "RAW", "IMMERSIVE", "TILES", "RAW_PANO" ]
      },
      "FlicDevice" : {
        "type" : "object",
        "properties" : {
          "flicAction" : {
            "type" : "string",
            "nullable" : true
          },
          "flicBatteryLevel" : {
            "type" : "string",
            "nullable" : true
          },
          "flicHub" : {
            "$ref" : "#/components/schemas/FlicHub"
          },
          "flicName" : {
            "type" : "string",
            "nullable" : true
          },
          "flicSerialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "flicTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "flicUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastClickedTimestamp" : {
            "type" : "string",
            "nullable" : true
          },
          "moduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FlicHub" : {
        "type" : "object",
        "properties" : {
          "flicHubName" : {
            "type" : "string",
            "nullable" : true
          },
          "flicHubSerialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "flicHubUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FlicType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiKey" : {
              "type" : "string",
              "nullable" : true
            },
            "apiSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "associatedLocations" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "moduleUploaded" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookId" : {
              "type" : "string",
              "nullable" : true
            },
            "webhookToken" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FloorPlanType" : {
        "type" : "object",
        "properties" : {
          "eastEdge" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "floorLabel" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "imageUrl" : {
            "type" : "string",
            "format" : "url",
            "nullable" : true
          },
          "mediaUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "northEdge" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "rotation" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "southEdge" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "westEdge" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "FootageBoundingBoxType" : {
        "type" : "object",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "al" : {
            "type" : "boolean",
            "description" : "alerted on this?",
            "nullable" : true
          },
          "b" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - bottom permyriad",
            "nullable" : true
          },
          "c" : {
            "type" : "number",
            "format" : "float",
            "description" : "confidence",
            "nullable" : true
          },
          "cd" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "nullable" : true
          },
          "cdn" : {
            "type" : "string",
            "description" : "custom activity display name",
            "nullable" : true
          },
          "croppedImageLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "fn" : {
            "type" : "string",
            "description" : "face names",
            "nullable" : true
          },
          "kp" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PointType"
            },
            "description" : "pose keypoints",
            "nullable" : true
          },
          "l" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - left permyriad",
            "nullable" : true
          },
          "loudness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lp" : {
            "type" : "string",
            "description" : "license plate",
            "nullable" : true
          },
          "m" : {
            "type" : "boolean",
            "description" : "object in motion?",
            "nullable" : true
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "p" : {
            "type" : "string",
            "description" : "pose",
            "nullable" : true
          },
          "r" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - right permyriad",
            "nullable" : true
          },
          "ro" : {
            "type" : "array",
            "description" : "recognized objects",
            "items" : {
              "type" : "string",
              "description" : "recognized objects",
              "nullable" : true
            },
            "nullable" : true
          },
          "sensorValType" : {
            "$ref" : "#/components/schemas/SensorValType"
          },
          "t" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - top permyriad",
            "nullable" : true
          },
          "toastOrderIdInfo" : {
            "$ref" : "#/components/schemas/ToastOrderIdType"
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "timestamp in milliseconds since epoch",
            "nullable" : true
          },
          "uf" : {
            "type" : "string",
            "description" : "FaceId for an unidentified face",
            "nullable" : true
          },
          "vn" : {
            "type" : "string",
            "description" : "vehicle name",
            "nullable" : true
          }
        },
        "required" : [ "a", "b", "l", "r", "t", "ts" ]
      },
      "FootageSeekPointType" : {
        "type" : "object",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "al" : {
            "type" : "boolean",
            "nullable" : true
          },
          "b" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "fn" : {
            "type" : "string",
            "nullable" : true
          },
          "kp" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PointType"
            },
            "nullable" : true
          },
          "l" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "lp" : {
            "type" : "string",
            "nullable" : true
          },
          "p" : {
            "type" : "string",
            "nullable" : true
          },
          "r" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ro" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "t" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uf" : {
            "type" : "string",
            "nullable" : true
          },
          "vn" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FootageSeekPointV2Type" : {
        "type" : "object",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "al" : {
            "type" : "boolean",
            "description" : "alerted on this?",
            "nullable" : true
          },
          "cc" : {
            "type" : "string",
            "description" : "Custom activity seekpoint color",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "cd" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "nullable" : true
          },
          "cdn" : {
            "type" : "string",
            "description" : "Custom activity display name, maximum 32 characters",
            "nullable" : true
          },
          "dcao" : {
            "type" : "boolean",
            "nullable" : true
          },
          "fn" : {
            "type" : "string",
            "description" : "face names",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "loudness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lp" : {
            "type" : "string",
            "description" : "license plate",
            "nullable" : true
          },
          "m" : {
            "type" : "boolean",
            "description" : "object in motion?",
            "nullable" : true
          },
          "p" : {
            "type" : "string",
            "description" : "pose",
            "nullable" : true
          },
          "ro" : {
            "type" : "array",
            "description" : "recognized objects",
            "items" : {
              "type" : "string",
              "description" : "recognized objects",
              "nullable" : true
            },
            "nullable" : true
          },
          "sensorValType" : {
            "$ref" : "#/components/schemas/SensorValType"
          },
          "toi" : {
            "$ref" : "#/components/schemas/ToastOrderIdType"
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "timestamp",
            "nullable" : true
          },
          "tu" : {
            "type" : "string",
            "nullable" : true
          },
          "uf" : {
            "type" : "string",
            "description" : "FaceId for an unidentified face",
            "nullable" : true
          },
          "vn" : {
            "type" : "string",
            "description" : "vehicle name",
            "nullable" : true
          }
        },
        "required" : [ "a", "ts" ]
      },
      "FormDataBodyPart" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "content" : {
            "type" : "object",
            "nullable" : true
          },
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object",
            "nullable" : true
          },
          "fileName" : {
            "type" : "string",
            "nullable" : true
          },
          "formDataContentDisposition" : {
            "$ref" : "#/components/schemas/FormDataContentDisposition"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Providers"
          },
          "simple" : {
            "type" : "boolean",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FormDataContentDisposition" : {
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "fileName" : {
            "type" : "string",
            "nullable" : true
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FormDataMultiPart" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "bodyParts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BodyPart"
            },
            "nullable" : true
          },
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object",
            "nullable" : true
          },
          "fields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/FormDataBodyPart"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Providers"
          }
        }
      },
      "FormaSensorType" : {
        "type" : "object",
        "properties" : {
          "ch2oPpb" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Freight" : {
        "type" : "object",
        "properties" : {
          "warehouse" : {
            "type" : "string",
            "enum" : [ "AIT", "INVENTORY_RESERVATIONS" ],
            "nullable" : true
          }
        }
      },
      "FrontendEqualizerSettings" : {
        "type" : "object",
        "properties" : {
          "frequency" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "gain" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "q" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "FullDeviceStateType" : {
        "type" : "object",
        "properties" : {
          "afSupport" : {
            "type" : "boolean",
            "nullable" : true
          },
          "baseVideoOperationUri" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "connectionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latestFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "maxZoomPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "onCameraState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "onCloudState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "stateUpdatedTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "versionsBehind" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Functionality" : {
        "type" : "string",
        "enum" : [ "DEVICE_ADMINISTRATION", "ORG_ADMINISTRATION", "AUTH_ADMINISTRATION", "FIRMWARE_ADMINISTRATION", "DOOR_ACCESS_ADMINISTRATION", "CAMERA_ADMINISTRATION", "REGISTER_DEVICES", "DELETE_DEVICES", "LOCATION_ADMINISTRATION", "POLICY_ADMINISTRATION", "USER_ADMINISTRATION", "REPORT_ADMINISTRATION", "NOTIFICATION_ADMINISTRATION", "LICENSE_ADMINISTRATION", "RECEIVE_EMAILS", "MANAGE_FACES", "MANAGE_LICENSEPLATES", "API_ADMINISTRATION", "INTEGRATION_ADMINISTRATION", "DATA_EXFILTRATION", "ALERT_MONITORING_ADMINISTRATION", "ALERT_MONITORING_VIEWONLY", "GUEST_MANAGEMENT_ADMINISTRATION", "GUEST_MANAGEMENT_VIEWONLY", "UNKNOWN" ]
      },
      "GeneaSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GeneaType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookSignatureSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "webhookUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GenericButtonShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/GenericButtonStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "supervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericButtonStateEnumType" : {
        "type" : "string",
        "enum" : [ "BUTTON_DOWN", "BUTTON_UP", "UNKNOWN" ]
      },
      "GenericDoorType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GenericInputShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/GenericInputStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "supervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericInputStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/GenericInputStateEnumType"
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GenericInputStateEnumType" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "INACTIVE", "UNKNOWN" ]
      },
      "GenericObjectEmbedding" : {
        "type" : "object",
        "properties" : {
          "b" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - bottom permyriad",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "embedding" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "embeddingId" : {
            "type" : "string",
            "nullable" : true
          },
          "l" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - left permyriad",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/ObjectSearchModelEnum"
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "objectType" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "r" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - right permyriad",
            "nullable" : true
          },
          "t" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - top permyriad",
            "nullable" : true
          },
          "thumbnailUri" : {
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericObjectEmbeddingMatch" : {
        "type" : "object",
        "properties" : {
          "distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "embedding" : {
            "$ref" : "#/components/schemas/GenericObjectEmbedding"
          },
          "matchedEmbeddingId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GenericPosSettings" : {
        "type" : "object",
        "description" : "Collection of service area settings for this restaurant",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "description" : "A list of camera uuids from Rhombus that are assigned to the PoS device",
            "items" : {
              "type" : "string",
              "description" : "A list of camera uuids from Rhombus that are assigned to the PoS device",
              "nullable" : true
            },
            "nullable" : true
          },
          "posName" : {
            "type" : "string",
            "description" : "The name of the point of sale device",
            "nullable" : true
          }
        }
      },
      "GenericPosType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GenericRelayShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "state" : {
              "$ref" : "#/components/schemas/GenericRelayStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericRelayStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "steadyState" : {
              "$ref" : "#/components/schemas/GenericRelayStateEnumType"
            },
            "steadyStateChangedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "transientState" : {
              "$ref" : "#/components/schemas/GenericRelayStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GenericRelayStateEnumType" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "INACTIVE", "UNKNOWN" ]
      },
      "GenericVideoEmbedding" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "embedding" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "embeddingId" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/VideoSimilarityModelEnum"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericVideoEmbeddingMatch" : {
        "type" : "object",
        "properties" : {
          "distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "embedding" : {
            "$ref" : "#/components/schemas/GenericVideoEmbedding"
          },
          "matchedEmbeddingId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GeoIpLocationType" : {
        "type" : "object",
        "properties" : {
          "city_name" : {
            "type" : "string",
            "nullable" : true
          },
          "country_code" : {
            "type" : "string",
            "nullable" : true
          },
          "country_name" : {
            "type" : "string",
            "nullable" : true
          },
          "region_name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GeodeticCoordinates" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/GpsError"
          },
          "floor" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lat" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "lon" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "GetTemporaryOrgTokenResponse" : {
        "type" : "object",
        "properties" : {
          "tempOrgToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GoogleCaptchaSourceEnum" : {
        "type" : "string",
        "enum" : [ "LEGACY", "RHOMBUS_CONSOLE_WEB", "RHOMBUS_CONSOLE_ANDROID_APP", "RHOMBUS_CONSOLE_IOS_APP", "RHOMBUS_KEY_ANDROID_APP", "RHOMBUS_KEY_IOS_APP" ]
      },
      "GoogleSettings" : {
        "type" : "object",
        "properties" : {
          "accountUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "folderId" : {
            "type" : "string",
            "nullable" : true
          },
          "teamDriveId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GoogleSettingsV2" : {
        "type" : "object",
        "properties" : {
          "defaultAlertFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultAlertFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveAllAlerts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "GoogleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "allowUserStorage" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultAlertFolderId" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultAlertFolderName" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultFolderId" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultFolderName" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveAllAlerts" : {
              "type" : "boolean",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "userSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/GoogleUserSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GoogleUserSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "defaultAlertFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultAlertFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveAllAlerts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "GpsError" : {
        "type" : "object",
        "properties" : {
          "majorAxis" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "minorAxis" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "rotation" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "Group_AddUsersToOrgGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Group_AddUsersToOrgGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "groupMembers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_CreateOrgGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Group_CreateOrgGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "group" : {
            "$ref" : "#/components/schemas/OrgGroupType"
          },
          "groupMembers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_DeleteOrgGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Group_DeleteOrgGroupWSResponse" : {
        "type" : "object"
      },
      "Group_FindAllUsersForOrgGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Group_FindAllUsersForOrgGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "groupMembers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupMembershipsByUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupMembershipsByUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "userGroupMemberships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupMembershipsForCurrentUserWSRequest" : {
        "type" : "object"
      },
      "Group_FindOrgGroupMembershipsForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "userGroupMemberships" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByExactNameWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByExactNameWSResponse" : {
        "type" : "object",
        "properties" : {
          "group" : {
            "$ref" : "#/components/schemas/OrgGroupType"
          }
        }
      },
      "Group_FindOrgGroupsByNamePrefixWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupNamePrefix" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByNamePrefixWSResponse" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByOrgWSRequest" : {
        "type" : "object"
      },
      "Group_FindOrgGroupsByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByUserMembershipWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByUserMembershipWSResponse" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Group_RemoveUsersFromOrgGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Group_RemoveUsersFromOrgGroupWSResponse" : {
        "type" : "object"
      },
      "Group_UpdateOrgGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Group_UpdateOrgGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "group" : {
            "$ref" : "#/components/schemas/OrgGroupType"
          }
        }
      },
      "Guest" : {
        "type" : "object",
        "properties" : {
          "accessEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "backgroundCheckStatus" : {
            "type" : "string",
            "enum" : [ "CLEARED", "NEEDS_ATTENTION" ],
            "nullable" : true
          },
          "checkedInEnum" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "crime" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "faceImage" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastCheckedInMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastCheckedOutMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "meetingParticipants" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "profileImageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/GuestStatusEnum"
          }
        }
      },
      "GuestActivityEnum" : {
        "type" : "string",
        "enum" : [ "CHECKED_IN", "CHECKED_OUT", "AUTO_CHECKED_OUT", "UPDATED_INFO", "INVITED" ]
      },
      "GuestActivityLog" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "agent" : {
            "type" : "string",
            "nullable" : true
          },
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GuestInvite" : {
        "type" : "object",
        "properties" : {
          "accessEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "backgroundCheckStatus" : {
            "type" : "string",
            "enum" : [ "CLEARED", "NEEDS_ATTENTION" ],
            "nullable" : true
          },
          "checkedInEnum" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "crime" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "faceImage" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastCheckedInMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastCheckedOutMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "meetingParticipants" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "profileImageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/GuestStatusEnum"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GuestInviteSelectiveUpdateByInvocation" : {
        "type" : "object",
        "properties" : {
          "accessEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "backgroundCheckStatus" : {
            "type" : "string",
            "enum" : [ "CLEARED", "NEEDS_ATTENTION" ],
            "nullable" : true
          },
          "checkedInEnum" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "crime" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "faceImage" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastCheckedInMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastCheckedOutMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "meetingParticipants" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "profileImageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/GuestStatusEnum"
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GuestManagementOrgSettings" : {
        "type" : "object",
        "properties" : {
          "hexIdentityColor" : {
            "type" : "string",
            "nullable" : true
          },
          "logoImageString" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GuestManagementSettingsSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "hexIdentityColor" : {
            "type" : "string",
            "nullable" : true
          },
          "logoImageString" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "GuestManagementType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/LocationSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GuestSelectiveUpdateByInvocation" : {
        "type" : "object",
        "properties" : {
          "accessEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "backgroundCheckStatus" : {
            "type" : "string",
            "enum" : [ "CLEARED", "NEEDS_ATTENTION" ],
            "nullable" : true
          },
          "checkedInEnum" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "crime" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "faceImage" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastCheckedInMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastCheckedOutMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "meetingParticipants" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "profileImageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/GuestStatusEnum"
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "GuestStatusEnum" : {
        "type" : "string",
        "enum" : [ "INVITED", "PENDING", "APPROVED", "DENIED" ]
      },
      "GuestTypeEnum" : {
        "type" : "string",
        "enum" : [ "CONTRACTOR", "INTERVIEWER", "GENERAL_VISITOR", "UNPLANNED_VISITOR", "PARTNER", "MEETINGS" ]
      },
      "Guestmanagement_ActivateKioskWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_ActivateKioskWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "redirectUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_BaseGuestManagementWSRequest" : {
        "type" : "object"
      },
      "Guestmanagement_CreateGuestInviteWSRequest" : {
        "type" : "object",
        "properties" : {
          "guestInvite" : {
            "$ref" : "#/components/schemas/GuestInvite"
          }
        }
      },
      "Guestmanagement_CreateGuestManagementSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/GuestManagementOrgSettings"
          }
        }
      },
      "Guestmanagement_CreateGuestManagementSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_CreateGuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          }
        }
      },
      "Guestmanagement_ExportGuestActivitiesWSRequest" : {
        "type" : "object",
        "properties" : {
          "beginTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "includeGuestTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GuestTypeEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "includeLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Guestmanagement_ExportGuestsWSRequest" : {
        "type" : "object",
        "properties" : {
          "beginTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "includeGuestTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GuestTypeEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "includeLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Guestmanagement_GetActivityLogsForGuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetActivityLogsForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "dynamoPageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetAllGuestInvitesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guestInvites" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GuestInvite"
            },
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetAllGuestsWSResponse" : {
        "type" : "object",
        "properties" : {
          "allGuests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Guest"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetGuestActivityLogsWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "dynamoPageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          }
        }
      },
      "Guestmanagement_GetGuestActivityLogsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guestActivities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GuestActivityLog"
            },
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetGuestInviteWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guestInvite" : {
            "$ref" : "#/components/schemas/GuestInvite"
          }
        }
      },
      "Guestmanagement_GetGuestInvitesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guestInvites" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GuestInvite"
            },
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetGuestManagementSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "settings" : {
            "$ref" : "#/components/schemas/GuestManagementOrgSettings"
          }
        }
      },
      "Guestmanagement_GetGuestWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          }
        }
      },
      "Guestmanagement_GetInvitesForOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "invitedAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "invitedBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "paginateRequest" : {
            "$ref" : "#/components/schemas/PaginateRequest"
          }
        }
      },
      "Guestmanagement_GetKioskInfoWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosk" : {
            "$ref" : "#/components/schemas/Kiosk"
          }
        }
      },
      "Guestmanagement_GetKiosksForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Kiosk"
            },
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetNametagTemplateForGuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetNametagTemplateForGuestWSResponse" : {
        "type" : "object",
        "properties" : {
          "badgeTemplate" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          },
          "companyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GuestByEmailWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GuestCheckinWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GuestInviteWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GuestInvitesByEmailWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          }
        }
      },
      "Guestmanagement_UpdateGuestInviteWSRequest" : {
        "type" : "object",
        "properties" : {
          "inviteUpdate" : {
            "$ref" : "#/components/schemas/GuestInviteSelectiveUpdateByInvocation"
          }
        }
      },
      "Guestmanagement_UpdateGuestManagementSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "settingsUpdate" : {
            "$ref" : "#/components/schemas/GuestManagementSettingsSelectiveUpdate"
          }
        }
      },
      "Guestmanagement_UpdateGuestManagementSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_UpdateGuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          },
          "guestUpdate" : {
            "$ref" : "#/components/schemas/GuestSelectiveUpdateByInvocation"
          }
        }
      },
      "HaloSettings" : {
        "type" : "object",
        "properties" : {
          "alertAgression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertCO" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertCO2" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertGunshot" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertHelp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertMasking" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertTHC" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertTamper" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertTemp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertVOC" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertVape" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "savedClipDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorName" : {
            "type" : "string",
            "nullable" : true
          },
          "sensorToCamerasMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "triggerNotification" : {
            "type" : "boolean",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "HardwareInvoiceSubItem" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "price" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "HardwareType" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "enforcedMinFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "mac" : {
            "type" : "string",
            "nullable" : true
          },
          "manufacturedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pendingRegistrationDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pendingRegistrationOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pendingRegistrationToken" : {
            "type" : "string",
            "nullable" : true
          },
          "sdSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "HardwareVariationEnum" : {
        "type" : "string",
        "enum" : [ "RASPBERRY_PI_3", "CAMERA_R1", "CAMERA_R2", "CAMERA_R2_LONG_RANGE", "CAMERA_R2_180", "CAMERA_R3", "CAMERA_R4", "CAMERA_R100", "CAMERA_R120", "CAMERA_R170", "CAMERA_R200", "CAMERA_R500", "CAMERA_R510", "CAMERA_R520", "CAMERA_R600", "SENSOR_ASSET_TAG_T1", "SENSOR_DOOR_D1", "SENSOR_DOOR_D20", "SENSOR_ENVIRONMENTAL_E1", "SENSOR_ENVIRONMENTAL_E15", "SENSOR_ENVIRONMENTAL_E2", "SENSOR_MOTION_M1", "SENSOR_MOTION_M15", "GATEWAY_A1", "GATEWAY_A100", "GATEWAY_ENVIRONMENTAL_E50", "CAMERA_R220", "CAMERA_R230", "CAMERA_R36S", "CAMERA_R410", "CAMERA_R540", "CAMERA_R545", "BADGE_READER_DR1", "BADGE_READER_DR40", "BADGE_READER_DR20", "DOOR_CONTROLLER_DC1", "DOOR_CONTROLLER_DC20", "DOOR_CONTROLLER_DC10", "ETHERNET_TESTER_ET1", "IO_BOARD_TB1", "BLE_BUTTON_B10", "BLE_BUTTON_B15", "CAMERA_THIRD_PARTY_RELAY", "CAMERA_THIRD_PARTY_NVR", "NVR_N100", "CAMERA_R130", "NVR_N500", "CAMERA_R150", "UNSPECIFIED" ]
      },
      "HeatIndexRangeWarningEnum" : {
        "type" : "string",
        "enum" : [ "HEAT_INDEX_OK", "HEAT_INDEX_WARNING", "HEAT_INDEX_UNSUPPORTED" ]
      },
      "Help_CreateTicketWSRequest" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "type" : "string",
            "nullable" : true
          },
          "collaborators" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "consoleAccessGranted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "serviceType" : {
            "type" : "string",
            "nullable" : true
          },
          "subject" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Help_CreateTicketWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ticketId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Help_GetOpenTicketsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Help_GetOpenTicketsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "tickets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Help_TicketInformation"
            },
            "nullable" : true
          },
          "userTickets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Help_TicketInformation"
            },
            "nullable" : true
          }
        }
      },
      "Help_GetOpenTicketsWSRequest" : {
        "type" : "object",
        "properties" : {
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Page number used for paginated response. If empty, the search will return the first page.",
            "nullable" : true
          }
        }
      },
      "Help_GetOpenTicketsWSResponse" : {
        "type" : "object",
        "properties" : {
          "currentPage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "hasNexPage" : {
            "type" : "boolean",
            "description" : "True if there is a next page, false otherwise",
            "nullable" : true
          },
          "tickets" : {
            "type" : "array",
            "description" : "Serial numbers of the devices that should be reassigned to target organization. List must contain at least one entry.",
            "items" : {
              "$ref" : "#/components/schemas/Help_TicketInformation"
            },
            "maxItems" : 50,
            "nullable" : true
          },
          "totalTickets" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of tickets, not limited to the current page",
            "nullable" : true
          }
        }
      },
      "Help_ProcessRMAWSRequest" : {
        "type" : "object",
        "properties" : {
          "contactName" : {
            "type" : "string",
            "nullable" : true
          },
          "contactPhoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "problem" : {
            "type" : "string",
            "nullable" : true
          },
          "returnShippingAddress" : {
            "$ref" : "#/components/schemas/Help_ShippingAddress"
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Help_ProcessRMAWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ticketId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Help_SendFeedbackWSRequest" : {
        "type" : "object",
        "properties" : {
          "feedback" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Help_SendFeedbackWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Help_ShippingAddress" : {
        "type" : "object",
        "properties" : {
          "returnAddressCity" : {
            "type" : "string",
            "nullable" : true
          },
          "returnAddressCountry" : {
            "type" : "string",
            "nullable" : true
          },
          "returnAddressPostalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "returnAddressState" : {
            "type" : "string",
            "nullable" : true
          },
          "returnAddressStreet" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Help_TicketInformation" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          },
          "subject" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Help_TriageDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Help_TriageDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareUpdates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosticEventType"
            },
            "nullable" : true
          },
          "hardwareFailureEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosticEventType"
            },
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          },
          "suggestedArticles" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "uptimeWindows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          }
        }
      },
      "HttpHeaders" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "nullable" : true
          },
          "nullable" : true
        },
        "nullable" : true,
        "properties" : {
          "accept" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MediaType"
            },
            "nullable" : true
          },
          "acceptCharset" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "nullable" : true,
              "properties" : {
                "registered" : {
                  "type" : "boolean",
                  "nullable" : true
                }
              }
            },
            "nullable" : true
          },
          "acceptLanguage" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "nullable" : true,
              "properties" : {
                "range" : {
                  "type" : "string",
                  "nullable" : true
                },
                "weight" : {
                  "type" : "number",
                  "format" : "double",
                  "nullable" : true
                }
              }
            },
            "nullable" : true
          },
          "acceptLanguageAsLocales" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "nullable" : true,
              "properties" : {
                "country" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayCountry" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayLanguage" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayName" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayScript" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayVariant" : {
                  "type" : "string",
                  "nullable" : true
                },
                "extensionKeys" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "nullable" : true,
                  "uniqueItems" : true
                },
                "iso3Country" : {
                  "type" : "string",
                  "nullable" : true
                },
                "iso3Language" : {
                  "type" : "string",
                  "nullable" : true
                },
                "language" : {
                  "type" : "string",
                  "nullable" : true
                },
                "script" : {
                  "type" : "string",
                  "nullable" : true
                },
                "unicodeLocaleAttributes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "nullable" : true,
                  "uniqueItems" : true
                },
                "unicodeLocaleKeys" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "nullable" : true,
                  "uniqueItems" : true
                },
                "variant" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            },
            "nullable" : true
          },
          "acceptPatch" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MediaType"
            },
            "nullable" : true
          },
          "accessControlAllowCredentials" : {
            "type" : "boolean",
            "nullable" : true
          },
          "accessControlAllowHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "accessControlAllowMethods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HttpMethod"
            },
            "nullable" : true
          },
          "accessControlAllowOrigin" : {
            "type" : "string",
            "nullable" : true
          },
          "accessControlExposeHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "accessControlMaxAge" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessControlRequestHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "accessControlRequestMethod" : {
            "$ref" : "#/components/schemas/HttpMethod"
          },
          "all" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "writeOnly" : true
          },
          "allow" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HttpMethod"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "basicAuth" : {
            "type" : "string",
            "nullable" : true,
            "writeOnly" : true
          },
          "bearerAuth" : {
            "type" : "string",
            "nullable" : true,
            "writeOnly" : true
          },
          "cacheControl" : {
            "type" : "string",
            "nullable" : true
          },
          "connection" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "contentLanguage" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "country" : {
                "type" : "string",
                "nullable" : true
              },
              "displayCountry" : {
                "type" : "string",
                "nullable" : true
              },
              "displayLanguage" : {
                "type" : "string",
                "nullable" : true
              },
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "displayScript" : {
                "type" : "string",
                "nullable" : true
              },
              "displayVariant" : {
                "type" : "string",
                "nullable" : true
              },
              "extensionKeys" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "iso3Country" : {
                "type" : "string",
                "nullable" : true
              },
              "iso3Language" : {
                "type" : "string",
                "nullable" : true
              },
              "language" : {
                "type" : "string",
                "nullable" : true
              },
              "script" : {
                "type" : "string",
                "nullable" : true
              },
              "unicodeLocaleAttributes" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "unicodeLocaleKeys" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "variant" : {
                "type" : "string",
                "nullable" : true
              }
            }
          },
          "contentLength" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "contentType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "date" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "empty" : {
            "type" : "boolean",
            "nullable" : true
          },
          "etag" : {
            "type" : "string",
            "nullable" : true
          },
          "expires" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "host" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "address" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "byte",
                      "nullable" : true
                    },
                    "nullable" : true
                  },
                  "anyLocalAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "canonicalHostName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "hostAddress" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "hostName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "linkLocalAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "loopbackAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mcglobal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mclinkLocal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mcnodeLocal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mcorgLocal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mcsiteLocal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "multicastAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "siteLocalAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  }
                }
              },
              "hostName" : {
                "type" : "string",
                "nullable" : true
              },
              "hostString" : {
                "type" : "string",
                "nullable" : true
              },
              "port" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "unresolved" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "ifMatch" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ifModifiedSince" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "ifNoneMatch" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ifUnmodifiedSince" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "location" : {
            "type" : "string",
            "format" : "uri",
            "nullable" : true
          },
          "origin" : {
            "type" : "string",
            "nullable" : true
          },
          "pragma" : {
            "type" : "string",
            "nullable" : true
          },
          "range" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HttpRange"
            },
            "nullable" : true
          },
          "upgrade" : {
            "type" : "string",
            "nullable" : true
          },
          "vary" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "HttpMethod" : {
        "type" : "object"
      },
      "HttpRange" : {
        "type" : "object"
      },
      "HttpStatusCode" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is1xxInformational" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is2xxSuccessful" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is3xxRedirection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is4xxClientError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is5xxServerError" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "IAperioType" : {
        "type" : "object",
        "description" : "The updated Aperio integration configuration.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IAudioUserConfig" : {
        "type" : "object",
        "properties" : {
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_analysis_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_analysis_params" : {
            "$ref" : "#/components/schemas/AudioParamConfig"
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_days" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cloud_archive_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "cloud_archive_upload_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "cloud_archive_upload_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_upload_schedule_uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "event_clip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_event_duration_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "splice_clip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "vlan_ip_v4_address" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "IAvigilonAltaType" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorToCameraMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "eventToWebhookIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "eventToWebhookMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WebhookMapEntry"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "IBaseIntegrationType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "integration"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/AperioType"
        }, {
          "$ref" : "#/components/schemas/AvigilonAltaType"
        }, {
          "$ref" : "#/components/schemas/BrivoType"
        }, {
          "$ref" : "#/components/schemas/ButterflyMXType"
        }, {
          "$ref" : "#/components/schemas/DeviceIntegrationType"
        }, {
          "$ref" : "#/components/schemas/DiceType"
        }, {
          "$ref" : "#/components/schemas/EnvoyType"
        }, {
          "$ref" : "#/components/schemas/FlicType"
        }, {
          "$ref" : "#/components/schemas/GeneaType"
        }, {
          "$ref" : "#/components/schemas/GoogleType"
        }, {
          "$ref" : "#/components/schemas/GuestManagementType"
        }, {
          "$ref" : "#/components/schemas/InformacastType"
        }, {
          "$ref" : "#/components/schemas/InnerRangeType"
        }, {
          "$ref" : "#/components/schemas/KisiType"
        }, {
          "$ref" : "#/components/schemas/LumeoType"
        }, {
          "$ref" : "#/components/schemas/MicrosoftTeamsType"
        }, {
          "$ref" : "#/components/schemas/NineOneOneCellularType"
        }, {
          "$ref" : "#/components/schemas/OmnialertType"
        }, {
          "$ref" : "#/components/schemas/OpenAIType"
        }, {
          "$ref" : "#/components/schemas/OpentechAllianceType"
        }, {
          "$ref" : "#/components/schemas/PimlocType"
        }, {
          "$ref" : "#/components/schemas/PlaceOsType"
        }, {
          "$ref" : "#/components/schemas/ProDataKeyType"
        }, {
          "$ref" : "#/components/schemas/RaptorType"
        }, {
          "$ref" : "#/components/schemas/ShellyType"
        }, {
          "$ref" : "#/components/schemas/ToastType"
        }, {
          "$ref" : "#/components/schemas/WebhooksType"
        }, {
          "$ref" : "#/components/schemas/ZapierType"
        } ],
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IBrivoType" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "IButterflyMXType" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "buildingWebhookIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "panelInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ButterflymxPanelInfoType"
            },
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IClimateUserConfig" : {
        "type" : "object",
        "properties" : {
          "accelerometer_change_tamper_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "accelerometer_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alert_window_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pressure_switch_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "smoke_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thc_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "IDeviceIntegrationType" : {
        "type" : "object",
        "properties" : {
          "deviceSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DeviceIntegrationSettings"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IDiceType" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IEnvoyType" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "envoyIntegrationInstalled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "envoyUserSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EnvoyUserSettings"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "locationInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EnvoyLocationInfoType"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IFlicType" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "apiSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "associatedLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "moduleUploaded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IGeneaType" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IGoogleType" : {
        "type" : "object",
        "properties" : {
          "allowUserStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultAlertFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultAlertFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveAllAlerts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/GoogleUserSettings"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IGuestManagementType" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "locationSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/LocationSettings"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IInformacastType" : {
        "type" : "object",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IInnerRangeType" : {
        "type" : "object",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "consoleToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/InnerRangeConsoleSettings"
            },
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/InnerRangeDoorInfoType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "skyTunnelSN" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IKisiType" : {
        "type" : "object",
        "properties" : {
          "apiSecretKey" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultOptions" : {
            "$ref" : "#/components/schemas/BadgeIntegrationDefaultOptions"
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "placeToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationSettings"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ILumeoType" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IMicrosoftTeamsType" : {
        "type" : "object",
        "properties" : {
          "adminConsent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "allowUserNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "microsoftTeamSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MicrosoftTeamsChannelSettings"
            },
            "nullable" : true
          },
          "microsoftTeamsUserSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MicrosoftTeamsUserSettings"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "tenantId" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "INineOneOneCellularType" : {
        "type" : "object",
        "properties" : {
          "bearerToken" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "securityZoneMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SecurityZoneInfoType"
            },
            "nullable" : true
          },
          "triggerNotification" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookToken" : {
            "type" : "string",
            "nullable" : true
          },
          "zonesValidated" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "IOmnialertType" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "triggerNotification" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IOpenAIType" : {
        "type" : "object",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "baseUrl" : {
            "type" : "string",
            "description" : "The base url for any OpenAI Chat Completions compliant API. For example, to use Gemini models, set this to 'https://generativelanguage.googleapis.com/v1beta/openai/'.  If left blank, we will try to use OpenAI models.",
            "nullable" : true
          },
          "defaultModel" : {
            "type" : "string",
            "description" : "The model identifier to use as a default model.  This is provider specific and typically found on model card pages. For example, set to 'gemini-2.0-flash' to use the Gemini 2.0 Flash model.  Currently we require a model with vision capabilities for this integration.",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IOpentechAllianceType" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "apiSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "facilityToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OpentechAllianceFacilitySettings"
            },
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IPimlocType" : {
        "type" : "object",
        "properties" : {
          "baseAPIUrl" : {
            "type" : "string",
            "enum" : [ "US", "EU" ],
            "nullable" : true
          },
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "validCredentials" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "IPlaceOsType" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "apiUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "triggerNotification" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IProDataKeyType" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "organizationId" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "systemId" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IRaptorType" : {
        "type" : "object",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IShellyType" : {
        "type" : "object",
        "properties" : {
          "canSendDiagnosticNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "diagnosticQuietPeriodSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "shellyDeviceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ShellyDevice"
            },
            "nullable" : true
          },
          "thirdPartyDeviceToLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IToastType" : {
        "type" : "object",
        "properties" : {
          "currentToastRestaurantGuid" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "restaurantSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ToastRestaurantSettings"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IWebhooksType" : {
        "type" : "object",
        "properties" : {
          "activityWebhooks" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "activityWebhooksV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WebhookInfo"
            },
            "nullable" : true
          },
          "diagnosticWebhooks" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "diagnosticWebhooksV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WebhookInfo"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ImmixSettings" : {
        "type" : "object",
        "properties" : {
          "deviceList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "serverUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InformacastScenario" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "scenarioId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InformacastType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InnerRangeConsoleSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/InnerRangeDoorInfoType"
            },
            "nullable" : true
          },
          "skyTunnelSN" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "InnerRangeConsoleType" : {
        "type" : "object",
        "properties" : {
          "doorList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InnerRangeDoorType"
            },
            "nullable" : true
          },
          "skyTunnelSN" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InnerRangeDoorInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorName" : {
            "type" : "string",
            "nullable" : true
          },
          "leadingSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "readerIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "remoteUnlock" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "InnerRangeDoorType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "readerIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "InnerRangeType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "consoleToSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/InnerRangeConsoleSettings"
              },
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/InnerRangeDoorInfoType"
              },
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "skyTunnelSN" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntegratedDoorPositionIndicatorType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "dpiType" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorEnumType"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntegratedDoorRelayType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorRelayPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rateLimitingEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "relayType" : {
            "$ref" : "#/components/schemas/DoorRelayEnumType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntegratedGenericButtonType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "buttonType" : {
            "$ref" : "#/components/schemas/ButtonEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "mode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/ButtonPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntegratedGenericInputType" : {
        "type" : "object",
        "properties" : {
          "auxType" : {
            "$ref" : "#/components/schemas/AuxiliaryEnumType"
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryInputPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntegratedGenericRelayType" : {
        "type" : "object",
        "properties" : {
          "auxType" : {
            "$ref" : "#/components/schemas/AuxiliaryEnumType"
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryRelayPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "relayDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "deprecated" : true,
            "description" : "Deprecated, do not use.",
            "nullable" : true
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "steadyState" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntegratedRequestToExitType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "intentOnly" : {
            "type" : "boolean",
            "nullable" : true
          },
          "intentOnlyEvents" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/RequestToExitPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rexType" : {
            "$ref" : "#/components/schemas/RequestToExitEnumType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntegrationActionStatusEnum" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "ERROR", "BACKOFF", "IGNORED", "UNKNOWN" ]
      },
      "IntegrationAuditEvent" : {
        "type" : "object",
        "properties" : {
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "integrationAuditEvent" : {
            "$ref" : "#/components/schemas/IntegrationAuditEventEnum"
          },
          "user" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntegrationAuditEventEnum" : {
        "type" : "string",
        "enum" : [ "UPDATE", "DELETE" ]
      },
      "IntegrationCommandActionType" : {
        "type" : "object",
        "properties" : {
          "commandPayload" : {
            "type" : "string",
            "nullable" : true
          },
          "delaySecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          }
        }
      },
      "IntegrationDiagnosticEventType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "type" : "string",
            "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "thirdPartyDeviceId" : {
            "type" : "string",
            "nullable" : true
          },
          "thirdPartyDeviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntegrationEnum" : {
        "type" : "string",
        "enum" : [ "AVIGILON_ALTA", "BRIVO", "BUTTERFLY_MX", "DEVICE_INTEGRATION", "DICE", "ENVOY", "FLIC", "GENEA", "GOOGLE", "GUEST_MANAGEMENT", "INFORMACAST", "INNER_RANGE", "KISI", "LUMEO", "MICROSOFT_TEAMS", "OMNIALERT", "OPENAI", "OPENTECH_ALLIANCE", "PIMLOC", "PLACE_OS", "PRODATAKEY", "SHELLY", "TOAST", "WEBHOOKS", "ZAPIER", "RAPTOR", "NINEONEONE_CELLULAR", "SLACK", "APERIO", "UNKNOWN" ]
      },
      "IntegrationNotificationActionType" : {
        "type" : "object",
        "properties" : {
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "notificationEntity" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationTarget" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_BaseIntegrationWSRequest" : {
        "type" : "object"
      },
      "Integration_CreateEnvoyInviteWSRequest" : {
        "type" : "object",
        "properties" : {
          "invitation" : {
            "$ref" : "#/components/schemas/EnvoyInvite"
          }
        }
      },
      "Integration_GetAccessControlIntegrationsForAlmWSResponse" : {
        "type" : "object",
        "properties" : {
          "badDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "integrations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetAllGuestsWSResponse" : {
        "type" : "object",
        "properties" : {
          "allGuests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Guest"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetAllOrgIntegrationsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgIntegrationsV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IBaseIntegrationType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetAmtReadersWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetAperioIntegrationWSRequest" : {
        "type" : "object"
      },
      "Integration_GetAperioIntegrationWSResponse" : {
        "type" : "object",
        "properties" : {
          "aperioSettings" : {
            "$ref" : "#/components/schemas/IAperioType"
          },
          "doorControllers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_AperioRhombusDoorControllerView"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetApiTokenApplicationsWSRequest" : {
        "type" : "object"
      },
      "Integration_GetApiTokenApplicationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiTokenApplicationType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetApiTokensWSRequest" : {
        "type" : "object",
        "properties" : {
          "optionalFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiClientTypeEnum"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetApiTokensWSResponse" : {
        "type" : "object",
        "properties" : {
          "apiTokens" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiTokenType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetBadgeIntegrationDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetBadgeIntegrationGenericDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericDoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetBadgeIntegrationPlacesWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "places" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaceType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetBrivoDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetBrivoDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetButterflymxPanelsWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetButterflymxPanelsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "buildings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ButterflymxBuilding"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetCalendlyEventDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetCalendlyEventDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyDeliveriesWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyDeliveriesWSResponse" : {
        "type" : "object",
        "properties" : {
          "collectedDeliveries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyDelivery"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pendingDeliveries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyDelivery"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyEmployeesWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyEmployeesWSResponse" : {
        "type" : "object",
        "properties" : {
          "employees" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyPersonInfo"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyLocationsWSRequest" : {
        "type" : "object"
      },
      "Integration_GetEnvoyLocationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyLocation"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyVisitorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "includeSignedOutVisitors" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyVisitorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invites" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyExpectedGuest"
            },
            "nullable" : true
          },
          "visitors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyGuest"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetFlicDevicesWSRequest" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetFlicDevicesWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flicDevices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlicDevice"
            },
            "nullable" : true
          },
          "flicModule" : {
            "$ref" : "#/components/schemas/FlicDevice"
          }
        }
      },
      "Integration_GetGeneaDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetGeneaDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "panelList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PanelType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetGuestWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          }
        }
      },
      "Integration_GetInformacastScenariosWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scenarios" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InformacastScenario"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetInnerRangeConsolesWSRequest" : {
        "type" : "object"
      },
      "Integration_GetInnerRangeConsolesWSResponse" : {
        "type" : "object",
        "properties" : {
          "consoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InnerRangeConsoleType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetInnerRangeDoorsWSRequest" : {
        "type" : "object"
      },
      "Integration_GetInnerRangeDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InnerRangeDoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetIntegrationDiagnosticEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "timestampMsAfter" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timestampMsBefore" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Integration_GetIntegrationDiagnosticEventsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "integrationDiagnosticEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationDiagnosticEventType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetKisiDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiSecretKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetKisiDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "placeToDoorMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DoorType"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetKisiIntegrationWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedGuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "kisiSettings" : {
            "$ref" : "#/components/schemas/KisiSettings"
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetKisiPlacesWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiSecretKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetMicrosoftUsersJoinedTeamsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "teamsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetNineOneOneCSZonesWSRequest" : {
        "type" : "object"
      },
      "Integration_GetNineOneOneCSZonesWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "zone" : {
            "$ref" : "#/components/schemas/SecurityZoneInfoType"
          },
          "zoneMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SecurityZoneInfoType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetOpenAIModelsWSRequest" : {
        "type" : "object",
        "properties" : {
          "openAISettings" : {
            "$ref" : "#/components/schemas/IOpenAIType"
          }
        }
      },
      "Integration_GetOpenAIModelsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "models" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpenAIModel"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetOpenpathDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetOpenpathLockdownsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lockdownPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LockdownType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetOpentechAllianceFacilitiesWSRequest" : {
        "type" : "object"
      },
      "Integration_GetOpentechAllianceFacilitiesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "facilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpentechAllianceFacilityType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetOrgIntegrationsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgIntegrationV2" : {
            "$ref" : "#/components/schemas/IBaseIntegrationType"
          }
        }
      },
      "Integration_GetOrgIntegrationsWSRequest" : {
        "type" : "object"
      },
      "Integration_GetOrgIntegrationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgIntegrations" : {
            "$ref" : "#/components/schemas/OrgIntegrationsType"
          }
        }
      },
      "Integration_GetPartnerApiTokensWSRequest" : {
        "type" : "object"
      },
      "Integration_GetPdkDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "ouId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetPdkDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "panelList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PanelType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetPdkSystemIdWSRequest" : {
        "type" : "object",
        "properties" : {
          "configurationToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetPdkSystemIdWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "systemId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetPlaceOsDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetRaptorBuildingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "buildings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RaptorBuilding"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetRaptorTemplatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "templates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RaptorTemplate"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableAllLocationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "businessDate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableAllLocationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventTable" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_GetToastEventsTableWSResponse_EventTableRow"
            },
            "nullable" : true
          },
          "failedGuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableWSRequest" : {
        "type" : "object",
        "properties" : {
          "businessDate" : {
            "type" : "string",
            "nullable" : true
          },
          "restaurantGuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventTable" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_GetToastEventsTableWSResponse_EventTableRow"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableWSResponse_EventTableRow" : {
        "type" : "object",
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "employeeName" : {
            "type" : "string",
            "nullable" : true
          },
          "orderGuid" : {
            "type" : "string",
            "nullable" : true
          },
          "paymentType" : {
            "type" : "string",
            "nullable" : true
          },
          "restaurantName" : {
            "type" : "string",
            "nullable" : true
          },
          "revenueCenterName" : {
            "type" : "string",
            "nullable" : true
          },
          "serviceAreaName" : {
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "nullable" : true
          },
          "tipAmount" : {
            "type" : "string",
            "nullable" : true
          },
          "totalAmount" : {
            "type" : "string",
            "nullable" : true
          },
          "totalDiscountAmount" : {
            "type" : "string",
            "nullable" : true
          },
          "voided" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetToastServiceAreasWSRequest" : {
        "type" : "object",
        "properties" : {
          "restaurantGuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetToastServiceAreasWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "serviceAreas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericPosType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateBrivoOAuthWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "description" : "Brivo Mashery API key obtained from Brivo Developer Portal",
            "nullable" : true
          },
          "param" : {
            "type" : "string",
            "nullable" : true
          },
          "requestUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateCallbackAuthRequest" : {
        "type" : "object",
        "properties" : {
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateCallbackAuthResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "integratorUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateOAuthWSRequest" : {
        "type" : "object",
        "properties" : {
          "param" : {
            "type" : "string",
            "nullable" : true
          },
          "requestUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateOAuthWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "redirectUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_RefreshGoogleAccessTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "refreshUserToken" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Integration_RefreshGoogleAccessTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_RevokeApiTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "tokenUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_RevokeApiTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_RevokeGoogleDriveAccessWSRequest" : {
        "type" : "object",
        "properties" : {
          "revokeUserAccount" : {
            "type" : "boolean",
            "description" : "If set to true, revokes Rhombus Systems access to a user's Google Drive account, otherwise revokes Rhombus Systems access to the org's shared Google Drive account",
            "nullable" : true
          }
        }
      },
      "Integration_SubmitApiTokenApplicationWSRequest" : {
        "type" : "object",
        "properties" : {
          "authType" : {
            "$ref" : "#/components/schemas/ApiTokenAuthTypeEnum"
          },
          "csr" : {
            "type" : "string",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "description" : "The role id that defines the permissions granted to the token",
            "nullable" : true
          }
        },
        "required" : [ "permissionGroupUuid" ]
      },
      "Integration_SubmitApiTokenApplicationWSResponse" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "cert" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "validCSR" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Integration_SubscribeZapierWebhookWSRequest" : {
        "type" : "object",
        "properties" : {
          "backoffSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorState" : {
            "type" : "string",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          },
          "hookUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "humidityLowerThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "humidityUpperThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempLowerThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempUpperThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "zapEnum" : {
            "$ref" : "#/components/schemas/ZapierEnum"
          }
        }
      },
      "Integration_SubscribeZapierWebhookWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_TogglePowerWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "string",
            "nullable" : true
          },
          "targetState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Integration_TogglePowerWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "newState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Integration_UnlockDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UnlockGeneaDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "doorId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UnlockIntegrationGenericDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "doorId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UnlockKisiDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "doorId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "placeId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Integration_UnlockOpenpathDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "doorId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Integration_UnsubscribeZapierWebhookWSRequest" : {
        "type" : "object",
        "properties" : {
          "webhookId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateAmtIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "amtSettings" : {
            "$ref" : "#/components/schemas/AmtSettings"
          }
        }
      },
      "Integration_UpdateAperioIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "aperioSettings" : {
            "$ref" : "#/components/schemas/IAperioType"
          }
        },
        "required" : [ "aperioSettings" ]
      },
      "Integration_UpdateApiTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "newDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "newPermissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateApiTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateAvigilonAltaV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "avigilonAltaSettings" : {
            "$ref" : "#/components/schemas/IAvigilonAltaType"
          }
        }
      },
      "Integration_UpdateAwsIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "awsSettings" : {
            "$ref" : "#/components/schemas/AwsSettings"
          }
        }
      },
      "Integration_UpdateBoxIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "boxSettings" : {
            "$ref" : "#/components/schemas/BoxSettings"
          }
        }
      },
      "Integration_UpdateBrivoIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "brivoSettings" : {
            "$ref" : "#/components/schemas/IBrivoType"
          }
        }
      },
      "Integration_UpdateBrivoIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "brivoSettings" : {
            "$ref" : "#/components/schemas/BrivoSettings"
          }
        }
      },
      "Integration_UpdateButterflymxIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "butterflymxSettings" : {
            "$ref" : "#/components/schemas/IButterflyMXType"
          }
        }
      },
      "Integration_UpdateButterflymxIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/ButterflyMXSettings"
          }
        }
      },
      "Integration_UpdateDeviceIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "createNewDevice" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceIntegrationSettings" : {
            "$ref" : "#/components/schemas/IDeviceIntegrationType"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "updateDevice" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updateDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateDiceIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "diceSettings" : {
            "$ref" : "#/components/schemas/IDiceType"
          }
        }
      },
      "Integration_UpdateDropboxIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "dropboxSettings" : {
            "$ref" : "#/components/schemas/DropboxSettingsV2"
          }
        }
      },
      "Integration_UpdateEmailIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "emailSettings" : {
            "$ref" : "#/components/schemas/EmailSettings"
          }
        }
      },
      "Integration_UpdateEnvoyIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "envoySettings" : {
            "$ref" : "#/components/schemas/IEnvoyType"
          }
        }
      },
      "Integration_UpdateEnvoyIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "envoySettings" : {
            "$ref" : "#/components/schemas/EnvoySettings"
          }
        }
      },
      "Integration_UpdateFlicIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "flicSettings" : {
            "$ref" : "#/components/schemas/IFlicType"
          }
        }
      },
      "Integration_UpdateGeneaIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "geneaSettings" : {
            "$ref" : "#/components/schemas/IGeneaType"
          }
        }
      },
      "Integration_UpdateGeneaIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "geneaSettings" : {
            "$ref" : "#/components/schemas/GeneaSettings"
          }
        }
      },
      "Integration_UpdateGoogleIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "googleSettings" : {
            "$ref" : "#/components/schemas/IGoogleType"
          }
        }
      },
      "Integration_UpdateGoogleIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "googleSettings" : {
            "$ref" : "#/components/schemas/GoogleSettings"
          }
        }
      },
      "Integration_UpdateGuestByTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateGuestManagementIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "guestManagementSettings" : {
            "$ref" : "#/components/schemas/IGuestManagementType"
          }
        }
      },
      "Integration_UpdateGuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          },
          "sendGuestEmail" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateHaloIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "haloSettings" : {
            "$ref" : "#/components/schemas/HaloSettings"
          }
        }
      },
      "Integration_UpdateInformacastIntegrationRequest" : {
        "type" : "object",
        "properties" : {
          "informacastSettings" : {
            "$ref" : "#/components/schemas/IInformacastType"
          }
        }
      },
      "Integration_UpdateInnerRangeIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "innerRangeSettings" : {
            "$ref" : "#/components/schemas/IInnerRangeType"
          }
        }
      },
      "Integration_UpdateIntuifaceIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/IntuifaceSettings"
          }
        }
      },
      "Integration_UpdateKisiIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "kisiSettings" : {
            "$ref" : "#/components/schemas/IKisiType"
          }
        }
      },
      "Integration_UpdateKisiIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "kisiSettings" : {
            "$ref" : "#/components/schemas/KisiSettings"
          }
        }
      },
      "Integration_UpdateLumeoIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lumeoSettings" : {
            "$ref" : "#/components/schemas/ILumeoType"
          }
        }
      },
      "Integration_UpdateMattermostIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "mattermostSettings" : {
            "$ref" : "#/components/schemas/MattermostSettings"
          }
        }
      },
      "Integration_UpdateMicrosoftTeamsBotForTeamWSRequest" : {
        "type" : "object",
        "properties" : {
          "teamId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateMicrosoftTeamsIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "microsoftTeamsSettings" : {
            "$ref" : "#/components/schemas/IMicrosoftTeamsType"
          },
          "teamsToUpdate" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_UpdateMicrosoftTeamsIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "microsoftTeamsSettings" : {
            "$ref" : "#/components/schemas/MicrosoftTeamsSettings"
          }
        }
      },
      "Integration_UpdateNineOneOneCellularIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "nineOneOneCellularSettings" : {
            "$ref" : "#/components/schemas/INineOneOneCellularType"
          }
        }
      },
      "Integration_UpdateNoonlightSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "noonlightSettings" : {
            "$ref" : "#/components/schemas/NoonlightSettings"
          }
        }
      },
      "Integration_UpdateOffice365IntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "office365Settings" : {
            "$ref" : "#/components/schemas/Office365Settings"
          }
        }
      },
      "Integration_UpdateOmnialertIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "omnialertSettings" : {
            "$ref" : "#/components/schemas/IOmnialertType"
          }
        }
      },
      "Integration_UpdateOmnialertIntegrationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateOpenAIIntegrationRequest" : {
        "type" : "object",
        "properties" : {
          "openAISettings" : {
            "$ref" : "#/components/schemas/IOpenAIType"
          }
        }
      },
      "Integration_UpdateOpenpathIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "openpathSettings" : {
            "$ref" : "#/components/schemas/OpenpathSettings"
          }
        }
      },
      "Integration_UpdateOpentechAllianceIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "opentechAllianceSettings" : {
            "$ref" : "#/components/schemas/IOpentechAllianceType"
          }
        }
      },
      "Integration_UpdateOpentechAllianceIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "opentechAllianceSettings" : {
            "$ref" : "#/components/schemas/OpentechAllianceSettings"
          }
        }
      },
      "Integration_UpdateOrgIntegrationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedGuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_UpdatePagerDutyIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "pagerDutySettings" : {
            "$ref" : "#/components/schemas/PagerDutySettings"
          }
        }
      },
      "Integration_UpdatePdkIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "pdkSettings" : {
            "$ref" : "#/components/schemas/IProDataKeyType"
          }
        }
      },
      "Integration_UpdatePdkIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "pdkSettings" : {
            "$ref" : "#/components/schemas/ProDataKeySettings"
          }
        }
      },
      "Integration_UpdatePimlocIntegrationRequest" : {
        "type" : "object",
        "properties" : {
          "pimlocSettings" : {
            "$ref" : "#/components/schemas/IPimlocType"
          }
        }
      },
      "Integration_UpdatePlaceOsSettingsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "placeOsSettings" : {
            "$ref" : "#/components/schemas/IPlaceOsType"
          }
        }
      },
      "Integration_UpdatePlaceOsSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "placeOsSettings" : {
            "$ref" : "#/components/schemas/PlaceOsSettings"
          }
        }
      },
      "Integration_UpdateRaptorIntegrationRequest" : {
        "type" : "object",
        "properties" : {
          "raptorSettings" : {
            "$ref" : "#/components/schemas/IRaptorType"
          }
        }
      },
      "Integration_UpdateServiceNowIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "serviceNowSettings" : {
            "$ref" : "#/components/schemas/ServiceNowSettings"
          }
        }
      },
      "Integration_UpdateShellyIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "shellySettings" : {
            "$ref" : "#/components/schemas/IShellyType"
          }
        }
      },
      "Integration_UpdateSlackIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "adminRequest" : {
            "type" : "boolean",
            "nullable" : true
          },
          "requestUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "revokeUserAccessToken" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "slackSettingsV2" : {
            "$ref" : "#/components/schemas/SlackSettingsV2"
          },
          "userAssociate" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userRequest" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateSlackIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "slackSettings" : {
            "$ref" : "#/components/schemas/SlackSettings"
          }
        }
      },
      "Integration_UpdateToastIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "restaurantGuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "toastSettings" : {
            "$ref" : "#/components/schemas/IToastType"
          }
        }
      },
      "Integration_UpdateToastIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "toastSettings" : {
            "$ref" : "#/components/schemas/ToastSettings"
          }
        }
      },
      "Integration_UpdateWebhookIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "isDiagnostic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedWebhookSettings" : {
            "$ref" : "#/components/schemas/IWebhooksType"
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateWebhookIntegrationV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateWebhookIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "webhookSettings" : {
            "$ref" : "#/components/schemas/WebhookSettings"
          }
        }
      },
      "Integration_ValidateKisiApiKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_aperio_AperioDeviceView" : {
        "type" : "object",
        "properties" : {
          "aperioId" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "gatewayId" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "rawType" : {
            "type" : "string",
            "format" : "byte",
            "nullable" : true
          }
        }
      },
      "Integration_aperio_AperioDoorView" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "aperioDoorDeviceId" : {
            "type" : "string",
            "nullable" : true
          },
          "aperioGatewayId" : {
            "type" : "string",
            "nullable" : true
          },
          "aperioId" : {
            "type" : "string",
            "nullable" : true
          },
          "connected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorExtensionComponentId" : {
            "type" : "string",
            "nullable" : true
          },
          "dtcs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_DtcInfoView"
            },
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "rawActivatorState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "rawDoorMode" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "rawHandleState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "rawKeyCylinderState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "rawTamperState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "removed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "stateUpdateEventTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DISCOVERED", "PAIRING", "CONFIGURED", "ERROR_OEM", "ERROR_OWNER" ],
            "nullable" : true
          }
        }
      },
      "Integration_aperio_AperioGatewayView" : {
        "type" : "object",
        "properties" : {
          "aperioGatewayId" : {
            "type" : "string",
            "nullable" : true
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "connected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "devices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_AperioDeviceView"
            },
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_AperioDoorView"
            },
            "nullable" : true
          },
          "dtcs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_DtcInfoView"
            },
            "nullable" : true
          },
          "expectedOemCode" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareModel" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVersion" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "protocolVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "rawTamperState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "reportedOemCode" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DISCOVERED", "PAIRING", "CONFIGURED", "ERROR_OEM", "ERROR_OWNER" ],
            "nullable" : true
          }
        }
      },
      "Integration_aperio_AperioRhombusDoorControllerView" : {
        "type" : "object",
        "properties" : {
          "aperioGateways" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_AperioGatewayView"
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "hwId" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_aperio_ClearAperioDtcWSRequest" : {
        "type" : "object",
        "properties" : {
          "aperioDeviceId" : {
            "type" : "string",
            "description" : "The Aperio device id (hex string) of the device to which this command is issued.",
            "nullable" : true
          },
          "aperioGatewayId" : {
            "type" : "string",
            "description" : "The Aperio device id (hex string) of the gateway hosting the device.",
            "nullable" : true
          },
          "controllerUuid" : {
            "type" : "string",
            "description" : "Uuid of the controller that the Aperio Hub is connected to.",
            "nullable" : true
          }
        },
        "required" : [ "aperioDeviceId", "aperioGatewayId", "controllerUuid" ]
      },
      "Integration_aperio_ClearAperioDtcWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_aperio_DownloadCertificateWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "description" : "RUUID of the Rhombus device (e.g. door controller) connected to an Aperio gateway.",
            "nullable" : true
          }
        },
        "required" : [ "ownerDeviceUuid" ]
      },
      "Integration_aperio_DtcInfoView" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "failing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hasFailed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "testCompleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Integration_aperio_RebootAperioGatewayWSRequest" : {
        "type" : "object",
        "properties" : {
          "aperioGatewayId" : {
            "type" : "string",
            "description" : "The Aperio device id (hex string) of the gateway.",
            "nullable" : true
          },
          "controllerUuid" : {
            "type" : "string",
            "description" : "Uuid of the controller that the Aperio Hub is connected to.",
            "nullable" : true
          }
        },
        "required" : [ "aperioGatewayId", "controllerUuid" ]
      },
      "Integration_aperio_RebootAperioGatewayWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_AddPartnerAsSuperAdminWSRequest" : {
        "type" : "object",
        "properties" : {
          "loginAccessAllowed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerName" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_AddPartnerAsSuperAdminWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "superAdminGroupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_CreateOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "accountOwnerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountOwnerName" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "developmentPartnerOrg" : {
            "type" : "boolean",
            "nullable" : true
          },
          "licenseEntitlementEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "salesforceId" : {
            "type" : "string",
            "nullable" : true
          },
          "sendWelcomeEmail" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Internal_CreateOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_CreatePartnerOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "accountOwnerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountOwnerName" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "salesforceId" : {
            "type" : "string",
            "nullable" : true
          },
          "sendWelcomeEmail" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Internal_CreatePartnerOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_CreateReturnedInventoryAuditReservationWSRequest" : {
        "type" : "object",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "miscNotes" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "returnType" : {
            "type" : "string",
            "enum" : [ "TRIAL", "SALES", "RMA", "OTHER", "UNKNOWN" ],
            "nullable" : true
          },
          "salesforceOppId" : {
            "type" : "string",
            "nullable" : true
          },
          "trackingNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_CreateReturnedInventoryAuditReservationWSResponse" : {
        "type" : "object",
        "properties" : {
          "auditReservationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "auditReservationUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_CreateSupportAuthorityWSRequest" : {
        "type" : "object",
        "properties" : {
          "supportAuthority" : {
            "$ref" : "#/components/schemas/SupportAuthorityType"
          }
        }
      },
      "Internal_CreateSupportAuthorityWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "supportAuthorityUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_DeveloperNewsletterEnrollWSRequest" : {
        "type" : "object",
        "properties" : {
          "developerNewsletter" : {
            "type" : "boolean",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "isDeveloper" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_DeveloperNewsletterEnrollWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_GetSuperAdminGroupUUIDWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_GetSuperAdminGroupUUIDWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "superAdminGroupUUID" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_GetWarrantyApprovedRMAsWSRequest" : {
        "type" : "object"
      },
      "Internal_GetWarrantyApprovedRMAsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "zendeskTickets" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Internal_InitiateShipmentWSRequest" : {
        "type" : "object",
        "properties" : {
          "rhombusShipmentInfo" : {
            "$ref" : "#/components/schemas/RhombusShipmentInfoType"
          },
          "salesforceOppId" : {
            "type" : "string",
            "nullable" : true
          },
          "shipmentCategory" : {
            "type" : "string",
            "enum" : [ "RMA", "PURCHASE_ORDER", "TRIAL", "UNKNOWN" ],
            "nullable" : true
          },
          "shipmentInfo" : {
            "$ref" : "#/components/schemas/OutgoingShipmentInfoType"
          }
        }
      },
      "Internal_ListOrgsWSRequest" : {
        "type" : "object"
      },
      "Internal_ListOrgsWSResponse" : {
        "type" : "object",
        "properties" : {
          "orgs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Internal_ParentLifetimeSpendWSRequest" : {
        "type" : "object",
        "properties" : {
          "endAccountIdx" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startAccountIdx" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Internal_ParentLifetimeSpendWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_ProDevicesOnlyWSRequest" : {
        "type" : "object",
        "properties" : {
          "accountDataMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Internal_ProDevicesOnlyWSRequest_AccountData"
            },
            "nullable" : true
          }
        }
      },
      "Internal_ProDevicesOnlyWSRequest_AccountData" : {
        "type" : "object",
        "properties" : {
          "opportunityIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_ProDevicesOnlyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedAccounts" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "successfulAccounts" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Internal_RequestHardwareForDevelopmentWSRequest" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "jobTitle" : {
            "type" : "string",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "requestReason" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "zip" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_RequestHardwareForDevelopmentWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_SendShipmentShippedEmailWSRequest" : {
        "type" : "object",
        "properties" : {
          "salesforceOppId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_SetOpportunityForPurchaseOrderWSRequest" : {
        "type" : "object",
        "properties" : {
          "cancellationReason" : {
            "type" : "string",
            "nullable" : true
          },
          "isAccepted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "purchaseOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "purchaseOrderUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "salesforceOppId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_SetOpportunityForPurchaseOrderWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_ShipmentEmailWSResponse" : {
        "type" : "object",
        "properties" : {
          "customerShipmentEmailState" : {
            "type" : "string",
            "enum" : [ "SHIPPING_CONFIRMATION_SUCCESS", "SHIPPING_CONFIRMATION_FAILURE", "SHIPPING_SHIPPED_SUCCESS", "SHIPPING_SHIPPED_FAILURE", "UNKNOWN" ],
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "legacyMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "trackingIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IntuifaceSettings" : {
        "type" : "object",
        "properties" : {
          "deviceToTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/TriggerContent"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InvalidPhysicalPortConfigType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "componentUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "reason" : {
            "$ref" : "#/components/schemas/InvalidPhysicalPortReasonEnumType"
          }
        }
      },
      "InvalidPhysicalPortReasonEnumType" : {
        "type" : "string",
        "enum" : [ "NON_EXISTANT_COMPONENT_BOARD_NUM", "NON_EXISTANT_COMPONENT_PORT_NUM", "CONFLICTING_COMPONENT_PORT_TYPES", "COMPONENT_PORT_TYPE_NOT_SUPPORTED_BY_PORT", "MAX_COMPONENTS_PER_PORT_TYPE_EXCEEDED" ]
      },
      "InvoiceType" : {
        "type" : "object",
        "properties" : {
          "addOnLicenseInvoices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddOnLicenseInvoiceType"
            },
            "nullable" : true
          },
          "additionalEmails" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "attachCsv" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cameraPurchaseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cameraPurchasePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "customerAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "customerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "customerName" : {
            "type" : "string",
            "nullable" : true
          },
          "date" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "domePurchaseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "domePurchasePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "domeSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "dueDate" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "externalId" : {
            "type" : "string",
            "nullable" : true
          },
          "installationPrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "license" : {
            "$ref" : "#/components/schemas/License"
          },
          "licenseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "licensePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "licenseSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LicenseInvoiceSubItem"
            },
            "nullable" : true
          },
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "r1Camera1024" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "r1Camera512" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "r1CameraPurchaseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "r1CameraPurchasePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "r1CameraSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "r1LargeCameraPurchaseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "r1LargeCameraPurchasePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "r1LargeSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "r1MediumSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "salespersonName" : {
            "type" : "string",
            "nullable" : true
          },
          "shippingPrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PAID", "UNPAID_PENDING", "UNPAID_OVERDUE", "CANCELLED" ],
            "nullable" : true
          },
          "tax" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceChargeWSRequest" : {
        "type" : "object",
        "properties" : {
          "invoiceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceChargeWSResponse" : {
        "type" : "object",
        "properties" : {
          "chargeSucceeded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "previouslyInitialized" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceDetailsV1WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invoice" : {
            "$ref" : "#/components/schemas/Invoice_InvoiceV1Type"
          }
        }
      },
      "Invoice_InvoiceDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "invoiceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invoice" : {
            "$ref" : "#/components/schemas/InvoiceType"
          }
        }
      },
      "Invoice_InvoiceV1LineItemType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "family" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "quantity" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "subtotal" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "unitPrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceV1Type" : {
        "type" : "object",
        "properties" : {
          "billingContactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "billingContactMailingCity" : {
            "type" : "string",
            "nullable" : true
          },
          "billingContactMailingCountry" : {
            "type" : "string",
            "nullable" : true
          },
          "billingContactMailingPostalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "billingContactMailingState" : {
            "type" : "string",
            "nullable" : true
          },
          "billingContactMailingStreet" : {
            "type" : "string",
            "nullable" : true
          },
          "billingContactName" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "dueDate" : {
            "type" : "string",
            "nullable" : true
          },
          "grandTotal" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "invoiceDate" : {
            "type" : "string",
            "nullable" : true
          },
          "invoiceNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Invoice_InvoiceV1LineItemType"
            },
            "nullable" : true
          },
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerBillingCity" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerBillingCountry" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerBillingPostalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerBillingState" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerBillingStreet" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerName" : {
            "type" : "string",
            "nullable" : true
          },
          "salespersonName" : {
            "type" : "string",
            "nullable" : true
          },
          "shipping" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          },
          "subtotal" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tax" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "KeypadConfigType" : {
        "type" : "object",
        "properties" : {
          "armCountdownSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "buildingAdminPhoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "cityName" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionState" : {
            "type" : "string",
            "enum" : [ "ONLINE", "OFFLINE" ],
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "showCallBuildingAdmin" : {
            "type" : "boolean",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "streetAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Keypad_AuthenticatePinRequest" : {
        "type" : "object",
        "properties" : {
          "pin" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Keypad_AuthenticatePinResponse" : {
        "type" : "object",
        "properties" : {
          "authenticated" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Keypad_ClaimKeypadActivationTokenRequest" : {
        "type" : "object",
        "properties" : {
          "activationToken" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Keypad_ClaimKeypadActivationTokenResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Keypad_GetCurrentKeypadWSRequest" : {
        "type" : "object"
      },
      "Keypad_GetCurrentKeypadWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "keypad" : {
            "$ref" : "#/components/schemas/KeypadConfigType"
          }
        }
      },
      "Keypad_GetKeypadsForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Keypad_GetKeypadsForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "keypads" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeypadConfigType"
            },
            "nullable" : true
          }
        }
      },
      "Keypad_GetKeypadsForOrgWSRequest" : {
        "type" : "object"
      },
      "Keypad_GetKeypadsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "keypads" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KeypadConfigType"
            },
            "nullable" : true
          }
        }
      },
      "Keypad_KeypadCheckinWSRequest" : {
        "type" : "object",
        "properties" : {
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Keypad_KeypadCheckinWSResponse" : {
        "type" : "object"
      },
      "Keypad_UnregisterKeypadRequest" : {
        "type" : "object",
        "properties" : {
          "keypadUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Keypad_UnregisterKeypadResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Keypad_UpdateKeypadRequest" : {
        "type" : "object",
        "properties" : {
          "armCountdownSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "buildingAdminPhoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "cityName" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "keypadUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "showCallBuildingAdmin" : {
            "type" : "boolean",
            "nullable" : true
          },
          "streetAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          }
        }
      },
      "Keypad_UpdateKeypadResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk" : {
        "type" : "object",
        "properties" : {
          "batteryLevel" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "enum" : [ "ONLINE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "printerIP" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "KioskSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "batteryLevel" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "enum" : [ "ONLINE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "printerIP" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_ClaimKioskActivationTokenRequest" : {
        "type" : "object",
        "properties" : {
          "activationToken" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_ClaimKioskActivationTokenResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_DeleteKioskWSRequest" : {
        "type" : "object",
        "properties" : {
          "kioskUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_DeleteKioskWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_GetCurrentKioskWSRequest" : {
        "type" : "object"
      },
      "Kiosk_GetCurrentKioskWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosk" : {
            "$ref" : "#/components/schemas/Kiosk_KioskWithInfo"
          }
        }
      },
      "Kiosk_GetKiosksForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_GetKiosksForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Kiosk"
            },
            "nullable" : true
          }
        }
      },
      "Kiosk_GetKiosksForOrgWSRequest" : {
        "type" : "object"
      },
      "Kiosk_GetKiosksForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Kiosk"
            },
            "nullable" : true
          }
        }
      },
      "Kiosk_KioskCheckinWSRequest" : {
        "type" : "object",
        "properties" : {
          "batterLevel" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Kiosk_KioskCheckinWSResponse" : {
        "type" : "object"
      },
      "Kiosk_KioskWithInfo" : {
        "type" : "object",
        "properties" : {
          "batteryLevel" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "enum" : [ "ONLINE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "printerIP" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_UnregisterKioskRequest" : {
        "type" : "object",
        "properties" : {
          "kioskUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_UnregisterKioskResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_UpdateKioskResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_UpdateKioskSelectiveRequest" : {
        "type" : "object",
        "properties" : {
          "kioskUpdate" : {
            "$ref" : "#/components/schemas/KioskSelectiveUpdate"
          }
        }
      },
      "KisiSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiSecretKey" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultOptions" : {
            "$ref" : "#/components/schemas/BadgeIntegrationDefaultOptions"
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorToCameraMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "placeId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "placeToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationSettings"
            },
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "KisiType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiSecretKey" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultOptions" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDefaultOptions"
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "placeToSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LabelIdentificationActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertLabelSet" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "alertUnidentified" : {
              "type" : "boolean",
              "nullable" : true
            },
            "allowedLabelSet" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "LeakProbeType" : {
        "type" : "object",
        "properties" : {
          "adcMv" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "adcRaw" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "leakDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "moistDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "present" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "License" : {
        "type" : "string",
        "enum" : [ "STARTER", "STANDARD", "ENTERPRISE", "LEGACY" ]
      },
      "LicenseFeature" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LicenseGroupStats" : {
        "type" : "object",
        "properties" : {
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "LicenseInvoiceSubItem" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "license" : {
            "$ref" : "#/components/schemas/License"
          },
          "price" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "LicenseStateStats" : {
        "type" : "object",
        "properties" : {
          "claimedCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the CLAIMED state.",
            "nullable" : true
          },
          "expiredCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the EXPIRED state.",
            "nullable" : true
          },
          "notRenewedCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the NOT_RENEWED state.",
            "nullable" : true
          },
          "pendingReturnCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the PENDING_RETURN state.",
            "nullable" : true
          },
          "permanentlyExpiredCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the PERMANENTLY_EXPIRED state.",
            "nullable" : true
          },
          "renewedCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the RENEWED state.",
            "nullable" : true
          }
        }
      },
      "LicenseUsageCatalogItem" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "addOnLicenseType" : {
              "$ref" : "#/components/schemas/AddOnLicense"
            },
            "cloudArchiveDays" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "deviceType" : {
              "$ref" : "#/components/schemas/DeviceTypeEnum"
            },
            "licenseFamily" : {
              "type" : "string",
              "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "LicenseUsageStats" : {
        "type" : "object",
        "properties" : {
          "addOnLicenseStats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddOnLicenseStats"
            },
            "nullable" : true
          },
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "LicenseUsageType" : {
        "type" : "object",
        "properties" : {
          "addOnLicenseType" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "additionalPerceptionFeatures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PerceptionType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "claimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "cloudArchiveDays" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "license" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "licenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "perceptionTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PerceptionType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_AssignACUDoorLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_AssignACUDoorLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "acuDoorLicense" : {
            "$ref" : "#/components/schemas/ACUDoorLicenseType"
          }
        }
      },
      "License_AssignAlertMonitoringLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "licenseUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_AssignAlertMonitoringLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "alertMonitoringLicense" : {
            "$ref" : "#/components/schemas/AlertMonitoringLicenseType"
          }
        }
      },
      "License_AssignDeviceLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_AssignDeviceLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "deviceLicense" : {
            "$ref" : "#/components/schemas/DeviceLicenseType"
          }
        }
      },
      "License_AssignLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_AssignLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "licenseUsage" : {
            "$ref" : "#/components/schemas/LicenseUsageType"
          }
        }
      },
      "License_CalculateLicensesStatsForClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CalculateLicensesStatsForClientOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "orgLicenseStats" : {
            "$ref" : "#/components/schemas/OrgLicenseStats"
          }
        }
      },
      "License_CalculateLicensesStatsForOrgWSRequest" : {
        "type" : "object"
      },
      "License_CalculateLicensesStatsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "orgLicenseStats" : {
            "$ref" : "#/components/schemas/OrgLicenseStats"
          }
        }
      },
      "License_CreateACUDoorLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CreateACUDoorLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CreateAlertMonitoringLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "allowedDeviceCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CreateAlertMonitoringLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CreateDeviceLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "licenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "licenseType" : {
            "$ref" : "#/components/schemas/License"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CreateDeviceLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CreateLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "cloudArchiveDays" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "license" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "licenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CreateLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_DeleteAlertMonitoringLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "licenseUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_DeleteAlertMonitoringLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_DeleteDeviceLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "licenseUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_DeleteDeviceLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_DeleteLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "licenseUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_DeleteLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_FindLicensesByClaimKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_FindLicensesByClaimKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseLicenseType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetACUDoorLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetACUDoorLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "acuDoorLicenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ACUDoorLicenseType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetACUDoorLicensesWSRequest" : {
        "type" : "object"
      },
      "License_GetACUDoorLicensesWSResponse" : {
        "type" : "object",
        "properties" : {
          "acuDoorLicenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ACUDoorLicenseType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetAlertMonitoringLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetAlertMonitoringLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "alertMonitoringLicenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringLicenseType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetAlertMonitoringLicensesWSRequest" : {
        "type" : "object"
      },
      "License_GetAlertMonitoringLicensesWSResponse" : {
        "type" : "object",
        "properties" : {
          "alertMonitoringLicenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringLicenseType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetDeviceLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetDeviceLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "deviceLicenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceLicenseType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetDeviceLicensesWSRequest" : {
        "type" : "object",
        "properties" : {
          "optionalDeviceTypeFilter" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          }
        }
      },
      "License_GetDeviceLicensesWSResponse" : {
        "type" : "object",
        "properties" : {
          "deviceLicenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceLicenseType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "licenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LicenseUsageType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetLicensesWSRequest" : {
        "type" : "object",
        "properties" : {
          "optionalDeviceTypeFilter" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          }
        }
      },
      "License_GetLicensesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LicenseUsageType"
            },
            "nullable" : true
          }
        }
      },
      "License_catalog_FindCatalogItemsWSRequest" : {
        "type" : "object",
        "properties" : {
          "productType" : {
            "type" : "string",
            "description" : "The product type used to filter license catalog items. If not specified, no filtering by product type is done.",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "License_catalog_FindCatalogItemsWSResponse" : {
        "type" : "object",
        "properties" : {
          "catalogItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseCatalogItem"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_catalog_GetCatalogItemByProductCodeWSRequest" : {
        "type" : "object",
        "properties" : {
          "productCode" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_catalog_GetCatalogItemByProductCodeWSResponse" : {
        "type" : "object",
        "properties" : {
          "catalogItem" : {
            "$ref" : "#/components/schemas/BaseCatalogItem"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ClaimLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ClaimLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ClaimLicensesWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ClaimLicensesWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "description" : "Uuid of the claim key that was submitted for claiming.",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_CreateClaimKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "entry" : {
            "$ref" : "#/components/schemas/ClaimKeyEntry"
          },
          "requestId" : {
            "type" : "string",
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "License_claimkey_CreateClaimKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_CreateRenewalClaimKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "entries" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ClaimKeyEntry"
            },
            "nullable" : true
          },
          "requestId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_CreateRenewalClaimKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_FindClaimKeysByOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimKeySearchFilter" : {
            "$ref" : "#/components/schemas/ClaimKeySearchFilter"
          }
        }
      },
      "License_claimkey_FindClaimKeysByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKeys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseClaimKey"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_GetClaimKeyByCodeForClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_GetClaimKeyByCodeForClientWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKey" : {
            "$ref" : "#/components/schemas/BaseClaimKey"
          }
        }
      },
      "License_claimkey_GetClaimKeyByCodeWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_GetClaimKeyByCodeWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKey" : {
            "$ref" : "#/components/schemas/BaseClaimKey"
          }
        }
      },
      "License_claimkey_GetClaimKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_GetClaimKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKey" : {
            "$ref" : "#/components/schemas/BaseClaimKey"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ReturnClaimKeyProductQuantitiesWSRequest" : {
        "type" : "object",
        "properties" : {
          "productQuantities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ReturnClaimKeyProductQuantitiesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LiveNotificationActionRecordType" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/LiveNotificationActionStatusEnum"
          }
        }
      },
      "LiveNotificationActionStatusEnum" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "ERROR", "IGNORED", "MUTED", "BACKOFF", "UNKNOWN" ]
      },
      "LocalDateTimeIntervalType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "localEndDateTime" : {
            "type" : "string",
            "description" : "Interval end time in 'yyyy-MM-ddTHH:mm:ss' format. Interval end time is exclusive.",
            "nullable" : true
          },
          "localStartDateTime" : {
            "type" : "string",
            "description" : "Interval start time in 'yyyy-MM-ddTHH:mm:ss' format. Interval start time is inclusive.",
            "nullable" : true
          }
        },
        "required" : [ "localEndDateTime", "localStartDateTime" ]
      },
      "LocalInterval" : {
        "type" : "object",
        "description" : "List of intervals each specifying door state during date range. List must contain at least one element",
        "properties" : {
          "localEndDateTime" : {
            "type" : "string",
            "description" : "Interval end time in 'yyyy-MM-ddTHH:mm:ss' format. Interval end time is exclusive.",
            "nullable" : true
          },
          "localStartDateTime" : {
            "type" : "string",
            "description" : "Interval start time in 'yyyy-MM-ddTHH:mm:ss' format. Interval start time is inclusive.",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          }
        },
        "required" : [ "localEndDateTime", "localStartDateTime", "state" ]
      },
      "LocationAccessGrantType" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "doorLabelIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sortKey" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "storedInS3" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LocationAccessRevocationType" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "doorLabelIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sortKey" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "storedInS3" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LocationFirstInSettings" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "doorAuthFirstInOutOfSync" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorAuthFirstInState" : {
            "$ref" : "#/components/schemas/FirstInState"
          },
          "doorAuthRequirementEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorScheduleFirstInOutOfSync" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorScheduleFirstInState" : {
            "$ref" : "#/components/schemas/FirstInState"
          },
          "doorScheduleRequirementEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "resets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseFirstInReset"
            },
            "nullable" : true
          },
          "settingsUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "LocationFunctionality" : {
        "type" : "string",
        "enum" : [ "ACCESS_CONDITIONS", "ACCESS_SCHEDULES", "DOOR_SETTINGS", "FIRST_IN_SETTINGS", "HARDWARE_CONFIG", "LOCKDOWN_MANAGEMENT", "UNKNOWN" ]
      },
      "LocationLockdownActivatedRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "LocationLockdownDeactivatedRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "LocationLockdownPlanType" : {
        "type" : "object",
        "properties" : {
          "activationPlan" : {
            "$ref" : "#/components/schemas/LockdownActivationPlanType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deactivationPlan" : {
            "$ref" : "#/components/schemas/LockdownDeactivationPlanType"
          },
          "defaultLockdownState" : {
            "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
          },
          "doorLockdownStateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "physicalAccess" : {
            "$ref" : "#/components/schemas/LockdownPhysicalAccessType"
          },
          "scopeUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "testPlan" : {
            "$ref" : "#/components/schemas/LockdownTestPlanType"
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownPlanScopeEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LocationLockdownStateEnumType" : {
        "type" : "string",
        "enum" : [ "STANDARD_SECURITY", "LOCKED_DOWN" ]
      },
      "LocationLockdownStateType" : {
        "type" : "object",
        "properties" : {
          "activeLockdownPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LockdownPlanReference"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followingTestPlan" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateEnumType"
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "LocationSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "printBadge" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "LocationType" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "floorPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloorPlanType"
            },
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "description" : "Labels offer a way to perform operations across multiple locations if they have the same label",
            "items" : {
              "type" : "string",
              "description" : "Labels offer a way to perform operations across multiple locations if they have the same label",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of this location",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "description" : "Uuid of the policy for this location",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "qualifiedAddress" : {
            "$ref" : "#/components/schemas/QualifiedAddressType"
          },
          "subLocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "tz" : {
            "type" : "string",
            "description" : "Timezone for this location",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "description" : "Location uuid to update/store settings for",
            "nullable" : true
          }
        }
      },
      "Location_AddLocationLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "locationIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_AddLocationLabelWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_CreateLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/LocationType"
          },
          "parentLocationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_CreateLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_DeleteLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_DeleteLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_GeoCodeWSRequest" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_GeoCodeWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "Location_GetLocationLabelsForOrgWSRequest" : {
        "type" : "object"
      },
      "Location_GetLocationLabelsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationLabels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          }
        }
      },
      "Location_GetLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsRequired" : {
            "type" : "boolean",
            "nullable" : true
          }
        },
        "required" : [ "locationUuid" ]
      },
      "Location_GetLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationType"
          }
        }
      },
      "Location_GetLocationsByGeoRequest" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsByGeoResponse" : {
        "type" : "object",
        "properties" : {
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsBySubLocationsHierarchyKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          }
        }
      },
      "Location_GetLocationsBySubLocationsHierarchyKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationType"
          }
        }
      },
      "Location_GetLocationsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "nameBeginsWithFilter" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "subLocationsIncluded" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true
          }
        }
      },
      "Location_QualifiedAddressTypeWithValidation" : {
        "type" : "object",
        "properties" : {
          "addressComplete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "addressLine2" : {
            "type" : "string",
            "description" : "apt, suite, or unit",
            "nullable" : true
          },
          "addressline1" : {
            "type" : "string",
            "description" : "street address",
            "nullable" : true
          },
          "administrativeArea" : {
            "type" : "string",
            "description" : "state",
            "nullable" : true
          },
          "locality" : {
            "type" : "string",
            "description" : "city",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "description" : "zip code",
            "nullable" : true
          },
          "regionCode" : {
            "type" : "string",
            "description" : "country",
            "nullable" : true
          },
          "validatedAddressline1" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedAdminestrativeArea" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedLocality" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedPostalCode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedRegionCode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedSubpremise" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Location_RemoveLocationLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "locationIdentifier" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_RemoveLocationLabelWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_SelectiveUpdateLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "floorPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloorPlanType"
            },
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "description" : "Labels offer a way to perform operations across multiple locations if they have the same label",
            "items" : {
              "type" : "string",
              "description" : "Labels offer a way to perform operations across multiple locations if they have the same label",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "description" : "Location uuid to update settings for",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of this location",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "description" : "Uuid of the policy for this location",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "timezoneId" : {
            "type" : "string",
            "description" : "Timezone identifier, e.g. America/Los_Angeles, EST, GMT+0, etc.",
            "nullable" : true
          },
          "tz" : {
            "type" : "object",
            "description" : "Use timezoneId field instead",
            "nullable" : true,
            "properties" : {
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "dstsavings" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "id" : {
                "type" : "string",
                "nullable" : true
              },
              "rawOffset" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              }
            }
          }
        },
        "required" : [ "locationUuid" ]
      },
      "Location_SelectiveUpdateLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_UpdateLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/LocationType"
          }
        }
      },
      "Location_UpdateLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_ValidateLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_ValidateLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "qualifiedAddress" : {
            "$ref" : "#/components/schemas/Location_QualifiedAddressTypeWithValidation"
          }
        }
      },
      "LockdownActivatedStateEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "activeLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "deactivatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followingTestPlan" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseLocationLockdownEventOriginator"
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownStateEventEnumType"
          }
        }
      },
      "LockdownActivationPlanType" : {
        "type" : "object",
        "properties" : {
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rhombusKeyNotificationMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "LockdownActivationResultEnumType" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "INVALID_LOCKDOWN_PLANS", "OPTIMISTIC_CONCURRENCY" ]
      },
      "LockdownDeactivatedStateEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "deactivatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followingTestPlan" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseLocationLockdownEventOriginator"
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownStateEventEnumType"
          }
        }
      },
      "LockdownDeactivationPlanType" : {
        "type" : "object",
        "properties" : {
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rhombusKeyNotificationMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "LockdownDeactivationResultEnumType" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "OPTIMISTIC_CONCURRENCY" ]
      },
      "LockdownEventOriginatorEnumType" : {
        "type" : "string",
        "enum" : [ "USER", "SUPPORT_AUTHORITY", "API_TOKEN", "RULE", "UNKNOWN" ]
      },
      "LockdownPhysicalAccessType" : {
        "type" : "object",
        "properties" : {
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "LockdownPlanReference" : {
        "type" : "object",
        "properties" : {
          "lockdownPlanUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scope" : {
            "$ref" : "#/components/schemas/LockdownPlanScopeEnumType"
          },
          "scopeUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LockdownPlanScopeEnumType" : {
        "type" : "string",
        "enum" : [ "ORG_LOCKDOWN", "LOCATION_LOCKDOWN" ]
      },
      "LockdownStateEventEnumType" : {
        "type" : "string",
        "enum" : [ "LOCKDOWN_ACTIVATED", "LOCKDOWN_DEACTIVATED" ]
      },
      "LockdownTestPlanType" : {
        "type" : "object",
        "properties" : {
          "doorStateOverrideEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userAccessOverrideEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "LockdownType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "isActive" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Logistics_GetRMAsWSRequest" : {
        "type" : "object"
      },
      "Logistics_GetRMAsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RMAType"
            },
            "nullable" : true
          }
        }
      },
      "Logistics_GetShipmentsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Logistics_GetShipmentsWSResponse" : {
        "type" : "object",
        "properties" : {
          "customerShipmentList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerShipmentType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LumeoSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LumeoType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ManualDoorStateChangeEnum" : {
        "type" : "string",
        "enum" : [ "DOOR_STATE_OVERRIDE", "CANCELLED_DOOR_STATE_OVERRIDE" ]
      },
      "ManualDoorStateChangeEnum_Minimal" : {
        "type" : "string",
        "enum" : [ "DOOR_STATE_OVERRIDE", "CANCELLED_DOOR_STATE_OVERRIDE" ]
      },
      "Maps_GenerateMapUrlWSRequest" : {
        "type" : "object",
        "properties" : {
          "baseUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Maps_GenerateMapUrlWSResponse" : {
        "type" : "object",
        "properties" : {
          "signedUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MattermostSettings" : {
        "type" : "object",
        "properties" : {
          "channel" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MediaType" : {
        "type" : "object",
        "properties" : {
          "charset" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "registered" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "concrete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "qualityValue" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "subtype" : {
            "type" : "string",
            "nullable" : true
          },
          "subtypeSuffix" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "wildcardSubtype" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wildcardType" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Mediadevice_GetBulkMediaDeviceDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "devices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Mediadevice_GetBulkMediaDeviceDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaDeviceDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Mediadevice_MediaDeviceDetailsType"
            },
            "nullable" : true
          }
        }
      },
      "Mediadevice_MediaDeviceDetailsType" : {
        "type" : "object",
        "properties" : {
          "audioGateways" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceFacetUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanCheckUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveH264Uris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveM3u8Uris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveMpdUris" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodM3u8UrisTemplates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodMpdUrisTemplates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "timezone" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "dstsavings" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "id" : {
                "type" : "string",
                "nullable" : true
              },
              "rawOffset" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              }
            }
          },
          "uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveM3u8Uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodH264UriTemplate" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MessageBodyWorkers" : {
        "type" : "object",
        "nullable" : true
      },
      "MetaDataLocationType" : {
        "type" : "object",
        "properties" : {
          "region" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Metric_LogEventWSRequest" : {
        "type" : "object",
        "properties" : {
          "logMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Metric_LogEventWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Metric_ReportErrorWSRequest" : {
        "type" : "object",
        "properties" : {
          "errorMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Metric_ReportErrorWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MicrosoftTeamsChannelSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "botInstallationId" : {
            "type" : "string",
            "nullable" : true
          },
          "channelId" : {
            "type" : "string",
            "nullable" : true
          },
          "installingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sendChannelNotifications" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "MicrosoftTeamsSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MicrosoftTeamsType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "adminConsent" : {
              "type" : "boolean",
              "nullable" : true
            },
            "allowUserNotifications" : {
              "type" : "boolean",
              "nullable" : true
            },
            "microsoftTeamSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/MicrosoftTeamsChannelSettings"
              },
              "nullable" : true
            },
            "microsoftTeamsUserSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/MicrosoftTeamsUserSettings"
              },
              "nullable" : true
            },
            "tenantId" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MicrosoftTeamsUserSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "botInstallationId" : {
            "type" : "string",
            "nullable" : true
          },
          "chatId" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "sendUserNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "teamIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "userId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MinimalAudioGatewayStateType" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MinimalDeviceStateType" : {
        "type" : "object",
        "properties" : {
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MinimalNVRStateType" : {
        "type" : "object",
        "properties" : {
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "numThirdPartyCamerasAssigned" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "numThirdPartyCamerasSupported" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MinimalObservableDeviceStateType" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MinimalThresholdEventType" : {
        "type" : "object",
        "properties" : {
          "crossingObject" : {
            "type" : "string",
            "enum" : [ "HUMAN", "VEHICLE", "UNKNOWN" ],
            "nullable" : true
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "INGRESS", "EGRESS" ],
            "nullable" : true
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "MinuteOfDayIntervalType" : {
        "type" : "object",
        "properties" : {
          "dayOfWeek" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfDayStartInclusive" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfDayStopExclusive" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MobileTokenOSEnum" : {
        "type" : "string",
        "enum" : [ "IOS", "ANDROID" ]
      },
      "Mobile_LoginToOrg2FARequiredResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "get2FAIdentifier" : {
              "type" : "string",
              "nullable" : true
            },
            "get2FAType" : {
              "type" : "string",
              "enum" : [ "EMAIL", "SMS", "VIRTUAL_MFA" ],
              "nullable" : true
            },
            "numDaysSkip2FAForTrustedDevices" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Mobile_LoginToOrgBaseResponse" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "Mobile_LoginToOrgRequest" : {
        "type" : "object",
        "properties" : {
          "csr" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Mobile_LoginToOrgSsoRequiredResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "redirectUri" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Mobile_LoginToOrgSuccessResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cert" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "orgUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "userUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Mobile_LoginVerifiedSupportAuthorityMobileRequest" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "clientType" : {
            "type" : "string",
            "enum" : [ "MOBILE", "IOS", "ANDROID", "BROWSER" ],
            "nullable" : true
          }
        }
      },
      "Mobile_LoginVerifiedSupportAuthorityMobileResponse" : {
        "type" : "object",
        "properties" : {
          "supportAuthoritySessionUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "valid" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Mobile_LogoutMobileUserRequest" : {
        "type" : "object"
      },
      "Mobile_LogoutMobileUserResponse" : {
        "type" : "object"
      },
      "Mobile_RefreshMobileSessionRequest" : {
        "type" : "object",
        "properties" : {
          "csr" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Mobile_RefreshMobileSessionResponse" : {
        "type" : "object",
        "properties" : {
          "cert" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Mobile_UpdateMobileNotificationTokenRequest" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Mobile_UpdateMobileNotificationTokenResponse" : {
        "type" : "object"
      },
      "Mobile_UpdateRhombusKeyMobileNotificationTokenRequest" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Mobile_UpdateRhombusKeyMobileNotificationTokenResponse" : {
        "type" : "object"
      },
      "ModularAIConfig" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "modelParams" : {
            "$ref" : "#/components/schemas/ModularAIModelParams"
          },
          "modelQuantizedBinaryContentLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "modelStatus" : {
            "type" : "string",
            "enum" : [ "READY", "QUANTIZE_IN_PROGRESS", "QUANTIZE_FAILURE" ],
            "nullable" : true
          },
          "modelUploadZipContentLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "restrictedOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ModularAIConfigSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "modelParams" : {
            "$ref" : "#/components/schemas/ModularAIModelParams"
          },
          "modelQuantizedBinaryContentLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "modelStatus" : {
            "type" : "string",
            "enum" : [ "READY", "QUANTIZE_IN_PROGRESS", "QUANTIZE_FAILURE" ],
            "nullable" : true
          },
          "modelUploadZipContentLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "restrictedOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ModularAIModelParams" : {
        "type" : "object",
        "properties" : {
          "classOutputMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "inputHeight" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "inputWidth" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Modularai_AddModelToDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "modelUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_AddModelToDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_GetDevicesForModelWSRequest" : {
        "type" : "object",
        "properties" : {
          "modelUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_GetDevicesForModelWSResponse" : {
        "type" : "object",
        "properties" : {
          "devices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_GetModelsAddedToDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_GetModelsAddedToDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "models" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModularAIConfig"
            },
            "nullable" : true
          }
        }
      },
      "Modularai_GetModelsWSRequest" : {
        "type" : "object"
      },
      "Modularai_GetModelsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "models" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ModularAIConfig"
            },
            "nullable" : true
          }
        }
      },
      "Modularai_RemoveModelFromDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "modelUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_RemoveModelFromDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_UpdateModelWSRequest" : {
        "type" : "object",
        "properties" : {
          "update" : {
            "$ref" : "#/components/schemas/ModularAIConfigSelectiveUpdate"
          }
        }
      },
      "Modularai_UpdateModelWSResponse" : {
        "type" : "object"
      },
      "MonitoringEnableStatus" : {
        "type" : "object",
        "properties" : {
          "devicesWithActiveSirens" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "disabledOnMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledOnMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "noNextTimestampReason" : {
            "type" : "string",
            "nullable" : true
          },
          "notEnabledReason" : {
            "type" : "string",
            "nullable" : true
          },
          "recentlyActivatedSirensTimestampMs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "MultiPart" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "bodyParts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BodyPart"
            },
            "nullable" : true
          },
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object",
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "providers" : {
            "$ref" : "#/components/schemas/Providers"
          }
        }
      },
      "MultivaluedMapStringParameterizedHeader" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/ParameterizedHeader"
          },
          "nullable" : true
        },
        "nullable" : true,
        "properties" : {
          "empty" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "MultivaluedMapStringString" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "nullable" : true
          },
          "nullable" : true
        },
        "nullable" : true,
        "properties" : {
          "empty" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Network_NetworkConfigurationWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "DHCP", "STATIC" ],
            "nullable" : true
          },
          "staticIpAddr" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIpGateway" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIpNameserver1" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIpNameserver2" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIpNetmask" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Network_NetworkConfigurationWSResponse" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "string",
            "enum" : [ "DHCP", "STATIC" ],
            "nullable" : true
          },
          "staticIpAddr" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIpGateway" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIpNameserver1" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIpNameserver2" : {
            "type" : "string",
            "nullable" : true
          },
          "staticIpNetmask" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "NineOneOneCellularType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "bearerToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "securityZoneMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/SecurityZoneInfoType"
              },
              "nullable" : true
            },
            "triggerNotification" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookToken" : {
              "type" : "string",
              "nullable" : true
            },
            "zonesValidated" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "NoonlightPromptTheme" : {
        "type" : "string",
        "enum" : [ "THREAT", "HUMAN" ]
      },
      "NoonlightScheduleType" : {
        "type" : "object",
        "properties" : {
          "audioGateways" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "escalationDelayMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "monitoredDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "promptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sirenSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AMSirenSettingsType"
            },
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "tripwire" : {
            "$ref" : "#/components/schemas/TripwireSettingsType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "verifiedThreatSiren" : {
            "$ref" : "#/components/schemas/AMSirenSettingsType"
          }
        }
      },
      "NoonlightSettings" : {
        "type" : "object",
        "properties" : {
          "acceptedTermsOfService" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultContactsByLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EmergencyContact"
            },
            "nullable" : true
          },
          "defaultDelayByLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "defaultPromptByLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/NoonlightPromptTheme"
            },
            "nullable" : true
          },
          "emergencyContactsByLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/EmergencyResponseContactsIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "escalationSettingsByLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlertMonitoringSubmissionDelayIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "locationEntryInstructionsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "pinsByLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlertMonitoringPinType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "verificationPrompt" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "NoonlightVersionedSettingsType" : {
        "type" : "object",
        "properties" : {
          "acceptedTermsOfService" : {
            "type" : "boolean",
            "nullable" : true
          },
          "badgeAuthDisablesMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultDelay" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "defaultEmergencyContact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "defaultPromptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "emergencyContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmergencyResponseContactsScheduleType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "entryInstructions" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "manualEscalationSettings" : {
            "$ref" : "#/components/schemas/NoonlightScheduleType"
          },
          "modifiedByEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedByIntegration" : {
            "type" : "boolean",
            "nullable" : true
          },
          "modifiedByMetadata" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedByUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "monitoringMode" : {
            "type" : "string",
            "enum" : [ "MANUAL", "SCHEDULED", "UNKNOWN" ],
            "nullable" : true
          },
          "oneTimePauses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "oneTimeSchedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringPinType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "schedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "talkdownEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "NormalStateEnumType" : {
        "type" : "string",
        "enum" : [ "NO", "NC" ]
      },
      "NotificationEnumType" : {
        "type" : "string",
        "enum" : [ "SMS", "EMAIL", "APP", "SLACK", "MICROSOFT_TEAMS", "BROWSER", "UNKNOWN" ]
      },
      "NotificationIntervalV2Type" : {
        "type" : "object",
        "properties" : {
          "activityTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationEnumType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "deviceFilterSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "diagnosticTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationEnumType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "locationActivityTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationEnumType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "locationDiagnosticTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationEnumType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "locationFilterSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationOnlyFilterSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "NotificationSettingsType" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "slackChannel" : {
            "type" : "string",
            "nullable" : true
          },
          "slackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "slackWebhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "NotificationTimeFrame" : {
        "type" : "object",
        "properties" : {
          "days" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "interval" : {
            "$ref" : "#/components/schemas/MinuteOfDayIntervalType"
          },
          "mediums" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationTimeFrameRow"
            },
            "nullable" : true
          }
        }
      },
      "NotificationTimeFrameRow" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "devices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "diagnostics" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationOnly" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationOnlyActivities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationOnlyDiagnostics" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "OAuthApplication" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecretHash" : {
            "type" : "string",
            "nullable" : true
          },
          "contactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "redirectUri" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Oauth_GetAllApplicationsForOrgWSRequest" : {
        "type" : "object"
      },
      "Oauth_GetAllApplicationsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "oauthApplications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OAuthApplication"
            },
            "nullable" : true
          }
        }
      },
      "Oauth_GetApplicationByClientIdWSRequest" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Oauth_GetApplicationByClientIdWSResponse" : {
        "type" : "object",
        "properties" : {
          "application" : {
            "$ref" : "#/components/schemas/OAuthApplication"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Oauth_OAuthApplicationWSRequest" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "contactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "redirectUri" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Oauth_OAuthApplicationWSResponse" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ObjectSearchModelEnum" : {
        "type" : "string",
        "enum" : [ "CLIP_512", "UNKNOWN" ]
      },
      "OccupancyEventType" : {
        "type" : "object",
        "properties" : {
          "baseStationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "batteryPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bleDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "bleRssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closeBaseStations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lux" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "VACANT", "MOVEMENT", "OCCUPIED" ],
            "nullable" : true
          },
          "stateChanged" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tampered" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "OccupancyPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OccupancyScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OccupancyScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "occupancyThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vacancyThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Occupancysensor_GetMinimalOccupancySensorStatesWSRequest" : {
        "type" : "object"
      },
      "Occupancysensor_GetMinimalOccupancySensorStatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "occupancySensorStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Occupancysensor_MinimalOccupancySensorStateType"
            },
            "nullable" : true
          }
        }
      },
      "Occupancysensor_GetOccupancyEventsForSensorWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Occupancysensor_GetOccupancyEventsForSensorWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OccupancyEventType"
            },
            "nullable" : true
          }
        }
      },
      "Occupancysensor_MinimalOccupancySensorStateType" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closestBaseStation" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "health" : {
            "type" : "string",
            "enum" : [ "RED", "GREEN" ],
            "nullable" : true
          },
          "healthDetails" : {
            "type" : "string",
            "enum" : [ "NO_HEARTBEAT", "FIRMWARE_BEHIND", "NONE" ],
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalizedLux" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rawLux" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "VACANT", "MOVEMENT", "OCCUPIED" ],
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          }
        }
      },
      "Occupancysensor_UpdateOccupancySensorDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Occupancysensor_UpdateOccupancySensorDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OccupiedActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "occupancyThresholdSec" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "Office365Settings" : {
        "type" : "object",
        "properties" : {
          "driveId" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "tenantId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OmnialertType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "associatedCameras" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "triggerNotification" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookToken" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OpenAIModel" : {
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "object" : {
            "type" : "string",
            "nullable" : true
          },
          "ownedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "owned_by" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OpenAIType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "baseUrl" : {
              "type" : "string",
              "description" : "The base url for any OpenAI Chat Completions compliant API. For example, to use Gemini models, set this to 'https://generativelanguage.googleapis.com/v1beta/openai/'.  If left blank, we will try to use OpenAI models.",
              "nullable" : true
            },
            "defaultModel" : {
              "type" : "string",
              "description" : "The model identifier to use as a default model.  This is provider specific and typically found on model card pages. For example, set to 'gemini-2.0-flash' to use the Gemini 2.0 Flash model.  Currently we require a model with vision capabilities for this integration.",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Openapi_GetOpenApiComponentSchemasWSRequest" : {
        "type" : "object",
        "properties" : {
          "changeType" : {
            "$ref" : "#/components/schemas/ChangeType"
          },
          "entity" : {
            "$ref" : "#/components/schemas/Entity"
          },
          "locationFunctionality" : {
            "$ref" : "#/components/schemas/LocationFunctionality"
          }
        }
      },
      "OpenpathSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorToCameraMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "eventToWebhookIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "eventToWebhookMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WebhookMapEntry"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceActionGroupType" : {
        "type" : "object",
        "properties" : {
          "actionGroupId" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceId" : {
            "type" : "string",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceDoorInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "actionGroupId" : {
            "type" : "string",
            "nullable" : true
          },
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorName" : {
            "type" : "string",
            "nullable" : true
          },
          "leadingSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "remoteUnlock" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceFacilitySettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OpentechAllianceDoorInfoType"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceFacilityType" : {
        "type" : "object",
        "properties" : {
          "actionGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpentechAllianceActionGroupType"
            },
            "nullable" : true
          },
          "deviceList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorType"
            },
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceSettings" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "apiSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "facilityToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OpentechAllianceFacilitySettings"
            },
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiKey" : {
              "type" : "string",
              "nullable" : true
            },
            "apiSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "facilityToSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/OpentechAllianceFacilitySettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OperationStatus" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE" ],
            "nullable" : true
          }
        }
      },
      "OrgGroupMemberType" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "RHOMBUS_ACCESS_CONTROL", "GUEST_MANAGEMENT_HOST" ],
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OrgGroupType" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "RHOMBUS_ACCESS_CONTROL", "GUEST_MANAGEMENT_HOST" ],
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OrgIntegrationsType" : {
        "type" : "object",
        "properties" : {
          "amtSettings" : {
            "$ref" : "#/components/schemas/AmtSettings"
          },
          "awsSettings" : {
            "$ref" : "#/components/schemas/AwsSettings"
          },
          "backblazeSettings" : {
            "$ref" : "#/components/schemas/BackblazeSettings"
          },
          "boxSettings" : {
            "$ref" : "#/components/schemas/BoxSettings"
          },
          "brivoSettings" : {
            "$ref" : "#/components/schemas/BrivoSettings"
          },
          "butterflymxSettings" : {
            "$ref" : "#/components/schemas/ButterflyMXSettings"
          },
          "diceSettings" : {
            "$ref" : "#/components/schemas/DiceSettings"
          },
          "dropboxSettingsV2" : {
            "$ref" : "#/components/schemas/DropboxSettingsV2"
          },
          "emailSettings" : {
            "$ref" : "#/components/schemas/EmailSettings"
          },
          "envoySettings" : {
            "$ref" : "#/components/schemas/EnvoySettings"
          },
          "geneaSettings" : {
            "$ref" : "#/components/schemas/GeneaSettings"
          },
          "googleSettings" : {
            "$ref" : "#/components/schemas/GoogleSettings"
          },
          "googleSettingsV2" : {
            "$ref" : "#/components/schemas/GoogleSettingsV2"
          },
          "haloSettings" : {
            "$ref" : "#/components/schemas/HaloSettings"
          },
          "immixSettings" : {
            "$ref" : "#/components/schemas/ImmixSettings"
          },
          "intuifaceSettings" : {
            "$ref" : "#/components/schemas/IntuifaceSettings"
          },
          "kisiSettings" : {
            "$ref" : "#/components/schemas/KisiSettings"
          },
          "lumeoSettings" : {
            "$ref" : "#/components/schemas/LumeoSettings"
          },
          "mattermostSettings" : {
            "$ref" : "#/components/schemas/MattermostSettings"
          },
          "microsoftTeamsSettings" : {
            "$ref" : "#/components/schemas/MicrosoftTeamsSettings"
          },
          "noonlightSettings" : {
            "$ref" : "#/components/schemas/NoonlightSettings"
          },
          "office365Settings" : {
            "$ref" : "#/components/schemas/Office365Settings"
          },
          "openpathSettings" : {
            "$ref" : "#/components/schemas/OpenpathSettings"
          },
          "opentechAllianceSettings" : {
            "$ref" : "#/components/schemas/OpentechAllianceSettings"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pagerDutySettings" : {
            "$ref" : "#/components/schemas/PagerDutySettings"
          },
          "placeOsSettings" : {
            "$ref" : "#/components/schemas/PlaceOsSettings"
          },
          "proDataKeySettings" : {
            "$ref" : "#/components/schemas/ProDataKeySettings"
          },
          "saltoSettings" : {
            "$ref" : "#/components/schemas/SaltoSettings"
          },
          "serviceNowSettings" : {
            "$ref" : "#/components/schemas/ServiceNowSettings"
          },
          "slackSettings" : {
            "$ref" : "#/components/schemas/SlackSettings"
          },
          "slackSettingsV2" : {
            "$ref" : "#/components/schemas/SlackSettingsV2"
          },
          "squareSettings" : {
            "$ref" : "#/components/schemas/SquareSettings"
          },
          "toastSettings" : {
            "$ref" : "#/components/schemas/ToastSettings"
          },
          "tpLinkSettings" : {
            "$ref" : "#/components/schemas/TPLinkSettings"
          },
          "twilioSettings" : {
            "$ref" : "#/components/schemas/TwilioSettings"
          },
          "webhookSettings" : {
            "$ref" : "#/components/schemas/WebhookSettings"
          }
        }
      },
      "OrgLicenseStats" : {
        "type" : "object",
        "properties" : {
          "acuDoorLicenseStats" : {
            "$ref" : "#/components/schemas/LicenseGroupStats"
          },
          "alertMonitoringLicenseStats" : {
            "$ref" : "#/components/schemas/LicenseGroupStats"
          },
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceLicenseStats" : {
            "$ref" : "#/components/schemas/DeviceAssignableLicenseGroupStats"
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "licenseUsageStats" : {
            "$ref" : "#/components/schemas/LicenseUsageStats"
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "OrgLockdownPlanType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "activationPlan" : {
            "$ref" : "#/components/schemas/LockdownActivationPlanType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deactivationPlan" : {
            "$ref" : "#/components/schemas/LockdownDeactivationPlanType"
          },
          "defaultLockdownState" : {
            "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
          },
          "doorLockdownStateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "physicalAccess" : {
            "$ref" : "#/components/schemas/LockdownPhysicalAccessType"
          },
          "scopeUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "testPlan" : {
            "$ref" : "#/components/schemas/LockdownTestPlanType"
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownPlanScopeEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OrgSamlSettingsType" : {
        "type" : "object",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledForRhombusKey" : {
            "type" : "boolean",
            "nullable" : true
          },
          "idpMetaDataXml" : {
            "type" : "string",
            "nullable" : true
          },
          "justInTimeAccountProvisioningEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "registrationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusKeyAppSettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "teamName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OrgType" : {
        "type" : "object",
        "properties" : {
          "accountOwnerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "firmwareUpdateSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          },
          "itemizedInvoice" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "newCameraFramerateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraResolutionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraSegmentMaxBytesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraVideoTargetQualityMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/NotificationSettingsType"
          },
          "partnerAccessAllowedUntil" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "planType" : {
            "type" : "string",
            "enum" : [ "TRIAL", "STARTER", "CUSTOM" ],
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "rbacSettings" : {
            "$ref" : "#/components/schemas/RBACSettingsType"
          },
          "samlSettings" : {
            "$ref" : "#/components/schemas/SAMLSettingsType"
          },
          "subscriptionEndDate" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "subscriptionStatus" : {
            "type" : "string",
            "enum" : [ "TRIAL", "PAID", "RESELLER", "LOST", "UNKNOWN" ],
            "nullable" : true
          },
          "subscriptionType" : {
            "type" : "string",
            "enum" : [ "STARTER", "PROFESSIONAL", "ENTERPRISE", "UNKNOWN" ],
            "nullable" : true
          },
          "supportAccessAllowedUntil" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "teamName" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PARTNER", "CUSTOMER", "UNKNOWN" ],
            "nullable" : true
          },
          "uapSettings" : {
            "$ref" : "#/components/schemas/UAPSettingsType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OrgV2Type" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "accountBillingContactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountOwnerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountTechnicalContactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountTechnicalContacts" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "audioAnalysisEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audioRecordingEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidthReportsDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "companyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "companyLogoUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "criticalStatusEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultPlayerViewLiveType" : {
            "$ref" : "#/components/schemas/PlayerViewLiveTypeEnum"
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "developmentPartnerOrg" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareUpdateSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          },
          "firmwareUpdateSettingsOverrides" : {
            "type" : "array",
            "description" : "Overrides default firmware update settings.",
            "items" : {
              "$ref" : "#/components/schemas/FirmwareUpdateSettingsOverrideType"
            },
            "nullable" : true
          },
          "inactivityTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "itemizedInvoice" : {
            "type" : "boolean",
            "nullable" : true
          },
          "keypadLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "keypadLogoUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxAllowedSegmentMaxBytesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motionGridDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motionLightweightDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "newCameraFramerateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraResolutionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraSegmentMaxBytesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraVideoTargetQualityMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraZeroMotionVideoQualityMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "notifyForHardwareFailureTickets" : {
            "type" : "boolean",
            "nullable" : true
          },
          "partnerAccessAllowedUntil" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusKeyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusKeyLogoUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "salesforceAccountId" : {
            "type" : "string",
            "nullable" : true
          },
          "shareAiTrainingMediaWithRhombus" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subscriptionEndDate" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "subscriptionStatus" : {
            "type" : "string",
            "enum" : [ "TRIAL", "PAID", "RESELLER", "LOST", "UNKNOWN" ],
            "nullable" : true
          },
          "subscriptionType" : {
            "type" : "string",
            "enum" : [ "STARTER", "PROFESSIONAL", "ENTERPRISE", "UNKNOWN" ],
            "nullable" : true
          },
          "supportAccessAllowedUntil" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "tenantUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "thumbstripDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PARTNER", "CUSTOMER", "UNKNOWN" ],
            "nullable" : true
          },
          "uapSettings" : {
            "$ref" : "#/components/schemas/UAPSettingsType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "v3AuthNumDaysSkip2FAForTrustedDevices" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Org_ClaimActivationTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "activationToken" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_ClaimActivationTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_ClaimShipmentRegistrationTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Org_DeviceRegistrationClaimType"
            },
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_ClaimShipmentRegistrationTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_CreatePendingRegistrationRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiPsk" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "wifiSsid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_CreatePendingRegistrationResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeleteCloudArchivingConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "scope" : {
            "$ref" : "#/components/schemas/DeviceTargetScope"
          },
          "targetUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeleteCloudArchivingConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeleteKeypadLogoWSRequest" : {
        "type" : "object"
      },
      "Org_DeleteKeypadLogoWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeleteRhombusKeyLogoWSRequest" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeleteRhombusKeyLogoWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeviceRegistrationClaimType" : {
        "type" : "object",
        "properties" : {
          "deviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_FindAllHardwareWithPendingRegistrationRequest" : {
        "type" : "object"
      },
      "Org_FindAllHardwareWithPendingRegistrationResponse" : {
        "type" : "object",
        "properties" : {
          "hardwareList" : {
            "type" : "array",
            "deprecated" : true,
            "description" : "Use hardwareWithPendingRegistrationInfoList instead",
            "items" : {
              "$ref" : "#/components/schemas/HardwareType"
            },
            "nullable" : true
          },
          "hardwareWithPendingRegistrationInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Org_HardwareWithPendingRegistrationInfoType"
            },
            "nullable" : true
          }
        }
      },
      "Org_FindHardwareAvailableForPendingRegistrationRequest" : {
        "type" : "object"
      },
      "Org_FindHardwareAvailableForPendingRegistrationResponse" : {
        "type" : "object",
        "properties" : {
          "hardwareList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareType"
            },
            "nullable" : true
          }
        }
      },
      "Org_FindIfTeamNameAvailableRequest" : {
        "type" : "object",
        "properties" : {
          "teamName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_FindIfTeamNameAvailableResponse" : {
        "type" : "object",
        "properties" : {
          "available" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_FindSCIMSettingsForOrgWSRequest" : {
        "type" : "object"
      },
      "Org_FindSCIMSettingsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "scimSettings" : {
            "$ref" : "#/components/schemas/SCIMSettingsType"
          }
        }
      },
      "Org_GenerateFederatedSessionTokenRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Org_GenerateFederatedSessionTokenResponse" : {
        "type" : "object",
        "properties" : {
          "federatedSessionToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_GetAwsIntCloudformationFileRequest" : {
        "type" : "object"
      },
      "Org_GetAwsIntCloudformationFileResponse" : {
        "type" : "object",
        "properties" : {
          "fileBase64" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_GetClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_GetClientOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "featureFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "org" : {
            "$ref" : "#/components/schemas/OrgV2Type"
          },
          "partnerOrgPermissionGroup" : {
            "$ref" : "#/components/schemas/UserPermissionGroupType"
          }
        }
      },
      "Org_GetCloudArchivingConfigsWSRequest" : {
        "type" : "object"
      },
      "Org_GetCloudArchivingConfigsWSResponse" : {
        "type" : "object",
        "properties" : {
          "archivingConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScopedCloudArchivingConfig"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_GetDeviceFlagsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_GetDeviceFlagsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Org_GetFeaturesWSRequest" : {
        "type" : "object"
      },
      "Org_GetFeaturesWSResponse" : {
        "type" : "object",
        "properties" : {
          "behaviorDetection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloudArchiving" : {
            "type" : "boolean",
            "nullable" : true
          },
          "engagementCounting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "faceCounting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceCountingNonUnique" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceRecognition" : {
            "type" : "boolean",
            "nullable" : true
          },
          "licensePlateRecognition" : {
            "type" : "boolean",
            "nullable" : true
          },
          "peopleCounting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ppeDetection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rulesEngine" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicleCounting" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_GetLocationFlagsWSRequest" : {
        "type" : "object"
      },
      "Org_GetLocationFlagsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flagsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Org_GetOrgIntegrationsWSRequest" : {
        "type" : "object"
      },
      "Org_GetOrgIntegrationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgIntegrations" : {
            "$ref" : "#/components/schemas/OrgIntegrationsType"
          }
        }
      },
      "Org_GetOrgNotificationTemplateV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/UserNotificationSettingsV4Type"
          }
        }
      },
      "Org_GetOrgNotificationTemplateWSRequest" : {
        "type" : "object"
      },
      "Org_GetOrgNotificationTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/UserNotificationSettingsV3Type"
          }
        }
      },
      "Org_GetOrgV2WSRequest" : {
        "type" : "object"
      },
      "Org_GetOrgV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "cameraConfigDefaults" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_VideoConfigurationDefault"
            },
            "nullable" : true
          },
          "cameraConfigOptions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Deviceconfig_settings_VideoConfigurationOption"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "featureFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "org" : {
            "$ref" : "#/components/schemas/OrgV2Type"
          }
        }
      },
      "Org_GetOrgWSRequest" : {
        "type" : "object"
      },
      "Org_GetOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "featureFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "org" : {
            "$ref" : "#/components/schemas/OrgType"
          }
        }
      },
      "Org_GetSAMLSettingsV2WSRequest" : {
        "type" : "object"
      },
      "Org_GetSAMLSettingsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "samlSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgSamlSettingsType"
            },
            "nullable" : true
          }
        }
      },
      "Org_GetSAMLSettingsWSRequest" : {
        "type" : "object"
      },
      "Org_GetSAMLSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "samlSettings" : {
            "$ref" : "#/components/schemas/OrgSamlSettingsType"
          }
        }
      },
      "Org_GetScimDisplayInfoResponse" : {
        "type" : "object",
        "properties" : {
          "azureScimEndpointUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "scimEndpointUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_GetTemporaryOrgTokenWSRequest" : {
        "type" : "object"
      },
      "Org_HardwareWithPendingRegistrationInfoType" : {
        "type" : "object",
        "properties" : {
          "hardware" : {
            "$ref" : "#/components/schemas/HardwareType"
          },
          "hwUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "pendingRegistrationInfo" : {
            "$ref" : "#/components/schemas/Org_PendingRegistrationInfoType"
          }
        }
      },
      "Org_PeekShipmentRegistrationTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "tokenUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_PeekShipmentRegistrationTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareUuidList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Org_PendingRegistrationInfoType" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_RemovePendingRegistrationRequest" : {
        "type" : "object",
        "properties" : {
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_RemovePendingRegistrationResponse" : {
        "type" : "object"
      },
      "Org_RevokeSCIMAccessForOrgWSRequest" : {
        "type" : "object"
      },
      "Org_RevokeSCIMAccessForOrgWSResponse" : {
        "type" : "object"
      },
      "Org_SetFlagWSRequest" : {
        "type" : "object",
        "properties" : {
          "flagName" : {
            "type" : "string",
            "nullable" : true
          },
          "flagValue" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_SetFlagWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_SetupSCIMAccessForOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusKeyAppSettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "sendWelcomeEmailToNewRhombusKeyUsers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sendWelcomeEmailToNewUsers" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_SetupSCIMAccessForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "scimAccessAlreadySetupFailure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateAiTrainingSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "shareAiTrainingMediaWithRhombus" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_UpdateAiTrainingSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateCloudArchivingConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "archivingConfig" : {
            "$ref" : "#/components/schemas/ScopedCloudArchivingConfig"
          }
        }
      },
      "Org_UpdateCloudArchivingConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateFirmwareSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "firmwareSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          },
          "firmwareUpdateSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          },
          "firmwareUpdateSettingsOverrides" : {
            "type" : "array",
            "description" : "Overrides default firmware update settings.",
            "items" : {
              "$ref" : "#/components/schemas/FirmwareUpdateSettingsOverrideType"
            },
            "nullable" : true
          }
        }
      },
      "Org_UpdateFirmwareSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateGeneralSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "accountBillingContactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountOwnerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountTechnicalContactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountTechnicalContacts" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "defaultPlayerViewLiveType" : {
            "$ref" : "#/components/schemas/PlayerViewLiveTypeEnum"
          },
          "inactivityTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uapSettings" : {
            "$ref" : "#/components/schemas/UAPSettingsType"
          }
        }
      },
      "Org_UpdateGeneralSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateMFASettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "v3AuthNumDaysSkip2FAForTrustedDevices" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Org_UpdateMFASettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "org" : {
            "$ref" : "#/components/schemas/OrgV2Type"
          }
        }
      },
      "Org_UpdateOrgAudioAnalysisPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioAnalysisEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgAudioAnalysisPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgAudioRecordingPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "audioRecordingEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgAudioRecordingPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgIntegrationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgIntegrations" : {
            "$ref" : "#/components/schemas/OrgIntegrationsType"
          }
        }
      },
      "Org_UpdateOrgIntegrationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgNotificationTemplateV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "templateUpdate" : {
            "$ref" : "#/components/schemas/UserNotificationSelectiveUpdateV2"
          }
        }
      },
      "Org_UpdateOrgNotificationTemplateV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgNotificationTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "notificationIntervalsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgNotificationTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "org" : {
            "$ref" : "#/components/schemas/OrgType"
          }
        }
      },
      "Org_UpdateOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "samlEntityIdUniquenessConstraintFailure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "teamNameNotAssignedFailure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "teamNameUniquenessConstraintFailure" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_UpdatePendingRegistrationRequest" : {
        "type" : "object",
        "properties" : {
          "hardwareUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdatePendingRegistrationResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateSAMLSettingsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "samlSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgSamlSettingsType"
            },
            "nullable" : true
          }
        }
      },
      "Org_UpdateSAMLSettingsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateSAMLSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "samlSettings" : {
            "$ref" : "#/components/schemas/OrgSamlSettingsType"
          }
        }
      },
      "Org_UpdateSAMLSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateSCIMSettingsForOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusKeyAppSettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "sendWelcomeEmailToNewRhombusKeyUsers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sendWelcomeEmailToNewUsers" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_UpdateSCIMSettingsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OsdpDoorReaderType" : {
        "type" : "object",
        "properties" : {
          "allowUnencrypted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "osdpAddress" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "readerType" : {
            "$ref" : "#/components/schemas/DoorReaderEnumType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OsdpPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "RS485" ]
      },
      "OsdpReaderPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/OsdpPhysicalPortEnumType"
          }
        }
      },
      "OutgoingShipmentInfoType" : {
        "type" : "object",
        "properties" : {
          "buyer" : {
            "$ref" : "#/components/schemas/Buyer"
          },
          "consignee" : {
            "$ref" : "#/components/schemas/Consignee"
          },
          "depositorOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "freight" : {
            "$ref" : "#/components/schemas/Freight"
          },
          "interchangeControlNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "product" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            },
            "nullable" : true
          },
          "purchaseOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "shipment" : {
            "$ref" : "#/components/schemas/Shipment"
          },
          "shipper" : {
            "$ref" : "#/components/schemas/Shipper"
          }
        }
      },
      "PagerDutySettings" : {
        "type" : "object",
        "properties" : {
          "allLocationIntegrationKeys" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "integrationKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationToIntegrationKeysMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "PaginateRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "PanelType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PanicButtonEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ParameterizedHeader" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PartnerFunctionality" : {
        "type" : "string",
        "enum" : [ "CREATE_CLIENT", "DELETE_CLIENT", "DEAL_ADMINISTRATION", "REMOTE_REGISTER_DEVICE", "ORG_ADMINISTRATION", "AUTH_ADMINISTRATION", "DOOR_ACCESS_ADMINISTRATION", "USER_ADMINISTRATION", "REPORT_ADMINISTRATION", "NOTIFICATION_ADMINISTRATION", "LICENSE_ADMINISTRATION", "RECEIVE_EMAILS", "API_ADMINISTRATION", "INTEGRATION_ADMINISTRATION", "DATA_EXFILTRATION", "UNKNOWN" ]
      },
      "PartnerNotificationClientSection" : {
        "type" : "object",
        "properties" : {
          "clientUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationClientSectionRow"
            },
            "nullable" : true
          }
        }
      },
      "PartnerNotificationClientSectionRow" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "days" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "diagnostics" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "interval" : {
            "$ref" : "#/components/schemas/MinuteOfDayIntervalType"
          },
          "mediums" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "PartnerNotificationSettingsType" : {
        "type" : "object",
        "properties" : {
          "allClientsSelected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientNotificationIntervalsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationIntervalV2Type"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationIntervalsForAllClients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PartnerNotificationSettingsV2" : {
        "type" : "object",
        "properties" : {
          "allClientsSelected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientNotificationIntervalsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PartnerNotificationClientSection"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationIntervalsForAllClients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationClientSection"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PartnerPermission" : {
        "type" : "string",
        "enum" : [ "DEFAULT", "CUSTOM" ]
      },
      "PartnerPermissionType" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PartnerUserPermissionGroupType" : {
        "type" : "object",
        "properties" : {
          "assignablePermissionGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clientAssignablePermissionGroupsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "clientFunctionalityList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Functionality"
            },
            "nullable" : true
          },
          "clientPermissionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PartnerPermission"
            },
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "functionalityList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerFunctionality"
            },
            "nullable" : true
          },
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "superAdmin" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_ClientCustomizationsType" : {
        "type" : "object",
        "properties" : {
          "forceLowBandwidthOnAllCameras" : {
            "type" : "boolean",
            "nullable" : true
          },
          "inactivityTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Partner_ClientDeviceCustomizationsType" : {
        "type" : "object",
        "properties" : {
          "forceLowBandwidthOnAllCameras" : {
            "type" : "boolean",
            "nullable" : true
          },
          "inactivityTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Partner_ConnectionCountType" : {
        "type" : "object",
        "properties" : {
          "connectedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "operationalCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Partner_CreatePartnerClientWSRequest" : {
        "type" : "object",
        "properties" : {
          "clientContactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "clientContactName" : {
            "type" : "string",
            "nullable" : true
          },
          "clientOrgName" : {
            "type" : "string",
            "nullable" : true
          },
          "suppressWelcomeEmail" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Partner_CreatePartnerClientWSResponse" : {
        "type" : "object",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "USER_EXISTS", "CLIENT_EXISTS", "USER_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Partner_CustomizeClientDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "clientDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableAudioVideoUserConfig"
          },
          "customizations" : {
            "$ref" : "#/components/schemas/Partner_ClientDeviceCustomizationsType"
          }
        }
      },
      "Partner_CustomizeClientDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "customizations" : {
            "$ref" : "#/components/schemas/Partner_ClientCustomizationsType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_CustomizeClientWSRequest" : {
        "type" : "object",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "customizations" : {
            "$ref" : "#/components/schemas/Partner_ClientCustomizationsType"
          }
        }
      },
      "Partner_CustomizeClientWSResponse" : {
        "type" : "object",
        "properties" : {
          "customizations" : {
            "$ref" : "#/components/schemas/Partner_ClientCustomizationsType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_DeleteClientWebRequest" : {
        "type" : "object",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_DeleteClientWebResponse" : {
        "type" : "object"
      },
      "Partner_DeviceWithPartnerDetailsType" : {
        "type" : "object",
        "properties" : {
          "device" : {
            "$ref" : "#/components/schemas/DeviceTypeV2"
          },
          "partnerControlledHardware" : {
            "type" : "boolean",
            "nullable" : true
          },
          "reassignable" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Partner_GetClientDevicesWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GetClientDevicesWSResponse" : {
        "type" : "object",
        "properties" : {
          "devices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Partner_DeviceWithPartnerDetailsType"
            },
            "nullable" : true
          }
        }
      },
      "Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSBaseResponse" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSFailureResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "failureReason" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSSuccessResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "orgs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/OrgV2Type"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Partner_GetClientSummaryInfoWSRequest" : {
        "type" : "object",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GetClientSummaryInfoWSResponse" : {
        "type" : "object",
        "properties" : {
          "accountOwner" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          },
          "clientDeviceStatusMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Partner_ConnectionCountType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseV2Enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "manuallySendLicenseExpirationEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "recentPolicyAlertCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Partner_GetListOfAllClientDevicesRequest" : {
        "type" : "object"
      },
      "Partner_GetListOfAllClientDevicesResponse" : {
        "type" : "object",
        "properties" : {
          "listOfAllClientDevices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceTypeV2"
            },
            "nullable" : true
          }
        }
      },
      "Partner_GetListOfControlledHardwareRequest" : {
        "type" : "object"
      },
      "Partner_GetListOfControlledHardwareResponse" : {
        "type" : "object",
        "properties" : {
          "controlledHardwareList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Partner_UnregisteredControlledHardwareType"
            },
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerClientMobileAccountAccessRequest" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerClientMobileAccountAccessResponse" : {
        "type" : "object",
        "properties" : {
          "clientAccountAccessSessionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerClientsStatusMapWSRequest" : {
        "type" : "object"
      },
      "Partner_GetPartnerClientsStatusMapWSResponse" : {
        "type" : "object",
        "properties" : {
          "clientDeviceStatusMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/Partner_ConnectionCountType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerClientsWSRequest" : {
        "type" : "object"
      },
      "Partner_GetPartnerClientsWSResponse" : {
        "type" : "object",
        "properties" : {
          "clients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Partner_PartnerClientWebType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerUsersInOrgWSRequest" : {
        "type" : "object"
      },
      "Partner_GetPartnerUsersInOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationSettingsType"
            },
            "nullable" : true
          },
          "notificationSettingsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationSettingsV2"
            },
            "nullable" : true
          },
          "partnerPermissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerPermissionType"
            },
            "nullable" : true
          },
          "partnerUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
            },
            "nullable" : true
          }
        }
      },
      "Partner_GetShipmentsWSRequest" : {
        "type" : "object",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Partner_GetShipmentsWSResponse" : {
        "type" : "object",
        "properties" : {
          "customerShipmentList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerShipmentType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GrantSupportAccessToClientWSRequest" : {
        "type" : "object",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GrantSupportAccessToClientWSResponse" : {
        "type" : "object",
        "properties" : {
          "errMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_PartnerClientWebType" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "clientAccessAllowed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientAccountAccessUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "clientOrgName" : {
            "type" : "string",
            "nullable" : true
          },
          "clientOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "totalAudioGateways" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalBadgeReaders" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalCameras" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalClimateSensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalDoorSensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalLocations" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalOccupancySensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalProximitySensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Partner_ReassignDeviceOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "serialNumbers" : {
            "type" : "array",
            "description" : "Serial numbers of the devices that should be reassigned to target organization. List must contain at least one entry.",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "maxItems" : 50,
            "nullable" : true
          },
          "sourceOrgUuid" : {
            "type" : "string",
            "description" : "Uuid of the organization devices should be reassigned from.",
            "nullable" : true
          },
          "targetOrgUuid" : {
            "type" : "string",
            "description" : "Uuid of the organization devices should be reassigned to.",
            "nullable" : true
          }
        },
        "required" : [ "sourceOrgUuid", "targetOrgUuid" ]
      },
      "Partner_ReassignDeviceOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "statuses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OperationStatus"
            },
            "nullable" : true
          }
        }
      },
      "Partner_RegisterDealWSRequest" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Partner_RegisterDealWSResponse" : {
        "type" : "object",
        "properties" : {
          "clients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Partner_PartnerClientWebType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_RequestAccessToClientAccountRequest" : {
        "type" : "object",
        "properties" : {
          "clientEmail" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_RequestAccessToClientAccountResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Partner_RequestAccessToClientAccountV2Request" : {
        "type" : "object",
        "properties" : {
          "clientEmail" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_RequestAccessToClientAccountV2Response" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSBaseResponse" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSFailureResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "failureReason" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "accessGrantedByClient" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSSuccessResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Partner_UnregisteredControlledHardwareType" : {
        "type" : "object",
        "properties" : {
          "deviceModel" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "macAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_UpdateManuallySendLicenseExpirationEmailWSRequest" : {
        "type" : "object",
        "properties" : {
          "manuallySendLicenseExpirationEmail" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_UpdateManuallySendLicenseExpirationEmailWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Password_ForgotPasswordWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "googleCaptchaSource" : {
            "$ref" : "#/components/schemas/GoogleCaptchaSourceEnum"
          },
          "googlesCaptchaResponse" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Password_ForgotPasswordWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Password_ResetPasswordWSRequest" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Password_ResetPasswordWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReasonType" : {
            "type" : "string",
            "enum" : [ "RHOMBUS_USER_NOT_FOUND", "RHOMBUS_ORG_USER_NOT_FOUND", "PASSWORD_RESET_TOKEN_EXPIRED", "INVALID_CURRENT_PASSWORD" ],
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Password_UserSignupWSRequest" : {
        "type" : "object",
        "properties" : {
          "eulaAccepted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Password_UserSignupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "PeopleCountEventType" : {
        "type" : "object",
        "properties" : {
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BoundingBoxType"
            },
            "nullable" : true
          },
          "deviceLabels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "eventTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "locationLabels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "peopleCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PerceptionType" : {
        "type" : "string",
        "enum" : [ "PEOPLE_COUNTING", "FACE_COUNTING_UNIQUE", "FACE_COUNTING_NONUNIQUE", "ENGAGMENT_COUNTING", "FACE_RECOGNITION", "LICENSEPLATE_RECOGNITION", "VEHICLE_COUNTING", "OCCUPANCY_COUNTING", "UNKNOWN" ]
      },
      "Permission" : {
        "type" : "string",
        "enum" : [ "READONLY", "ADMIN", "LIVEONLY" ]
      },
      "Permission_AssignUserPermissionWSRequest" : {
        "type" : "object",
        "properties" : {
          "userPermission" : {
            "$ref" : "#/components/schemas/UserPermissionType"
          }
        }
      },
      "Permission_AssignUserPermissionWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_CreatePartnerPermissionGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "partnerPermissionGroup" : {
            "$ref" : "#/components/schemas/PartnerUserPermissionGroupType"
          }
        }
      },
      "Permission_CreatePartnerPermissionGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_CreatePermissionGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "userPermissionGroup" : {
            "$ref" : "#/components/schemas/UserPermissionGroupType"
          }
        }
      },
      "Permission_CreatePermissionGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_DeletePartnerPermissionGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_DeletePartnerPermissionGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_DeletePermissionGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_DeletePermissionGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_GetPartnerPermissionGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "clientPermissionGroupMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserPermissionGroupType"
            },
            "nullable" : true
          },
          "clientPermissionsGroupMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserPermissionGroupType"
            },
            "nullable" : true,
            "writeOnly" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groupMembership" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "permissionGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerUserPermissionGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Permission_GetPartnerPermissionGroupsWSRequest" : {
        "type" : "object"
      },
      "Permission_GetPermissionGroupsForOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_GetPermissionGroupsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserPermissionGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Permission_GetPermissionGroupsWSRequest" : {
        "type" : "object"
      },
      "Permission_GetPermissionGroupsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groupMembership" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "partnerMembership" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "permissionGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserPermissionGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Permission_GetPermissionsForCurrentPartnerWSRequest" : {
        "type" : "object"
      },
      "Permission_GetPermissionsForCurrentPartnerWSResponse" : {
        "type" : "object",
        "properties" : {
          "assignablePermissionGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clientFunctionalityList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Functionality"
            },
            "nullable" : true
          },
          "clientPermissionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PartnerPermission"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "functionalityList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerFunctionality"
            },
            "nullable" : true
          },
          "permissionGroupName" : {
            "type" : "string",
            "nullable" : true
          },
          "superAdmin" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Permission_GetPermissionsForCurrentUserWSRequest" : {
        "type" : "object"
      },
      "Permission_GetPermissionsForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlLocationAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "accessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "assignablePermissionGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "functionalityList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Functionality"
            },
            "nullable" : true
          },
          "installer" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "locationGranularAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/Permission"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "permissionGroupName" : {
            "type" : "string",
            "nullable" : true
          },
          "superAdmin" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Permission_UpdatePartnerPermissionGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "partnerPermissionGroup" : {
            "$ref" : "#/components/schemas/PartnerUserPermissionGroupType"
          }
        }
      },
      "Permission_UpdatePartnerPermissionGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_UpdatePermissionGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "userPermissionGroup" : {
            "$ref" : "#/components/schemas/UserPermissionGroupType"
          }
        }
      },
      "Permission_UpdatePermissionGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PermyriadRect" : {
        "type" : "object",
        "properties" : {
          "h" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "w" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Person" : {
        "type" : "object",
        "properties" : {
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PersonSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_OUTPUT", "GPIO_INPUT", "GPIO_INPUT_SUPERVISED", "RS485", "WIEGAND_INPUT", "WIEGAND_OUTPUT", "BUTTON_INPUT" ]
      },
      "PhysicalPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "componentPortTypeUsageMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "supportedPortTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PhysicalPortEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "PimlocType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "baseAPIUrl" : {
              "type" : "string",
              "enum" : [ "US", "EU" ],
              "nullable" : true
            },
            "clientId" : {
              "type" : "string",
              "nullable" : true
            },
            "clientSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "nullable" : true
            },
            "validCredentials" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PinCredential" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "PinQueryFilter" : {
        "type" : "object",
        "description" : "Applies a filter on PINs retrieved. If a filter is not provided or if filter fields are left empty, no filtering will be applied. If used with pageRequest, the paginated result will be retrieved first then the filter will be applied.",
        "properties" : {
          "statusFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PinStatus"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "PinStatus" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "SCHEDULED", "EXPIRED" ]
      },
      "PlaceOsSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PlaceOsType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "apiUrl" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "triggerNotification" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookSignatureSecret" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PlaceType" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "PlayerViewLiveTypeEnum" : {
        "type" : "string",
        "enum" : [ "REALTIME", "BUFFERED" ]
      },
      "PmSensorType" : {
        "type" : "object",
        "properties" : {
          "nc0p5" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc10p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc1p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc2p5" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc4p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "noxIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm10p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm1p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm2p5" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm4p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "typPartSize" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vocIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "PointType" : {
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "PolicyAlertV2Type" : {
        "type" : "object",
        "properties" : {
          "airQualityIndex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "airQualityIndexThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "alertMonitoringThreatCaseUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "alertMonitoringVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertingEventFaces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventFaceType"
            },
            "nullable" : true
          },
          "alertingEventVehicles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventVehicleType"
            },
            "nullable" : true
          },
          "cd" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "nullable" : true
          },
          "cdn" : {
            "type" : "string",
            "description" : "Custom activity display name, maximum 32 characters",
            "nullable" : true
          },
          "ch2oPpb" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ch2oPpbThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "clipLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "clipLocationMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "co2" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "co2Ppm" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "co2PpmThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "co2Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "coConcentration" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "coConcentrationThreshold" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "delayedProcessing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "egressBoundaryDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ethanol" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ethanolThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "finalized" : {
            "type" : "boolean",
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "heatIndexDegFThreshold" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "humidityPercent1616" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "humidityPercentThreshold1616" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "humidityPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "humidityThresholdPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "iaqThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ingressBoundaryDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "leakDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "maxLuf" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "notificationSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "noxIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "noxIdxThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "numHumans" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "peopleCountHighThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "peopleCountLowThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "pm10p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm10p0Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm1p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm1p0Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm25" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm25Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm4p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm4p0Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "policyAlertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "pressure" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pressureThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempCThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "relHumidThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "saved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tamperByMovementChange" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tampered" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempCThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempProbePresent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "temperatureCelsius1616" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "temperatureCelsiusThreshold1616" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "temperaturePermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "temperatureThresholdPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "textDescription" : {
            "type" : "string",
            "description" : "Natural language description of the alert",
            "nullable" : true
          },
          "thcPercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thcPercentThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tvocThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "POLICY_ALERT_V2", "ACCESS_CONTROLLED_DOOR_POLICY_ALERT" ],
            "nullable" : true,
            "readOnly" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "vapeDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vapeSmokePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeSmokePercentThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vocIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vocIdxThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "PolicyAlertWithDetailsType" : {
        "type" : "object",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PolicyAlertV2Type"
        }, {
          "$ref" : "#/components/schemas/AccessControlledDoorPolicyAlertType"
        } ],
        "properties" : {
          "alertMonitoringThreatCaseUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "alertMonitoringVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "boundingBoxesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClipBoundingBoxType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/ApiClientTypeEnum"
          },
          "clipLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "clipLocationMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "componentCompositeSeekPointsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClipSeekPointV2Type"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "delayedProcessing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "finalized" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "recognizedEventFaces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventFaceType"
            },
            "nullable" : true
          },
          "recognizedEventVehicles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventVehicleType"
            },
            "nullable" : true
          },
          "saved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "seekPointsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClipSeekPointV2Type"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "textDescription" : {
            "type" : "string",
            "description" : "Natural language description of the alert",
            "nullable" : true
          },
          "thirdPartyDeviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "POLICY_ALERT_V2", "ACCESS_CONTROLLED_DOOR_POLICY_ALERT" ],
            "nullable" : true,
            "readOnly" : true
          },
          "unrecognizedEventFaces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventFaceType"
            },
            "nullable" : true
          },
          "unrecognizedEventVehicles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventVehicleType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PolicyEventFaceType" : {
        "type" : "object",
        "properties" : {
          "faceId" : {
            "type" : "string",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Bucket" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Region" : {
            "type" : "string",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PolicyEventVehicleType" : {
        "type" : "object",
        "properties" : {
          "imageS3Bucket" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Region" : {
            "type" : "string",
            "nullable" : true
          },
          "licensePlateNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateAccessControlledDoorPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalAccessControlledDoorPolicyType"
          }
        }
      },
      "Policy_CreateAccessControlledDoorPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateAudioPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalAudioPolicyType"
          }
        }
      },
      "Policy_CreateAudioPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateCameraPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalCameraPolicyV2Type"
          }
        }
      },
      "Policy_CreateCameraPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateClimatePolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalClimatePolicyType"
          }
        }
      },
      "Policy_CreateClimatePolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateDoorPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalDoorPolicyType"
          }
        }
      },
      "Policy_CreateDoorPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateOccupancyPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalOccupancyPolicyType"
          }
        }
      },
      "Policy_CreateOccupancyPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreatePolicyAddendumForLocationRequest" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Policy_CreatePolicyAddendumForLocationResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreatePolicyAddendumsForDevicesRequest" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Policy_CreatePolicyAddendumsForDevicesResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateProximityPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalProximityPolicyType"
          }
        }
      },
      "Policy_CreateProximityPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          }
        }
      },
      "Policy_CreateScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateVideoIntercomPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalVideoIntercomPolicyType"
          }
        }
      },
      "Policy_CreateVideoIntercomPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteAccessControlledDoorPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteAccessControlledDoorPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteAudioPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteAudioPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteCameraPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteCameraPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteClimatePolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteClimatePolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteDevicePolicyAddendumsWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Policy_DeleteDevicePolicyAddendumsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteDoorPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteDoorPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteLocationPolicyAddendumWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteLocationPolicyAddendumWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteOccupancyPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteOccupancyPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeletePolicyPauseSettingWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeletePolicyPauseSettingWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteProximityPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteProximityPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteVideoIntercomPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteVideoIntercomPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_ExternalAudioPolicyType" : {
        "type" : "object",
        "properties" : {
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_ExternalAudioScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_ExternalAudioTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Policy_ExternalVideoIntercomPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalVideoIntercomScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_ExternalVideoIntercomScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalVideoIntercomTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_ExternalVideoIntercomTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "faceAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "faceAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "lufsThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "peopleCountThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "vehicleAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicleAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_FindSchedulesWSRequest" : {
        "type" : "object"
      },
      "Policy_FindSchedulesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetAccessControlledDoorPoliciesWSRequest" : {
        "type" : "object"
      },
      "Policy_GetAccessControlledDoorPoliciesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetAudioPoliciesWSRequest" : {
        "type" : "object"
      },
      "Policy_GetAudioPoliciesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetCameraPoliciesWSRequest" : {
        "type" : "object"
      },
      "Policy_GetCameraPoliciesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraPolicyV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetClimatePoliciesWSRequest" : {
        "type" : "object"
      },
      "Policy_GetClimatePoliciesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimatePolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetDoorPoliciesWSRequest" : {
        "type" : "object"
      },
      "Policy_GetDoorPoliciesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetOccupancyPoliciesWSRequest" : {
        "type" : "object"
      },
      "Policy_GetOccupancyPoliciesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OccupancyPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetPoliciesUsingScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_GetPoliciesUsingScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorPolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorPolicyType"
            },
            "nullable" : true
          },
          "audioPolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioPolicyType"
            },
            "nullable" : true
          },
          "cameraPolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraPolicyV2Type"
            },
            "nullable" : true
          },
          "climatePolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimatePolicyType"
            },
            "nullable" : true
          },
          "doorPolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorPolicyType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "occupancyPolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OccupancyPolicyType"
            },
            "nullable" : true
          },
          "proximityPolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityPolicyType"
            },
            "nullable" : true
          },
          "videoIntercomPolicyList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VideoIntercomPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetPolicyAddendumsWSRequest" : {
        "type" : "object"
      },
      "Policy_GetPolicyAddendumsWSResponse" : {
        "type" : "object",
        "properties" : {
          "deviceAddendumsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationAddendumsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetPolicyPauseSettingsWSRequest" : {
        "type" : "object"
      },
      "Policy_GetPolicyPauseSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policiesPausedForComponentCompositesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "policiesPausedForDevicesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "policiesPausedForLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetProximityPoliciesWSRequest" : {
        "type" : "object"
      },
      "Policy_GetProximityPoliciesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetVideoIntercomPoliciesWSRequest" : {
        "type" : "object"
      },
      "Policy_GetVideoIntercomPoliciesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalVideoIntercomPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_MinimalAccessControlledDoorPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalAccessControlledDoorScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalAccessControlledDoorScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalAudioPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalAudioScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalAudioScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalCameraPolicyV2Type" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalCameraScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalCameraScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalClimatePolicyType" : {
        "type" : "object",
        "properties" : {
          "backoffAlertSecs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalClimateScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalClimateScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimateTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalDoorPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalDoorScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalDoorScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "ajarThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalOccupancyPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalOccupancyScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalOccupancyScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "occupancyThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vacancyThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalProximityPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalProximityScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalProximityScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "departureThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalVideoIntercomPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalVideoIntercomScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalVideoIntercomScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalVideoIntercomTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_PauseAlertPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentCompositeUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Policy_PauseAlertPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateAccessControlledDoorPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalAccessControlledDoorPolicyType"
          }
        }
      },
      "Policy_UpdateAccessControlledDoorPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateAudioPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalAudioPolicyType"
          }
        }
      },
      "Policy_UpdateAudioPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateCameraPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalCameraPolicyV2Type"
          }
        }
      },
      "Policy_UpdateCameraPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateClimatePolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalClimatePolicyType"
          }
        }
      },
      "Policy_UpdateClimatePolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateDoorPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalDoorPolicyType"
          }
        }
      },
      "Policy_UpdateDoorPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateOccupancyPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalOccupancyPolicyType"
          }
        }
      },
      "Policy_UpdateOccupancyPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateProximityPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalProximityPolicyType"
          }
        }
      },
      "Policy_UpdateProximityPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          }
        }
      },
      "Policy_UpdateScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateVideoIntercomPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalVideoIntercomPolicyType"
          }
        }
      },
      "Policy_UpdateVideoIntercomPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PortSupervisionConfigurationType" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "$ref" : "#/components/schemas/SupervisionModeEnumType"
          }
        }
      },
      "PosIntegrationInfoType" : {
        "type" : "object",
        "description" : "A HashMap of <Service Area Guid, PosIntegrationInfoType>. This stores the Pos Information and assigned cameras.",
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "description" : "A list of camera guids from Rhombus that are assigned to the Pos device.",
            "items" : {
              "type" : "string",
              "description" : "A list of camera guids from Rhombus that are assigned to the Pos device.",
              "nullable" : true
            },
            "nullable" : true
          },
          "posName" : {
            "type" : "string",
            "description" : "The name of the Pos device.",
            "nullable" : true
          }
        }
      },
      "PressureSensorType" : {
        "type" : "object",
        "properties" : {
          "pressure" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ProDataKeySettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ouId" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ProDataKeyType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "organizationId" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "systemId" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookId" : {
              "type" : "string",
              "nullable" : true
            },
            "webhookSignatureSecret" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "productId" : {
            "type" : "string",
            "nullable" : true
          },
          "productIdQualifier" : {
            "type" : "string",
            "nullable" : true
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "PromptConfigurationType" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cameraConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraConfiguration"
            },
            "nullable" : true
          },
          "checkEquations" : {
            "$ref" : "#/components/schemas/CheckEquations"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "minuteTriggerRate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "prompt" : {
            "type" : "string",
            "nullable" : true
          },
          "promptType" : {
            "type" : "string",
            "enum" : [ "COUNT", "PERCENT", "BOOLEAN" ],
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "shortName" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Providers" : {
        "type" : "object",
        "nullable" : true
      },
      "ProximityArrivedActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "proximityTagLocationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "ProximityDepartedActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "departureThresholdSecs" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "proximityTagLocationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "ProximityEventType" : {
        "type" : "object",
        "properties" : {
          "baseStationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "batteryPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bleDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "bleRssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closeBaseStations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "gpsLocation" : {
            "$ref" : "#/components/schemas/GeodeticCoordinates"
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "STATIONARY", "OFFLINE" ],
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          }
        }
      },
      "ProximityPolicyType" : {
        "type" : "object",
        "properties" : {
          "defaultDepartureThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "egressThresholdMetersMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "ingressThresholdMetersMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ProximityScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "departureThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "egressThresholdMetersMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "ingressThresholdMetersMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "ProximityTagLocomotionEventType" : {
        "type" : "object",
        "properties" : {
          "baseStationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "gpsLocation" : {
            "$ref" : "#/components/schemas/GeodeticCoordinates"
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "movement" : {
            "type" : "string",
            "enum" : [ "ARRIVAL", "DEPARTURE", "MOVED_SIGNIFICANTLY", "UNKNOWN" ],
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tagUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ProximityTagTimeSeriesDataPointType" : {
        "type" : "object",
        "properties" : {
          "dateLocal" : {
            "type" : "string",
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ProximityTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "locationUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "ProximityUnlockSettingsType" : {
        "type" : "object",
        "properties" : {
          "credCooldownSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "exitResetsCooldown" : {
            "type" : "boolean",
            "nullable" : true
          },
          "holdUnlocked" : {
            "type" : "boolean",
            "nullable" : true
          },
          "holdUnlockedEventIntervalSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "maxHoldUnlockedTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minHoldUnlockedTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minRSSIThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ProximityUnlockSettingsType_Minimal" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "minRSSIThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Proximity_GetLocomotionEventsForTagWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "movementFilter" : {
            "type" : "string",
            "enum" : [ "ARRIVAL", "DEPARTURE", "MOVED_SIGNIFICANTLY", "UNKNOWN" ],
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Proximity_GetLocomotionEventsForTagWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locomotionEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTagLocomotionEventType"
            },
            "nullable" : true
          }
        }
      },
      "Proximity_GetMinimalProximityStatesWSRequest" : {
        "type" : "object"
      },
      "Proximity_GetMinimalProximityStatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "proximityStates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Proximity_MinimalProximityStateType"
            },
            "nullable" : true
          }
        }
      },
      "Proximity_GetProximityEventsForTagWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "statusFilter" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "STATIONARY", "OFFLINE" ],
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Proximity_GetProximityEventsForTagWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "proximityEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityEventType"
            },
            "nullable" : true
          }
        }
      },
      "Proximity_MinimalProximityStateType" : {
        "type" : "object",
        "properties" : {
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "gpsLocation" : {
            "$ref" : "#/components/schemas/GeodeticCoordinates"
          },
          "health" : {
            "type" : "string",
            "enum" : [ "GREEN" ],
            "nullable" : true
          },
          "healthDetails" : {
            "type" : "string",
            "enum" : [ "FIRMWARE_BEHIND", "NONE" ],
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "imageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "STATIONARY", "OFFLINE" ],
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tagUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Proximity_UpdateProximitySensorDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "imageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "imageUrlUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Proximity_UpdateProximitySensorDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "QualifiedAddressType" : {
        "type" : "object",
        "description" : "Optionally present qualified address after some validation.  Used for Alarm Monitoring if available.",
        "properties" : {
          "addressLine2" : {
            "type" : "string",
            "description" : "apt, suite, or unit",
            "nullable" : true
          },
          "addressline1" : {
            "type" : "string",
            "description" : "street address",
            "nullable" : true
          },
          "administrativeArea" : {
            "type" : "string",
            "description" : "state",
            "nullable" : true
          },
          "locality" : {
            "type" : "string",
            "description" : "city",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "description" : "zip code",
            "nullable" : true
          },
          "regionCode" : {
            "type" : "string",
            "description" : "country",
            "nullable" : true
          }
        }
      },
      "QueryStatus" : {
        "type" : "string",
        "enum" : [ "ANSWERED", "PARTIALLY_ANSWERED", "CLARIFICATION_REQUESTED", "REDIRECTED", "INITIATED", "QUEUED", "IN_PROGRESS", "CALLING_TOOLS", "GENERATING_RESPONSE", "GENERATING_REPORT_OUTLINE", "GENERATING_REPORT_SECTIONS", "NOT_UNDERSTOOD", "INVALID_REQUEST", "UNAUTHORIZED", "UNSUPPORTED", "DENIED", "INTERRUPTED", "NO_RESPONSE", "INVALID_AUTH_DATA", "UNKNOWN" ]
      },
      "QueryTimelineEvent" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/QueryStatus"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "QueryTool" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "nullable" : true
          },
          "contentType" : {
            "type" : "string",
            "nullable" : true
          },
          "extra" : {
            "type" : "string",
            "nullable" : true
          },
          "role" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tool" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RBACSettingsType" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "RMARequest" : {
        "type" : "object",
        "properties" : {
          "formSubmitted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "requestUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaOpportunityId" : {
            "type" : "string",
            "nullable" : true
          },
          "salesforceAccountId" : {
            "type" : "string",
            "nullable" : true
          },
          "salesforcePartnerContactId" : {
            "type" : "string",
            "nullable" : true
          },
          "salesforcePartnerId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RMAType" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "nullable" : true
          },
          "advancedRMAs" : {
            "$ref" : "#/components/schemas/AdvancedRMAType"
          },
          "briefDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "costInDollars" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "nullable" : true
          },
          "customerUnresponsive" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "errorCode" : {
            "type" : "string",
            "enum" : [ "BADGE_READER_UNKNOWN", "DEAD_OR_MISSING_BATTERY", "ERROR_2", "ERROR_4", "ERROR_5", "ERROR_24", "ERROR_28", "ERROR_30", "ERROR_84", "FOREIGN_HARDWARE", "BAD_SD_BLOCKS", "NEVER_LEFT_BUSY_STATE", "HARDWARE_DAMAGE", "HEAVY_HARDWARE_DAMAGE", "WATER_DAMAGE", "VIDEO_HARDWARE_FAILURE", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "LIGHT_SENSOR", "SD_CARD_UNKOWN", "SD_CARD_READER_BROKEN", "POWER_ISSUES", "RS485_ISSUE", "CUT_FILTER", "QUALITY_OR_PERFORMANCE", "NETWORK_ISSUES", "UNKNOWN", "ILLEGIBLE_SERIAL_COMM", "NO_SERIAL_COMM", "COSMETIC_DAMAGE", "FIRMWARE_REFLASH_REQUIRED", "IR_RING_OVERHEATED", "REGISTERED_SENSOR" ],
            "nullable" : true
          },
          "failureDiagnostics" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "fedExReturnLabelSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "finalNotes" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "initialFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "initiatedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "inventoryNeeded" : {
            "type" : "string",
            "nullable" : true
          },
          "inventoryNeededMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "isRefurbished" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastRecordedFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUpdatedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "prevShippingInfoUsedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "prevShippingInfoUsedByAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "proactiveReplacement" : {
            "type" : "boolean",
            "nullable" : true
          },
          "recipientName" : {
            "type" : "string",
            "nullable" : true
          },
          "recipientPhoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "replacementCourier" : {
            "type" : "string",
            "nullable" : true
          },
          "replacementHardwareUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "replacementTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "requesterEmailAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "returnLabelRequested" : {
            "type" : "boolean",
            "nullable" : true
          },
          "returnLabelRequestedUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "returnLabelSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "returnLabelSentUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "returnTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaRequest" : {
            "$ref" : "#/components/schemas/RMARequest"
          },
          "rmaRequestUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sdCardReplaced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shipmentRequested" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shipmentRequestedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "shipmentRequestedUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "shipmentSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shipmentSentUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "skipAutoRegistration" : {
            "type" : "boolean",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATED", "PENDING", "APPROVED", "INPROGRESS", "COMPLETE", "RETURN", "STOLEN", "OPERATIONAL", "FULFILLMENT_ERROR" ],
            "nullable" : true
          },
          "storageCid" : {
            "type" : "string",
            "nullable" : true
          },
          "street" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "warehouseInventoryNeeded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "zenDeskTicketAssigneeEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "zenDeskTicketSubject" : {
            "type" : "string",
            "nullable" : true
          },
          "zendeskTicket" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Rapidsos_GetNearbyFeedsRequest" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Rapidsos_GetNearbyFeedsResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "streamUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "RaptorBuilding" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RaptorTemplate" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uId" : {
            "type" : "string",
            "nullable" : true
          },
          "uid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RaptorType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "clientId" : {
              "type" : "string",
              "nullable" : true
            },
            "clientSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RealtimeRelativeSecondsScheduleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "pastSeconds" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RecurringRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationUuids" : {
              "type" : "array",
              "description" : "Optional list of locations to specify timezones for evaluation. Note that if not specified, then we rely on the Actions to derive timezones.",
              "items" : {
                "type" : "string",
                "description" : "Optional list of locations to specify timezones for evaluation. Note that if not specified, then we rely on the Actions to derive timezones.",
                "nullable" : true
              },
              "nullable" : true
            },
            "repeatInterval" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Interval of timeUnit to re-occur at. i.e. trigger every 5 minutes, repeatInerval would be 5",
              "nullable" : true
            },
            "timeUnit" : {
              "$ref" : "#/components/schemas/RecurringTimeUnit"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "RecurringTimeUnit" : {
        "type" : "string",
        "description" : "Time unit of recurrence. i.e. trigger every 5 minutes, timeUnit would be MINUTES",
        "enum" : [ "SECONDS", "MINUTES", "HOURS" ]
      },
      "RegionConfigType" : {
        "type" : "object",
        "properties" : {
          "inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          }
        }
      },
      "RegionCoordinateType" : {
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "y" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "RegionOfInterest" : {
        "type" : "object",
        "description" : "Regions of interest that belong to the group. Group must have at least one region specified.",
        "properties" : {
          "activities" : {
            "type" : "array",
            "description" : "Region of allowed or disallowed activities. Activities are allowed if region group is inclusive. Activities are disallowed if region group is exclusive. Region must have at least one activity specified.",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "polygon" : {
            "$ref" : "#/components/schemas/RegionPolygonType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RegionOfInterestGroup" : {
        "type" : "object",
        "properties" : {
          "inclusive" : {
            "type" : "boolean",
            "description" : "If true, regions in this group include specified activities. If false, regions in this group exclude specified activities.",
            "nullable" : true
          },
          "regionsOfInterest" : {
            "type" : "array",
            "description" : "Regions of interest that belong to the group. Group must have at least one region specified.",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterest"
            },
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Represents type of activity regions in the group. Defaults to 'Activity'.",
            "enum" : [ "ACTIVITY", "REPORTING", "CROSSING" ],
            "nullable" : true
          }
        }
      },
      "RegionPolygonType" : {
        "type" : "object",
        "properties" : {
          "coordinates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionCoordinateType"
            },
            "nullable" : true
          }
        }
      },
      "RelativeDateTimeIntervalsScheduleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "intervals" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LocalDateTimeIntervalType"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_AssignThirdPartyCameraToNVRWSRequest" : {
        "type" : "object",
        "properties" : {
          "discoveredCameraMacAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nvruuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_AssignThirdPartyCameraToNVRWSResponse" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_AssignThirdPartyCameraToRelayCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "discoveredCameraMacAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_AssignThirdPartyCameraToRelayCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_AuthenticateThirdPartyCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "thirdPartyCameraMacAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "trySavedCredentials" : {
            "type" : "boolean",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_AuthenticateThirdPartyCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "$ref" : "#/components/schemas/DiscoveredThirdPartyCameraType"
          },
          "rtspUrlStatus" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          }
        }
      },
      "Relay_CreateThirdPartyCameraPasswordWSRequest" : {
        "type" : "object",
        "properties" : {
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_CreateThirdPartyCameraPasswordWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "passwordUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_DeleteThirdPartyCameraPasswordWSRequest" : {
        "type" : "object",
        "properties" : {
          "passwordUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_DeleteThirdPartyCameraPasswordWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_DiscoveryWithUnassignedRtspEndpoints" : {
        "type" : "object",
        "properties" : {
          "codec" : {
            "type" : "string",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "macAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "manufacturer" : {
            "type" : "string",
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "unassignedRtspEndpoints" : {
            "type" : "array",
            "description" : "List of unassigned RTSP endpoints that are available for assignment. Contains only endpoints with status GOOD and that are not currently assigned.",
            "items" : {
              "$ref" : "#/components/schemas/Relay_ExternalRtspEndpoint"
            },
            "nullable" : true
          }
        }
      },
      "Relay_ExecuteThirdPartyCameraDiscoveryWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Relay_ExecuteThirdPartyCameraDiscoveryWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_ExternalRtspEndpoint" : {
        "type" : "object",
        "properties" : {
          "lastRtspUrlStatus" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "source" : {
            "$ref" : "#/components/schemas/RtspEndpointSource"
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_FindDefaultRtspUrlsByManufacturerWSRequest" : {
        "type" : "object",
        "properties" : {
          "manufacturer" : {
            "type" : "string",
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_FindDefaultRtspUrlsByManufacturerWSResponse" : {
        "type" : "object",
        "properties" : {
          "defaultPaths" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "defaultUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Relay_FindDiscoveriesWithUnassignedRtspEndpointsWSRequest" : {
        "type" : "object"
      },
      "Relay_FindDiscoveriesWithUnassignedRtspEndpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "discoveries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Relay_DiscoveryWithUnassignedRtspEndpoints"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetAssignedThirdPartyCamerasWSRequest" : {
        "type" : "object",
        "properties" : {
          "nvruuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_GetAssignedThirdPartyCamerasWSResponse" : {
        "type" : "object",
        "properties" : {
          "assignedCameras" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_GetFullNVRStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "force" : {
            "type" : "boolean",
            "nullable" : true
          },
          "nvruuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_GetFullNVRStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "fullNVRState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Relay_GetImportThirdPartyCamerasFormatWSResponse" : {
        "type" : "object",
        "properties" : {
          "example" : {
            "type" : "string",
            "nullable" : true
          },
          "explanation" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_GetMinimalNVRStateListWSRequest" : {
        "type" : "object"
      },
      "Relay_GetMinimalNVRStateListWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "nvrstates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MinimalNVRStateType"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetMinimalThirdPartyCameraStateListWSRequest" : {
        "type" : "object"
      },
      "Relay_GetMinimalThirdPartyCameraStateListWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "thirdPartyCameraStateList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Relay_MinimalThirdPartyCameraStateType"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetNVRDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "nvruuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetNVRDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "nvrs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Relay_NVRExternalType"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetRtspEndpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "discoveredCameraMacAddress" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_GetRtspEndpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "rtspEndpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Relay_ExternalRtspEndpoint"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetThirdPartyCameraPasswordsWSRequest" : {
        "type" : "object"
      },
      "Relay_GetThirdPartyCameraPasswordsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "passwords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ThirdPartyCameraPasswordType"
            },
            "nullable" : true
          }
        }
      },
      "Relay_ImportThirdPartyCamerasWSResponse" : {
        "type" : "object",
        "properties" : {
          "importResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Relay_ThirdPartyCameraImportResult"
            },
            "nullable" : true
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Relay_ManualDiscoverThirdPartyCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "trySavedCredentials" : {
            "type" : "boolean",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_ManualDiscoverThirdPartyCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "$ref" : "#/components/schemas/DiscoveredThirdPartyCameraType"
          },
          "rtspUrlStatus" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          }
        }
      },
      "Relay_MinimalThirdPartyCameraStateType" : {
        "type" : "object",
        "properties" : {
          "assignedNVRUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "assignedRelayCameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "codec" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "discoveredByDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastRtspUrlStatus" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          },
          "lastVisibleLocationMs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastVisibleMs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "manufacturer" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Relay_NVRExternalType" : {
        "type" : "object",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraFramerate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_PTZMoveWSRequest" : {
        "type" : "object",
        "properties" : {
          "thirdPartyCameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "xmovementPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ymovementPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zmovementPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Relay_PTZMoveWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_PTZStatusWSRequest" : {
        "type" : "object",
        "properties" : {
          "thirdPartyCameraUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_PTZStatusWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "xpositionPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ypositionPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zpositionPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Relay_RebootNVRVWSRequest" : {
        "type" : "object",
        "properties" : {
          "nvrUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_RebootNVRVWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "type" : "string",
            "enum" : [ "REBOOT_SENT", "DEVICE_OFFLINE" ],
            "nullable" : true
          }
        }
      },
      "Relay_RegisterNVRVWSRequest" : {
        "type" : "object",
        "properties" : {
          "activationToken" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_RegisterNVRVWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "nvrUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_ThirdPartyCameraImportResult" : {
        "type" : "object",
        "properties" : {
          "discoveredThirdPartyCamera" : {
            "$ref" : "#/components/schemas/DiscoveredThirdPartyCameraType"
          },
          "message" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "urlStatus" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          }
        }
      },
      "Relay_UnassignThirdPartyCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "nvruuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "thirdPartyCameraMacAddress" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_UnassignThirdPartyCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_UnregisterNVRWSRequest" : {
        "type" : "object",
        "properties" : {
          "nvruuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_UnregisterNVRWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Relay_UpdateNVRFirmwareWSRequest" : {
        "type" : "object",
        "properties" : {
          "nvruuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_UpdateNVRFirmwareWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ALREADY_ON_THE_LATEST_FIRMWARE", "DEVICE_ON_A_SPECIAL_FIRMWARE_AND_CANNOT_BE_UPDATED", "UPDATE_STARTED", "UNABLE_TO_REACH_DEVICE", "FIRMWARE_UPDATE_ALREADY_IN_PROGESS", "DEVICE_NOT_AUTHROIZED" ],
            "nullable" : true
          }
        }
      },
      "Relay_UpdateNVRVWSRequest" : {
        "type" : "object",
        "properties" : {
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "customDataUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "directionRadiansUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "facetNameMapUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mummifiedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_UpdateNVRVWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RemoteDoorUnlockActionType" : {
        "type" : "object",
        "properties" : {
          "doorId" : {
            "type" : "string",
            "nullable" : true
          },
          "placeId" : {
            "type" : "string",
            "nullable" : true
          },
          "system" : {
            "$ref" : "#/components/schemas/RemoteDoorUnlockSystemEnum"
          }
        }
      },
      "RemoteDoorUnlockSystemEnum" : {
        "type" : "string",
        "enum" : [ "BRIVO", "OPENPATH", "KISI", "PLACEOS", "GENEA", "PDK", "INNER_RANGE", "RHOMBUS", "UNKNOWN" ]
      },
      "RenewalClaimKey" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "entries" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ClaimKeyEntry"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "claimEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key ended successfully.",
            "nullable" : true
          },
          "claimStartDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key started.",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "expirationEmailState" : {
            "type" : "string",
            "enum" : [ "NINETY_DAY_EMAIL_SUCCEEDED", "NINETY_DAY_EMAIL_FAILED", "SIXTY_DAY_EMAIL_SUCCEEDED", "SIXTY_DAY_EMAIL_FAILED", "FOURTY_FIVE_DAY_EMAIL_SUCCEEDED", "FOURTY_FIVE_DAY_EMAIL_FAILED", "THIRTY_DAY_EMAIL_SUCCEEDED", "THIRTY_DAY_EMAIL_FAILED", "TWENTY_ONE_DAY_EMAIL_SUCCEEDED", "TWENTY_ONE_DAY_EMAIL_FAILED", "FOURTEEN_DAY_EMAIL_SUCCEEDED", "FOURTEEN_DAY_EMAIL_FAILED", "TEN_DAY_EMAIL_SUCCEEDED", "TEN_DAY_EMAIL_FAILED", "FIVE_DAY_EMAIL_SUCCEEDED", "FIVE_DAY_EMAIL_FAILED", "FOUR_DAY_EMAIL_SUCCEEDED", "FOUR_DAY_EMAIL_FAILED", "THREE_DAY_EMAIL_SUCCEEDED", "THREE_DAY_EMAIL_FAILED", "TWO_DAY_EMAIL_SUCCEEDED", "TWO_DAY_EMAIL_FAILED", "ONE_DAY_EMAIL_SUCCEEDED", "ONE_DAY_EMAIL_FAILED", "ZERO_DAY_EMAIL_SUCCEEDED", "ZERO_DAY_EMAIL_FAILED", "GRACE_PERIOD_EMAILS_IN_PROGRESS", "GRACE_PERIOD_EMAILS_COMPLETED", "UNKNOWN" ],
            "nullable" : true
          },
          "gracePeriodEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "maskedClaimCode" : {
            "type" : "string",
            "description" : "Masked claim code for redeemed claim keys. This field can be used for reference purposes.",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "renewedByClaimKeyUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "requestId" : {
            "type" : "string",
            "description" : "Externally supplied request id to prevent creation of unnecessary claim keys due to reprocessing or bugs. Unnecessary claim keys are claim keys that are not tied to anything in the external system.  This property is unique for all claim keys.",
            "nullable" : true
          },
          "returnHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClaimKeyReturnEvent"
            },
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "NEW", "RENEWAL" ],
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_AuditEventWeb" : {
        "type" : "object",
        "properties" : {
          "FOOBAR" : {
            "type" : "string",
            "nullable" : true
          },
          "action" : {
            "type" : "string",
            "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "UNKNOWN" ],
            "nullable" : true
          },
          "asi" : {
            "type" : "string",
            "nullable" : true
          },
          "clientType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "MOBILE", "BROWSER", "BROWSER_V2", "BROWSER_PARTNER", "MOBILE_PARTNER", "ANONYMOUS", "SHARE_ANONYMOUS", "SHARE_ANONYMOUS_V2", "SHARE_RAW", "SHARE_SSO", "TV_API", "API", "API_TOKEN", "API_OAUTH_TOKEN", "PARTNER_API", "PARTNER_API_TOKEN", "KEYPAD_API", "INTERNAL_SALESFORCE", "RHOMBUS_KEY_MOBILE", "KIOSK_CONSOLE", "KIOSK_IOS_API", "CHATBOT" ],
            "nullable" : true
          },
          "displayText" : {
            "type" : "string",
            "nullable" : true
          },
          "failure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "principalName" : {
            "type" : "string",
            "nullable" : true
          },
          "principalType" : {
            "type" : "string",
            "enum" : [ "USER", "DEVICE", "PARTNER", "RHOMBUS_SUPPORT", "API_TOKEN", "API_OAUTH_TOKEN", "SHARED_CLIP", "SHARED_STREAM", "SHARED_TIMELAPSE", "SHARED_VIDEOWALL", "KIOSK_CONSOLE", "UNKNOWN" ],
            "nullable" : true
          },
          "principalUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "selectiveUpdateStr" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceCity" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceCountry" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceIp" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceState" : {
            "type" : "string",
            "nullable" : true
          },
          "targetName" : {
            "type" : "string",
            "nullable" : true
          },
          "targetUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "userAgent" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetAuditFeedForTargetWSRequest" : {
        "type" : "object",
        "properties" : {
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Max number of audit records to retrieve",
            "nullable" : true
          },
          "targetUuid" : {
            "type" : "string",
            "description" : "Target uuid to get audit records for",
            "nullable" : true
          }
        },
        "required" : [ "targetUuid" ]
      },
      "Report_GetAuditFeedForTargetWSResponse" : {
        "type" : "object",
        "properties" : {
          "auditEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Report_AuditEventWeb"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetAuditFeedWSRequest" : {
        "type" : "object",
        "properties" : {
          "excludeActions" : {
            "type" : "array",
            "description" : "If not empty, events with actions specified in the list are filtered out. If both include and exclude actions are specified, exclude actions are ignored.",
            "items" : {
              "type" : "string",
              "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "UNKNOWN" ],
              "nullable" : true
            },
            "maxItems" : 50,
            "nullable" : true
          },
          "includeActions" : {
            "type" : "array",
            "description" : "If not empty, only events with actions specified in the list are returned. If both include and exclude actions are specified, exclude actions are ignored. ",
            "items" : {
              "type" : "string",
              "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "UNKNOWN" ],
              "nullable" : true
            },
            "maxItems" : 50,
            "nullable" : true
          },
          "timestampMsAfter" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timestampMsBefore" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetAuditFeedWSResponse" : {
        "type" : "object",
        "properties" : {
          "auditEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Report_AuditEventWeb"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetAverageReportWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetAverageReportWSResponse" : {
        "type" : "object",
        "properties" : {
          "average" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groupAverageMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Report_GetAverageReportsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          }
        }
      },
      "Report_GetAverageReportsWSResponse" : {
        "type" : "object",
        "properties" : {
          "averageMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groupAverageMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Report_GetCountReportV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Time intervals to get reports for",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Level of granularity to get reports for",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "types" : {
            "type" : "array",
            "description" : "Types of reports to receive",
            "items" : {
              "type" : "string",
              "description" : "Types of reports to receive",
              "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "description" : "Uuid to get reports for, not needed for ORG scope",
            "nullable" : true
          }
        },
        "required" : [ "interval", "scope", "types" ]
      },
      "Report_GetCountReportWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetCountReportWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeSeriesDataPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetCountReportsForDevicesAtLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End timestamp in epoch milliseconds.",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Level of granularity with which event counts are grouped.",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "description" : "Location uuid to get device-level count reports for.",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start timestamp in epoch milliseconds.",
            "minimum" : 0,
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of event to get counts for.",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          }
        },
        "required" : [ "endTimeMs", "interval", "locationUuid", "startTimeMs", "type" ]
      },
      "Report_GetCountReportsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Time intervals to get reports for",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Level of granularity to get reports for, supports DEVICE and LOCATION",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of reports to receive",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          }
        },
        "required" : [ "interval", "scope", "type" ]
      },
      "Report_GetCountReportsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPointsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/TimeSeriesDataPointV2Type"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Report_GetCustomLLMWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "promptUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetCustomLLMWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeSeriesDataPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetDiagnosticFeedWSRequest" : {
        "type" : "object",
        "properties" : {
          "timestampMsAfter" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timestampMsBefore" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetDiagnosticFeedWSResponse" : {
        "type" : "object",
        "properties" : {
          "diagnosticEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosticEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetLicensePlatesByDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "dateLocal" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use timestampMs instead",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "description" : "Device uuid to get license plate counting events for",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Supports HOURLY, DAILY, WEEKLY, and MONTHLY",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid", "interval" ]
      },
      "Report_GetLicensePlatesByDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licensePlateEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetMostRecentPeopleCountWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "numMostRecent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Report_GetMostRecentPeopleCountWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PeopleCountEventType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetOccupancyCountWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetOccupancyCountWSResponse" : {
        "type" : "object",
        "properties" : {
          "approximateTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "estimatedCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetOccupancyCountsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetOccupancyCountsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Report_TimeSeriesDataPointV2ExtendedType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetProximityTagLocationsByDateWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDateStr" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "startDateStr" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "description" : "Tag uuid to get report for",
            "nullable" : true
          }
        },
        "required" : [ "tagUuid" ]
      },
      "Report_GetProximityTagLocationsByDateWSResponse" : {
        "type" : "object",
        "properties" : {
          "dataPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTagTimeSeriesDataPointType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetRunningAverageWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Supports HOURLY, DAILY, WEEKLY, and MONTHLY, returns averages for hours of the interval selected",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Level of granularity to get statistics for",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "description" : "Uuid to get statistics for, not needed for ORG scope",
            "nullable" : true
          }
        },
        "required" : [ "interval", "scope" ]
      },
      "Report_GetRunningAverageWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "statsDataPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyStatisticsDataPoint"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetSummaryCountReportWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Time interval to get data for",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Level of granularity to get reports for",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of report to receive",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          }
        },
        "required" : [ "interval", "scope", "type" ]
      },
      "Report_GetSummaryCountReportWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SummaryCountTimeSeriesDataPointType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountReportWSRequest" : {
        "type" : "object",
        "properties" : {
          "bucketSize" : {
            "type" : "string",
            "enum" : [ "QUARTER_HOUR", "HOUR", "DAY", "WEEK", "MONTH" ],
            "nullable" : true
          },
          "crossingObject" : {
            "type" : "string",
            "enum" : [ "HUMAN", "VEHICLE", "UNKNOWN" ],
            "nullable" : true
          },
          "dedupe" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountReportWSResponse" : {
        "type" : "object",
        "properties" : {
          "crossingCounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CrossingCountsType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountsWSRequest" : {
        "type" : "object",
        "properties" : {
          "crossingObject" : {
            "type" : "string",
            "enum" : [ "HUMAN", "VEHICLE", "UNKNOWN" ],
            "nullable" : true
          },
          "dailyResetTimeMinute" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "devices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountsWSResponse" : {
        "type" : "object",
        "properties" : {
          "counts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountsWSResponse_ThresholdCrossingCountType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountsWSResponse_ThresholdCrossingCountType" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingEventsForDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "crossingObject" : {
            "type" : "string",
            "enum" : [ "HUMAN", "VEHICLE", "UNKNOWN" ],
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingEventsForDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "thresholdCrossingEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MinimalThresholdEventType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "crossingObject" : {
            "type" : "string",
            "enum" : [ "HUMAN", "VEHICLE", "UNKNOWN" ],
            "nullable" : true
          },
          "devices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingEventsWSResponse" : {
        "type" : "object",
        "properties" : {
          "deviceToThresholdCrossingEventMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/MinimalThresholdEventType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_ResetRunningAverageWSRequest" : {
        "type" : "object",
        "properties" : {
          "scope" : {
            "type" : "string",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_ResetRunningAverageWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_TimeSeriesDataPointV2ExtendedType" : {
        "type" : "object",
        "properties" : {
          "approximateTimestampMsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "dateLocal" : {
            "type" : "string",
            "nullable" : true
          },
          "dateUtc" : {
            "type" : "string",
            "nullable" : true
          },
          "eventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "RequestToExitEnumType" : {
        "type" : "string",
        "enum" : [ "integrated", "remote" ]
      },
      "RequestToExitPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_INPUT", "GPIO_INPUT_SUPERVISED" ]
      },
      "RequestToExitPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/RequestToExitPhysicalPortEnumType"
          },
          "supervisionConfiguration" : {
            "$ref" : "#/components/schemas/PortSupervisionConfigurationType"
          }
        }
      },
      "RequestToExitShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/RequestToExitStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "supervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "RequestToExitStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "intentOnly" : {
              "type" : "boolean",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/RequestToExitStateEnumType"
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RequestToExitStateEnumType" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "INACTIVE", "UNKNOWN" ]
      },
      "Resolution" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ResponseEntity" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "type" : "object",
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "accept" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                },
                "nullable" : true
              },
              "acceptCharset" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "registered" : {
                      "type" : "boolean",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptLanguage" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "range" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "weight" : {
                      "type" : "number",
                      "format" : "double",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptLanguageAsLocales" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "country" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayCountry" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayLanguage" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayName" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayScript" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayVariant" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "extensionKeys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "iso3Country" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "iso3Language" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "language" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "script" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "unicodeLocaleAttributes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "unicodeLocaleKeys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "variant" : {
                      "type" : "string",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptPatch" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                },
                "nullable" : true
              },
              "accessControlAllowCredentials" : {
                "type" : "boolean",
                "nullable" : true
              },
              "accessControlAllowHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlAllowMethods" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpMethod"
                },
                "nullable" : true
              },
              "accessControlAllowOrigin" : {
                "type" : "string",
                "nullable" : true
              },
              "accessControlExposeHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlMaxAge" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "accessControlRequestHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlRequestMethod" : {
                "$ref" : "#/components/schemas/HttpMethod"
              },
              "all" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "writeOnly" : true
              },
              "allow" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpMethod"
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "basicAuth" : {
                "type" : "string",
                "nullable" : true,
                "writeOnly" : true
              },
              "bearerAuth" : {
                "type" : "string",
                "nullable" : true,
                "writeOnly" : true
              },
              "cacheControl" : {
                "type" : "string",
                "nullable" : true
              },
              "connection" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "contentDisposition" : {
                "$ref" : "#/components/schemas/ContentDisposition"
              },
              "contentLanguage" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "country" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayCountry" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayLanguage" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayScript" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayVariant" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "extensionKeys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "iso3Country" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "iso3Language" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "language" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "script" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "unicodeLocaleAttributes" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "unicodeLocaleKeys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "variant" : {
                    "type" : "string",
                    "nullable" : true
                  }
                }
              },
              "contentLength" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "contentType" : {
                "$ref" : "#/components/schemas/MediaType"
              },
              "date" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              },
              "etag" : {
                "type" : "string",
                "nullable" : true
              },
              "expires" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "host" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "type" : "object",
                    "nullable" : true,
                    "properties" : {
                      "address" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "format" : "byte",
                          "nullable" : true
                        },
                        "nullable" : true
                      },
                      "anyLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "canonicalHostName" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "hostAddress" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "hostName" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "linkLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "loopbackAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcglobal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mclinkLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcnodeLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcorgLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcsiteLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "multicastAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "siteLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      }
                    }
                  },
                  "hostName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "hostString" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int32",
                    "nullable" : true
                  },
                  "unresolved" : {
                    "type" : "boolean",
                    "nullable" : true
                  }
                }
              },
              "ifMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "ifModifiedSince" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "ifNoneMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "ifUnmodifiedSince" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "lastModified" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "location" : {
                "type" : "string",
                "format" : "uri",
                "nullable" : true
              },
              "origin" : {
                "type" : "string",
                "nullable" : true
              },
              "pragma" : {
                "type" : "string",
                "nullable" : true
              },
              "range" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpRange"
                },
                "nullable" : true
              },
              "upgrade" : {
                "type" : "string",
                "nullable" : true
              },
              "vary" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              }
            }
          },
          "statusCode" : {
            "$ref" : "#/components/schemas/HttpStatusCode"
          },
          "statusCodeValue" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ResponseEntityString" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "type" : "string",
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "accept" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                },
                "nullable" : true
              },
              "acceptCharset" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "registered" : {
                      "type" : "boolean",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptLanguage" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "range" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "weight" : {
                      "type" : "number",
                      "format" : "double",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptLanguageAsLocales" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "country" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayCountry" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayLanguage" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayName" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayScript" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayVariant" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "extensionKeys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "iso3Country" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "iso3Language" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "language" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "script" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "unicodeLocaleAttributes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "unicodeLocaleKeys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "variant" : {
                      "type" : "string",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptPatch" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                },
                "nullable" : true
              },
              "accessControlAllowCredentials" : {
                "type" : "boolean",
                "nullable" : true
              },
              "accessControlAllowHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlAllowMethods" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpMethod"
                },
                "nullable" : true
              },
              "accessControlAllowOrigin" : {
                "type" : "string",
                "nullable" : true
              },
              "accessControlExposeHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlMaxAge" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "accessControlRequestHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlRequestMethod" : {
                "$ref" : "#/components/schemas/HttpMethod"
              },
              "all" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "writeOnly" : true
              },
              "allow" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpMethod"
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "basicAuth" : {
                "type" : "string",
                "nullable" : true,
                "writeOnly" : true
              },
              "bearerAuth" : {
                "type" : "string",
                "nullable" : true,
                "writeOnly" : true
              },
              "cacheControl" : {
                "type" : "string",
                "nullable" : true
              },
              "connection" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "contentDisposition" : {
                "$ref" : "#/components/schemas/ContentDisposition"
              },
              "contentLanguage" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "country" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayCountry" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayLanguage" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayScript" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayVariant" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "extensionKeys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "iso3Country" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "iso3Language" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "language" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "script" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "unicodeLocaleAttributes" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "unicodeLocaleKeys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "variant" : {
                    "type" : "string",
                    "nullable" : true
                  }
                }
              },
              "contentLength" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "contentType" : {
                "$ref" : "#/components/schemas/MediaType"
              },
              "date" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              },
              "etag" : {
                "type" : "string",
                "nullable" : true
              },
              "expires" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "host" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "type" : "object",
                    "nullable" : true,
                    "properties" : {
                      "address" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "format" : "byte",
                          "nullable" : true
                        },
                        "nullable" : true
                      },
                      "anyLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "canonicalHostName" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "hostAddress" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "hostName" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "linkLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "loopbackAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcglobal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mclinkLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcnodeLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcorgLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcsiteLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "multicastAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "siteLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      }
                    }
                  },
                  "hostName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "hostString" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int32",
                    "nullable" : true
                  },
                  "unresolved" : {
                    "type" : "boolean",
                    "nullable" : true
                  }
                }
              },
              "ifMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "ifModifiedSince" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "ifNoneMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "ifUnmodifiedSince" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "lastModified" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "location" : {
                "type" : "string",
                "format" : "uri",
                "nullable" : true
              },
              "origin" : {
                "type" : "string",
                "nullable" : true
              },
              "pragma" : {
                "type" : "string",
                "nullable" : true
              },
              "range" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpRange"
                },
                "nullable" : true
              },
              "upgrade" : {
                "type" : "string",
                "nullable" : true
              },
              "vary" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              }
            }
          },
          "statusCode" : {
            "$ref" : "#/components/schemas/HttpStatusCode"
          },
          "statusCodeValue" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "RhombusKeyAppConfigType" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "preferences" : {
            "$ref" : "#/components/schemas/RhombusKeyAppPreferencesType"
          },
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "settings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "RhombusKeyAppPreferencesType" : {
        "type" : "object",
        "properties" : {
          "favoriteAccessControlledDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "RhombusKeyAppSettingsType" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "credentialProvisioningRules" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileCredentialProvisioningRulesType"
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusKeyAccessEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "RhombusOrgUserType" : {
        "type" : "object",
        "properties" : {
          "accessibleRhombusApps" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PARTNER", "CONSOLE", "RHOMBUS_KEY", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "accountOwner" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUserCustomizationFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "JOINED", "PENDING", "INACTIVE", "UNKNOWN" ],
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RhombusOsdpDoorReaderType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hardwareUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "osdpAddress" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "readerType" : {
            "$ref" : "#/components/schemas/DoorReaderEnumType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RhombusSecureCsnType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "algorithm" : {
              "$ref" : "#/components/schemas/SecureTokenAlgorithm"
            },
            "baseKeyIdentifier" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "RhombusSecureMobileAppState" : {
        "type" : "object",
        "properties" : {
          "appName" : {
            "type" : "string",
            "nullable" : true
          },
          "appNotifications" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "appOS" : {
            "type" : "string",
            "nullable" : true
          },
          "appStatusUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "appVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/MobileTokenOSEnum"
          },
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceModel" : {
            "type" : "string",
            "nullable" : true
          },
          "installationId" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "tapToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "userAgent" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "waveToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          }
        }
      },
      "RhombusSecureMobileAppStateStats" : {
        "type" : "object",
        "properties" : {
          "tapToUnlockStats" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileCredStatRhombusSecureMobileFeatureStatus"
          },
          "versionStats" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileCredStatString"
          },
          "waveToUnlockStats" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileCredStatRhombusSecureMobileFeatureStatus"
          }
        }
      },
      "RhombusSecureMobileCredStatRhombusSecureMobileFeatureStatus" : {
        "type" : "object",
        "properties" : {
          "androidCredRefMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/StatsCredentialReference"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "androidTotal" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "readOnly" : true
          },
          "androidTotalMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "readOnly" : true
          },
          "iphoneCredRefMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/StatsCredentialReference"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "iphoneTotal" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "readOnly" : true
          },
          "iphoneTotalMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "readOnly" : true
          },
          "total" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "RhombusSecureMobileCredStatString" : {
        "type" : "object",
        "properties" : {
          "androidCredRefMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/StatsCredentialReference"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "androidTotal" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "readOnly" : true
          },
          "androidTotalMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "readOnly" : true
          },
          "iphoneCredRefMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/StatsCredentialReference"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "iphoneTotal" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "readOnly" : true
          },
          "iphoneTotalMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "readOnly" : true
          },
          "total" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "RhombusSecureMobileCredentialProvisioningRulesType" : {
        "type" : "object",
        "properties" : {
          "endDateProvisioner" : {
            "$ref" : "#/components/schemas/EpochSecondsProvisioner"
          },
          "maxMobileCredsAllowed" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startDateProvisioner" : {
            "$ref" : "#/components/schemas/EpochSecondsProvisioner"
          }
        }
      },
      "RhombusSecureMobileFeature" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "settings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RhombusSecureMobileFeatureSetting"
            },
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeatureStatus"
          }
        }
      },
      "RhombusSecureMobileFeatureSetting" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeatureSettingStatus"
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RhombusSecureMobileFeatureSettingStatus" : {
        "type" : "string",
        "enum" : [ "OPTIMAL", "INHIBITED" ]
      },
      "RhombusSecureMobileFeatureStatus" : {
        "type" : "string",
        "enum" : [ "OPT_OUT", "UNAVAILABLE", "OPTIMAL", "INHIBITED", "UNKNOWN" ]
      },
      "RhombusSecureMobileType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "algorithm" : {
              "$ref" : "#/components/schemas/SecureTokenAlgorithm"
            },
            "appName" : {
              "type" : "string",
              "nullable" : true
            },
            "appNotifications" : {
              "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
            },
            "appOS" : {
              "type" : "string",
              "nullable" : true
            },
            "appStatusUpdatedAtMillis" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "appVersion" : {
              "type" : "string",
              "nullable" : true
            },
            "baseKeyIdentifier" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "clientType" : {
              "$ref" : "#/components/schemas/MobileTokenOSEnum"
            },
            "deviceModel" : {
              "type" : "string",
              "nullable" : true
            },
            "installationId" : {
              "type" : "string",
              "nullable" : true
            },
            "tapToUnlock" : {
              "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
            },
            "userAgent" : {
              "type" : "string",
              "nullable" : true
            },
            "waveToUnlock" : {
              "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "RhombusShipmentInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "additionalEmails" : {
            "type" : "string",
            "nullable" : true
          },
          "chosenCarrierName" : {
            "type" : "string",
            "nullable" : true
          },
          "claimKeyToLicenseMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "claimKeyToLicenseMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/SalesforceLicenseStartDateTimeAndEndDateTime"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "customerEmails" : {
            "type" : "string",
            "nullable" : true
          },
          "customerName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerOrgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "purchaseOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaReturnTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "salesForceOpportunityId" : {
            "type" : "string",
            "nullable" : true
          },
          "zendeskTicketNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RtspEndpoint" : {
        "type" : "object",
        "properties" : {
          "lastRtspUrlStatus" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          },
          "onvifProfileToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "source" : {
            "$ref" : "#/components/schemas/RtspEndpointSource"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RtspEndpointSource" : {
        "type" : "string",
        "enum" : [ "USER", "ONVIF" ]
      },
      "RuleActionType" : {
        "type" : "object",
        "properties" : {
          "activateLocationLockdown" : {
            "$ref" : "#/components/schemas/ActivateLocationLockdownActionType"
          },
          "alertAction" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audioPlaybackActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioPlaybackActionType"
            },
            "nullable" : true
          },
          "cancelLoopingAudioPlaybackAction" : {
            "$ref" : "#/components/schemas/CancelLoopingAudioPlaybackActionType"
          },
          "integrationCommandActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationCommandActionType"
            },
            "nullable" : true
          },
          "integrationNotificationActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationNotificationActionType"
            },
            "nullable" : true
          },
          "liveNotificationAction" : {
            "type" : "boolean",
            "nullable" : true
          },
          "remoteDoorUnlockActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoteDoorUnlockActionType"
            },
            "nullable" : true
          },
          "triggerComponentRelayActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TriggerComponentRelayActionType"
            },
            "nullable" : true
          },
          "webhookActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WebhookActionType"
            },
            "nullable" : true
          }
        }
      },
      "RuleEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "ruleName" : {
              "type" : "string",
              "nullable" : true
            },
            "ruleUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "RuleFilterType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuids" : {
            "type" : "array",
            "description" : "List of schedules that apply to the rule. at least one schedule must be met to trigger this rule. If null, then this rule is enabled all the time.",
            "items" : {
              "type" : "string",
              "description" : "List of schedules that apply to the rule. at least one schedule must be met to trigger this rule. If null, then this rule is enabled all the time.",
              "nullable" : true
            },
            "nullable" : true
          },
          "triggerBackoffSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of seconds to back off after rule is triggered before triggering again. I.e. this rule will only trigger once every X seconds regardless of how many triggering events occur within that window",
            "nullable" : true
          }
        }
      },
      "RuleLockdownEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "ruleName" : {
              "type" : "string",
              "nullable" : true
            },
            "ruleUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "RuleTriggerConjunctionEnum" : {
        "type" : "string",
        "enum" : [ "AND", "OR", "UNKNOWN" ]
      },
      "RuleTriggerTypeEnum" : {
        "type" : "string",
        "enum" : [ "DEVICE_ACTIVITY_EVENT", "AUDIT_EVENT", "DIAGNOSTIC_EVENT", "ALERT_MONITORING_EVENT", "BADGE_INTEGRATION_EVENT", "SCHEDULED_EVENT", "VISION_LLM_EVENT", "RECURRING_EVENT", "LOCATION_LOCKDOWN_ACTIVATED_EVENT", "LOCATION_LOCKDOWN_DEACTIVATED_EVENT", "BUTTON_INTEGRATION_EVENT", "UNKNOWN" ]
      },
      "RuleType" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RuleActionType"
          },
          "conjunction" : {
            "$ref" : "#/components/schemas/RuleTriggerConjunctionEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleFilters" : {
            "$ref" : "#/components/schemas/RuleFilterType"
          },
          "ruleType" : {
            "$ref" : "#/components/schemas/RuleTypeEnum"
          },
          "triggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseRuleTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RuleTypeEnum" : {
        "type" : "string",
        "enum" : [ "BUTTON_DEFINED", "USER_DEFINED", "DOORBELL_CAMERA_DEFINED", "DOOR_CONTROLLER_DEFINED", "LOCKDOWN_PLAN_DEFINED" ]
      },
      "RulesEventRecordType" : {
        "type" : "object",
        "properties" : {
          "activatedLocationLockdownRecord" : {
            "$ref" : "#/components/schemas/ActivateLocationLockdownActionRecordType"
          },
          "alertActionRecord" : {
            "$ref" : "#/components/schemas/AlertActionRecordType"
          },
          "alertMonitoringEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringEventRecordType"
            },
            "nullable" : true
          },
          "audioPlaybackActionRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioPlaybackActionRecordType"
            },
            "nullable" : true
          },
          "cancelLoopingAudioPlaybackActionRecordType" : {
            "$ref" : "#/components/schemas/CancelLoopingAudioPlaybackActionRecordType"
          },
          "deviceEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceEventRecordType"
            },
            "nullable" : true
          },
          "integrationActionStatuses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationActionStatusEnum"
            },
            "nullable" : true
          },
          "liveNotificationActionRecord" : {
            "$ref" : "#/components/schemas/LiveNotificationActionRecordType"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledEventRecordType"
            },
            "nullable" : true
          },
          "triggerComponentRelayRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TriggerComponentRelayActionRecordType"
            },
            "nullable" : true
          },
          "triggeredTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "unlockDoorActionRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UnlockDoorActionRecordType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "visionLLMEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VisionLLMEventRecordType"
            },
            "nullable" : true
          },
          "webhookActionStatuses" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Rules_CreateRuleWSRequest" : {
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Rules_CreateRuleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_DeleteRulePauseSettingWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_DeleteRulePauseSettingWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_DeleteRuleWSRequest" : {
        "type" : "object",
        "properties" : {
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_DeleteRuleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_GetRulePauseSettingsResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rulesPausedMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Rules_GetRulePauseSettingsWSRequest" : {
        "type" : "object"
      },
      "Rules_GetRulesForOrgWSRequest" : {
        "type" : "object"
      },
      "Rules_GetRulesForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleType"
            },
            "nullable" : true
          }
        }
      },
      "Rules_PauseRuleWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Rules_PauseRuleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_UpdateRuleWSRequest" : {
        "type" : "object",
        "properties" : {
          "ruleUpdate" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Rules_UpdateRuleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_records_DeleteRulesEventRecordWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_records_DeleteRulesEventRecordWSResponse" : {
        "type" : "object"
      },
      "Rules_records_GetLatestRulesEventRecordsWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "n" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_records_GetLatestRulesEventRecordsWSResponse" : {
        "type" : "object",
        "properties" : {
          "rulesEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RulesEventRecordType"
            },
            "nullable" : true
          }
        }
      },
      "Rules_records_GetRulesEventRecordsWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedUuids" : {
            "type" : "array",
            "description" : "Associated uuids for devices, components, locations and componenet composites. **Optional, can be null.",
            "items" : {
              "type" : "string",
              "description" : "Associated uuids for devices, components, locations and componenet composites. **Optional, can be null.",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Rules_records_GetRulesEventRecordsWSResponse" : {
        "type" : "object",
        "properties" : {
          "rulesEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RulesEventRecordType"
            },
            "nullable" : true
          }
        }
      },
      "Rules_records_GetRulesFilteredWSRequest" : {
        "type" : "object",
        "properties" : {
          "associatedUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ruleTypeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleTypeEnum"
            },
            "nullable" : true
          }
        }
      },
      "SAMLSettingsType" : {
        "type" : "object",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "idpMetaDataXml" : {
            "type" : "string",
            "nullable" : true
          },
          "justInTimeAccountProvisioningEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "SCIMSettingsType" : {
        "type" : "object",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusKeyAppSettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "sendWelcomeEmailToNewRhombusKeyUsers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sendWelcomeEmailToNewUsers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "SalesforceLicenseStartDateTimeAndEndDateTime" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "contractEndDateTime" : {
            "type" : "string",
            "nullable" : true
          },
          "contractStartDateTime" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SaltoSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenToCamerasMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "SavedClipV2Type" : {
        "type" : "object",
        "properties" : {
          "accessSettings" : {
            "$ref" : "#/components/schemas/ClipAccessSettings"
          },
          "alterMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "analyzed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "byteCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "consoleDelete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "devicePresentationOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "externalTransactionId" : {
            "type" : "string",
            "nullable" : true
          },
          "fisheyeMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "integrationUploadList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          },
          "isMonitoringClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "isVendorClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sha256Hex" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceAlertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATING", "UPLOADING", "RENDERING", "FAILED", "COMPLETE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "videoResolution" : {
            "$ref" : "#/components/schemas/Resolution"
          }
        }
      },
      "SavedClipWithDetailsType" : {
        "type" : "object",
        "properties" : {
          "accessSettings" : {
            "$ref" : "#/components/schemas/ClipAccessSettings"
          },
          "alterMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "analyzed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "byteCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "consoleDelete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "devicePresentationOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "externalTransactionId" : {
            "type" : "string",
            "nullable" : true
          },
          "fisheyeMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "integrationUploadList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          },
          "isMonitoringClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "isVendorClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sha256Hex" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceAlertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATING", "UPLOADING", "RENDERING", "FAILED", "COMPLETE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "videoResolution" : {
            "$ref" : "#/components/schemas/Resolution"
          }
        }
      },
      "SceneQueryReportEvent" : {
        "type" : "object",
        "properties" : {
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_CreatePromptConfigurationWSRequest" : {
        "type" : "object",
        "properties" : {
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Scenequery_CreatePromptConfigurationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Scenequery_DeletePromptConfigurationWSRequest" : {
        "type" : "object",
        "properties" : {
          "promptUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_DeletePromptConfigurationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_FindAllPromptConfigurationsWSRequest" : {
        "type" : "object"
      },
      "Scenequery_FindAllPromptConfigurationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "promptConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PromptConfigurationType"
            },
            "nullable" : true
          }
        }
      },
      "Scenequery_GetPromptConfigurationWSRequest" : {
        "type" : "object",
        "properties" : {
          "promptUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_GetPromptConfigurationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Scenequery_ReportWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceFacetUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "endMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "promptUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Scenequery_ReportWSResponse" : {
        "type" : "object",
        "properties" : {
          "reports" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Scenequery_ReportWSResponse_SceneQueryWSReport"
            },
            "nullable" : true
          }
        }
      },
      "Scenequery_ReportWSResponse_SceneQueryReportWSEvent" : {
        "type" : "object",
        "properties" : {
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_ReportWSResponse_SceneQueryWSReport" : {
        "type" : "object",
        "properties" : {
          "deviceFacetUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Scenequery_ReportWSResponse_SceneQueryReportWSEvent"
            },
            "nullable" : true
          },
          "promptType" : {
            "type" : "string",
            "enum" : [ "COUNT", "PERCENT", "BOOLEAN" ],
            "nullable" : true
          },
          "promptUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_SelectiveUpdatePromptConfigurationWSRequest" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cameraConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraConfiguration"
            },
            "nullable" : true
          },
          "checkEquations" : {
            "$ref" : "#/components/schemas/CheckEquations"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "minuteTriggerRate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "prompt" : {
            "type" : "string",
            "nullable" : true
          },
          "promptType" : {
            "type" : "string",
            "enum" : [ "COUNT", "PERCENT", "BOOLEAN" ],
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "shortName" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_SelectiveUpdatePromptConfigurationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_TriggerPromptWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceFacetUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "prompt" : {
            "type" : "string",
            "nullable" : true
          },
          "promptType" : {
            "type" : "string",
            "enum" : [ "COUNT", "PERCENT", "BOOLEAN" ],
            "nullable" : true
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionPolygonType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Scenequery_TriggerPromptWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "event" : {
            "$ref" : "#/components/schemas/SceneQueryReportEvent"
          }
        }
      },
      "Scenequery_UpdatePromptConfigurationWSRequest" : {
        "type" : "object",
        "properties" : {
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Scenequery_UpdatePromptConfigurationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Schedule_AccessControlledDoorNextNearestSchedule" : {
        "type" : "object",
        "properties" : {
          "currentlyActive" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "source" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "startsAtMillisInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "stopsAtMillisInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Schedule_AccessControlledDoorStateSourceEnum" : {
        "type" : "string",
        "enum" : [ "DEFAULT_STATE", "DOOR_SCHEDULE", "DSE_DEFAULT_STATE", "DSE_SCHEDULE", "DOOR_STATE_OVERRIDE" ]
      },
      "Schedule_CreateAbsoluteScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/AbsoluteSecondsScheduleType"
          }
        }
      },
      "Schedule_CreateAbsoluteScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Schedule_CreateRelativeDateTimeIntervalsScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/RelativeDateTimeIntervalsScheduleType"
          }
        }
      },
      "Schedule_CreateRelativeDateTimeIntervalsScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Schedule_CreateRelativeScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/RealtimeRelativeSecondsScheduleType"
          }
        }
      },
      "Schedule_CreateRelativeScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Schedule_CreateWeeklyScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          }
        }
      },
      "Schedule_CreateWeeklyScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Schedule_FindAbsoluteScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Schedule_FindAbsoluteScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/AbsoluteSecondsScheduleType"
          }
        }
      },
      "Schedule_FindRelativeDateTimeIntervalsScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Schedule_FindRelativeDateTimeIntervalsScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/RelativeDateTimeIntervalsScheduleType"
          }
        }
      },
      "Schedule_FindRelativeScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Schedule_FindRelativeScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/RealtimeRelativeSecondsScheduleType"
          }
        }
      },
      "Schedule_FindWeeklyScheduleWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Schedule_FindWeeklyScheduleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          }
        }
      },
      "Schedule_GetScheduleDataV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Schedule_GetScheduleDataV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "weeklyScheduleData" : {
            "$ref" : "#/components/schemas/Schedule_WeeklyRepeatingScheduleDataType"
          }
        }
      },
      "Schedule_GetScheduleDataWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "weeklyScheduleData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Schedule_WeeklyRepeatingScheduleDataType"
            },
            "nullable" : true
          }
        }
      },
      "Schedule_GetSchedulesWSRequest" : {
        "type" : "object"
      },
      "Schedule_GetSchedulesWSResponse" : {
        "type" : "object",
        "properties" : {
          "absoluteSchedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AbsoluteSecondsScheduleType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "relativeDatetimeSchedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RelativeDateTimeIntervalsScheduleType"
            },
            "nullable" : true
          },
          "relativeSchedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RealtimeRelativeSecondsScheduleType"
            },
            "nullable" : true
          },
          "weeklySchedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
            },
            "nullable" : true
          }
        }
      },
      "Schedule_WeeklyRepeatingScheduleDataType" : {
        "type" : "object",
        "properties" : {
          "accessGrantUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "alarmMonitoringUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "alertPolicyUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "doorSettingUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "intervalList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "locationsUsedIn" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "sharedStreamUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ScheduledEventRecordType" : {
        "type" : "object",
        "properties" : {
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ScheduledIntervalType" : {
        "type" : "object",
        "properties" : {
          "durationSecs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ScheduledRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationUuids" : {
              "type" : "array",
              "description" : "List of locations to use for timezone evaluation and for display purposes",
              "items" : {
                "type" : "string",
                "description" : "List of locations to use for timezone evaluation and for display purposes",
                "nullable" : true
              },
              "nullable" : true
            },
            "minOfDay" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "minute of the day for this trigger. note that it is dependent on the timezone of the devices in the rule actions or the timezone of the specified locations.",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "ScopedCloudArchivingConfig" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scope" : {
            "$ref" : "#/components/schemas/DeviceTargetScope"
          },
          "targetUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uploadScheduleInverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uploadScheduleUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uploadStrategy" : {
            "$ref" : "#/components/schemas/CloudArchivingStrategy"
          }
        }
      },
      "Search_DeleteVideoEmbeddingWSRequest" : {
        "type" : "object",
        "properties" : {
          "embedding" : {
            "$ref" : "#/components/schemas/GenericVideoEmbedding"
          }
        }
      },
      "Search_DeleteVideoEmbeddingWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Search_IndexVideoEmbeddingWSRequest" : {
        "type" : "object",
        "properties" : {
          "embedding" : {
            "$ref" : "#/components/schemas/GenericVideoEmbedding"
          }
        }
      },
      "Search_IndexVideoEmbeddingWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Search_SearchLicensePlatesWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "forcedFuzziness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "fuzzy" : {
            "type" : "boolean",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Search_SearchLicensePlatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventSearchHitType"
            },
            "nullable" : true
          }
        }
      },
      "Search_SearchObjectsByColorWSRequest" : {
        "type" : "object",
        "properties" : {
          "colorFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "objectTypeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Search_SearchObjectsByColorWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "objects" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarObjectEmbeddingsByTextWSRequest" : {
        "type" : "object",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional number of results to return. Setting to larger numbers will increase latency.",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/ObjectSearchModelEnum"
          },
          "objectTypeFilter" : {
            "type" : "array",
            "description" : "Optional object type filter to narrow results to only vehicles or only humans.",
            "items" : {
              "type" : "string",
              "enum" : [ "MOTION_HUMAN", "MOTION_CAR" ],
              "nullable" : true
            },
            "nullable" : true
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "description" : "Optional list of device uuids to filter result set on.",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in epoch milliseconds. Results returned will have occurred before this time.",
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in epoch milliseconds. Results returned will have occurred after this time.",
            "nullable" : true
          },
          "regionFilter" : {
            "type" : "array",
            "description" : "Optional region filter to return results only if they overlap with the supplied region. This is a list of perymyriad points defining a polygon. The first and last elements must be the same to make a connected polygon. For example, a triangle should have 4 points defined in this list.",
            "items" : {
              "type" : "array",
              "description" : "Permyriad point [x, y]",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Permyriad point [x, y]",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "searchText" : {
            "type" : "string",
            "description" : "The search text to find similar objects to. Phrases like \"red sedan\", \"person in yellow shirt\", etc.",
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional threshold applied to filter returned results, set as a float in [0.0, 1.0].",
            "nullable" : true
          }
        },
        "required" : [ "model", "queryEndTimeMs", "queryStartTimeMs", "searchText" ]
      },
      "Search_SearchSimilarObjectEmbeddingsByVectorWSRequest" : {
        "type" : "object",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/ObjectSearchModelEnum"
          },
          "objectTypeFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "regionFilter" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "searchEmbedding" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarObjectEmbeddingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional number of results to return. Setting to larger numbers will increase latency.",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/ObjectSearchModelEnum"
          },
          "objectTypeFilter" : {
            "type" : "array",
            "description" : "Optional object type filter to narrow results to only vehicles or only humans.",
            "items" : {
              "type" : "string",
              "enum" : [ "MOTION_HUMAN", "MOTION_CAR" ],
              "nullable" : true
            },
            "nullable" : true
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "description" : "Optional list of device uuids to filter result set on.",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in epoch milliseconds. Results returned will have occurred before this time.",
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in epoch milliseconds. Results returned will have occurred after this time.",
            "nullable" : true
          },
          "regionFilter" : {
            "type" : "array",
            "description" : "Optional region filter to return results only if they overlap with the supplied region. This is a list of perymyriad points defining a polygon. The first and last elements must be the same to make a connected polygon. For example, a triangle should have 4 points defined in this list.",
            "items" : {
              "type" : "array",
              "description" : "Permyriad point [x, y]",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Permyriad point [x, y]",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "searchEmbeddingId" : {
            "type" : "string",
            "description" : "The id of the embedding event you want to find similar objects to. Typically this is obtained from a previous text search result.",
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional threshold applied to filter returned results, set as a float in [0.0, 1.0].",
            "nullable" : true
          }
        },
        "required" : [ "model", "queryEndTimeMs", "queryStartTimeMs", "searchEmbeddingId" ]
      },
      "Search_SearchSimilarObjectEmbeddingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "moderationReason" : {
            "type" : "string",
            "nullable" : true
          },
          "queryAllowed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "similarEmbeddings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericObjectEmbeddingMatch"
            },
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarVideoEmbeddingsByTimeWindowWSRequest" : {
        "type" : "object",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/VideoSimilarityModelEnum"
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "searchEventDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "searchEventEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "searchEventStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarVideoEmbeddingsByTimeWindowWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "searchEmbeddings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericVideoEmbedding"
            },
            "nullable" : true
          },
          "similarEmbeddings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericVideoEmbeddingMatch"
            },
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarVideoEmbeddingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/VideoSimilarityModelEnum"
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "searchEmbedding" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarVideoEmbeddingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "similarEmbeddings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericVideoEmbeddingMatch"
            },
            "nullable" : true
          }
        }
      },
      "SecureTokenAlgorithm" : {
        "type" : "string",
        "enum" : [ "AN10922_AES128" ]
      },
      "SecurityZoneInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "isParentZone" : {
            "type" : "boolean",
            "nullable" : true
          },
          "securityZoneName" : {
            "type" : "string",
            "nullable" : true
          },
          "zoneAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "zoneId" : {
            "type" : "string",
            "nullable" : true
          },
          "zoneParentId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SeekpointIndexType" : {
        "type" : "object",
        "properties" : {
          "compositComponentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "customDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "customDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "objectType" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPointType" : {
            "$ref" : "#/components/schemas/SeekpointType"
          },
          "seekpointType" : {
            "$ref" : "#/components/schemas/SeekpointType"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "SeekpointType" : {
        "type" : "string",
        "enum" : [ "0", "1", "2" ]
      },
      "SensorValType" : {
        "type" : "object",
        "properties" : {
          "sensorBoolean" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sensorDouble" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "sensorLong" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Sensor_FootageSensorSeekPointDisplayType" : {
        "type" : "object",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "al" : {
            "type" : "boolean",
            "description" : "alerted on this?",
            "nullable" : true
          },
          "cd" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "nullable" : true
          },
          "cdn" : {
            "type" : "string",
            "description" : "custom activity display name",
            "nullable" : true
          },
          "co2" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "cu" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ethanol" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "h" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "humidity",
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "hp" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "humidity percent in 16.16 fixed point",
            "nullable" : true
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "lu" : {
            "type" : "string",
            "nullable" : true
          },
          "pm25" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "sn" : {
            "type" : "string",
            "nullable" : true
          },
          "su" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "t" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "temperature",
            "nullable" : true
          },
          "tc" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "temperature in Celsius in 16.16 fixed point",
            "nullable" : true
          },
          "thcPercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "timestamp in milliseconds since epoch",
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeSmokePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        },
        "required" : [ "a", "ts" ]
      },
      "Sensor_GetFootageSensorSeekpointsForCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Sensor_FootageSensorSeekPointDisplayType"
            },
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Sensor_FootageSensorSeekPointDisplayType"
            },
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForSensorWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForSensorWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Sensor_FootageSensorSeekPointDisplayType"
            },
            "nullable" : true
          }
        }
      },
      "Sensor_GetSensorPresenceWindowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Sensor_GetSensorPresenceWindowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          }
        }
      },
      "ServiceNowSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "instanceUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SessionClientInfoType" : {
        "type" : "object",
        "properties" : {
          "appName" : {
            "type" : "string",
            "nullable" : true
          },
          "appOs" : {
            "type" : "string",
            "nullable" : true
          },
          "appVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "userAgent" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SessionInfoWSType" : {
        "type" : "object",
        "properties" : {
          "clientInfo" : {
            "$ref" : "#/components/schemas/SessionClientInfoType"
          },
          "clientType" : {
            "type" : "string",
            "enum" : [ "MOBILE", "IOS", "ANDROID", "BROWSER" ],
            "nullable" : true
          },
          "currentSession" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastActivityTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastIpAccessedFrom" : {
            "type" : "string",
            "nullable" : true
          },
          "lastIpAccessedFromGeoLocation" : {
            "$ref" : "#/components/schemas/GeoIpLocationType"
          }
        }
      },
      "Share_GetSharedClipDataWSRequest" : {
        "type" : "object"
      },
      "Share_GetSharedClipDataWSResponse" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedWebClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Share_SharedClipPublicType"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageBoundingBoxesWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageBoundingBoxesWSResponse" : {
        "type" : "object",
        "properties" : {
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSeekpointsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSeekpointsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSensorSeekpointsForCameraWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSensorSeekpointsForCameraWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Sensor_FootageSensorSeekPointDisplayType"
            },
            "nullable" : true
          }
        }
      },
      "Share_GetSharedLiveStreamInfoWSResponse" : {
        "type" : "object",
        "properties" : {
          "aecEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audioPushToTalkEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "fisheyeDisplayMode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "hideOverlay" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "mountingDirection" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oldestSegmentSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/BaseSavedScheduleType"
          },
          "sharedWithMonitoringService" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tileViews" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "tz" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "dstsavings" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "id" : {
                "type" : "string",
                "nullable" : true
              },
              "rawOffset" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              }
            }
          },
          "vodEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedMediaUrisWSRequest" : {
        "type" : "object"
      },
      "Share_GetSharedMediaUrisWSResponse" : {
        "type" : "object",
        "properties" : {
          "audioWanLiveMpdUri" : {
            "type" : "string",
            "nullable" : true
          },
          "audioWanLiveOpusUri" : {
            "type" : "string",
            "nullable" : true
          },
          "audioWanVodMpdUriTemplate" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveM3u8Uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedPresenceWindowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedPresenceWindowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/TimeWindowSeconds"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Share_GetSharedTimelapseDataV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "nullable" : true
          },
          "publicTimelapseUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedTimelapseDataWSRequest" : {
        "type" : "object"
      },
      "Share_GetSharedTimelapseDataWSResponse" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedVideoWallInfoWSResponse" : {
        "type" : "object",
        "properties" : {
          "deviceList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Share_SharedVideoWallDeviceType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "vodEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedVideoWallMediaUrisWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedVideoWallMediaUrisWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveM3u8Uri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_ShareLinkWSRequest" : {
        "type" : "object",
        "properties" : {
          "emailAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "link" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Share_ShareLinkWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_SharedClipPublicType" : {
        "type" : "object",
        "properties" : {
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "deviceBoundingBoxMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClipBoundingBoxType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "deviceSeekPointMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClipSeekPointV2Type"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationTimeZoneMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true,
              "properties" : {
                "displayName" : {
                  "type" : "string",
                  "nullable" : true
                },
                "dstsavings" : {
                  "type" : "integer",
                  "format" : "int32",
                  "nullable" : true
                },
                "id" : {
                  "type" : "string",
                  "nullable" : true
                },
                "rawOffset" : {
                  "type" : "integer",
                  "format" : "int32",
                  "nullable" : true
                }
              }
            },
            "nullable" : true
          },
          "publicClipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          }
        }
      },
      "Share_SharedVideoWallDeviceType" : {
        "type" : "object",
        "properties" : {
          "fisheyeDisplayMode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "mountingDirection" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "tileViews" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "tz" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "dstsavings" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "id" : {
                "type" : "string",
                "nullable" : true
              },
              "rawOffset" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              }
            }
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SharedClipGroupWithDetailsType" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipWithDetailsType"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SharedClipGroupWrapperType" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTime" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "isSecured" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipType"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SharedClipGroupWrapperV2Type" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "isSecured" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipV2Type"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SharedClipType" : {
        "type" : "object",
        "properties" : {
          "clipMetaData" : {
            "$ref" : "#/components/schemas/ClipMetaDataType"
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SharedClipV2Type" : {
        "type" : "object",
        "properties" : {
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SharedClipWithDetailsType" : {
        "type" : "object",
        "properties" : {
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SharedTimelapseClipType" : {
        "type" : "object",
        "properties" : {
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "clipFormat" : {
            "type" : "string",
            "enum" : [ "MPEG", "GIF" ],
            "nullable" : true
          },
          "sources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelapseSource"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "videoStartTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "videoStopTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "SharedTimelapseGroupWrapperType" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "isSecured" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedTimelapses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedTimelapseClipType"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ShellyDevice" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "canSendCommands" : {
            "type" : "string",
            "enum" : [ "AUTHORIZED", "UNAUTHORIZED", "UNKNOWN" ],
            "nullable" : true
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceType" : {
            "type" : "string",
            "enum" : [ "RELAY", "LIGHT", "ROLLER" ],
            "nullable" : true
          },
          "hostUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "isOnline" : {
            "type" : "boolean",
            "nullable" : true
          },
          "temperature" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "voltage" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "ShellyType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "canSendDiagnosticNotifications" : {
              "type" : "boolean",
              "nullable" : true
            },
            "diagnosticQuietPeriodSecs" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "shellyDeviceMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ShellyDevice"
              },
              "nullable" : true
            },
            "thirdPartyDeviceToLocationMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Shipment" : {
        "type" : "object",
        "properties" : {
          "methodOfPaymentCode" : {
            "type" : "string",
            "nullable" : true
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "serviceLevel" : {
            "type" : "string",
            "enum" : [ "NEXT_DAY", "SECOND_DAY", "THREE_DAY", "FOUR_DAY", "GROUND", "LOCAL", "NEXT_DAY_MORNING", "WAREHOUSE" ],
            "nullable" : true
          },
          "shipDateMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "shippingMethod" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ShippedItemType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "partNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "quantityShipped" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Shipper" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "address3" : {
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "contactName" : {
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "referenceId" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SimpleAuditEventType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "auditEvent" : {
            "type" : "string",
            "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "SimpleDeviceActivityEventType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "activityEvent"
        },
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        },
        "title" : "DeviceActivityEventType"
      },
      "SimpleDiagnosticEventType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "diagnosticEvent" : {
            "type" : "string",
            "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "SlackSettings" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "channel" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SlackSettingsV2" : {
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "string",
            "nullable" : true
          },
          "channelName" : {
            "type" : "string",
            "nullable" : true
          },
          "code" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgAccessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "sendChannelNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sendUserNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserInfo"
            },
            "description" : "A HashMap of <RhombusOrgUser uuid : Slack user uuid, user access token>. This stores the information for each Slack user.",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SplicedClipProgress" : {
        "type" : "object",
        "properties" : {
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "segmentsUploaded" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalSegments" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "SplicedClipType" : {
        "type" : "object",
        "properties" : {
          "accessSettings" : {
            "$ref" : "#/components/schemas/ClipAccessSettings"
          },
          "analyzeClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clipTargetLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "consoleDelete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SplicedClipProgress"
            },
            "nullable" : true
          },
          "devicePresentationOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SplicedClipProgress"
            },
            "nullable" : true
          },
          "deviceUuidToAlteredViewMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuidToFisheyePresentationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "integrationUploadList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          },
          "isPolicyEvent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "metadataBucketRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveFrame" : {
            "type" : "boolean",
            "nullable" : true
          },
          "segmentsUploaded" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATING", "UPLOADING", "RENDERING", "FAILED", "COMPLETE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "thumbnailRelativeSecond" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "totalSegments" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "transactionUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SquareSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationIdToDeviceUuidsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "StandardCsnType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "StaticEpochSecondsProvisioner" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Stats" : {
        "type" : "object",
        "properties" : {
          "avg" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "stddev" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "StatsCredentialReference" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "StreamTypeEnum" : {
        "type" : "string",
        "enum" : [ "USER", "ALARM_MONITORING", "DICE", "LUMEO", "INFORMACAST", "RAPIDSOS", "UNKNOWN" ]
      },
      "SubLocationsHierarchyKey" : {
        "type" : "object",
        "format" : "SubLocationsHierarchyKey",
        "description" : "A sequence of one or more base 64 (url-safe) uuid substrings. These substrings are separated by dots (.).",
        "example" : "AAAAAAAAAAAAAAAAAAAAAA.AAAAAAAAAAAAAAAAAAAAAA.AAAAAAAAAAAAAAAAAAAAAA",
        "properties" : {
          "locationUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "SummaryCountTimeSeriesDataPointType" : {
        "type" : "object",
        "properties" : {
          "avgEventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EventCount"
            },
            "nullable" : true
          },
          "dateLocal" : {
            "type" : "string",
            "nullable" : true
          },
          "dateUtc" : {
            "type" : "string",
            "nullable" : true
          },
          "maxEventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EventCount"
            },
            "nullable" : true
          },
          "minEventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EventCount"
            },
            "nullable" : true
          }
        }
      },
      "SupervisionModeEnumType" : {
        "type" : "string",
        "enum" : [ "CUT_DETECT", "SHORT_DETECT", "CUT_AND_SHORT_DETECT" ]
      },
      "SupervisionStateEnumType" : {
        "type" : "string",
        "enum" : [ "CUT_DETECTED", "SHORT_DETECTED", "NORMAL", "INVALID", "UNKNOWN" ]
      },
      "SupportAuthorityEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "grantedToInternalEntityUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "grantedToName" : {
              "type" : "string",
              "nullable" : true
            },
            "supportAuthorityUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "supportUserEmail" : {
              "type" : "string",
              "nullable" : true
            },
            "supportUsername" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "SupportAuthorityLockdownEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "grantedToInternalEntityUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "grantedToName" : {
              "type" : "string",
              "nullable" : true
            },
            "supportAuthorityUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "supportUserEmail" : {
              "type" : "string",
              "nullable" : true
            },
            "supportUsername" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "SupportAuthorityType" : {
        "type" : "object",
        "properties" : {
          "authorityType" : {
            "type" : "string",
            "enum" : [ "PARTNER_SUPPORT", "RHOMBUS_SUPPORT" ],
            "nullable" : true
          },
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "grantedByUsername" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToInternalEntityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToName" : {
            "type" : "string",
            "nullable" : true
          },
          "loginAccessAllowed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "managedByMsp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_AddSupportAuthorityWSRequest" : {
        "type" : "object",
        "properties" : {
          "authority" : {
            "$ref" : "#/components/schemas/SupportAuthorityType"
          },
          "isCertifiedPartner" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Support_AddSupportAuthorityWSResponse" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_AlllowSupportAuthorityAccessWSRequest" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_AlllowSupportAuthorityAccessWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_FindSupportAuthoritySessionsWSRequest" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_FindSupportAuthoritySessionsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sessions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SessionInfoWSType"
            },
            "nullable" : true
          }
        }
      },
      "Support_GetSupportAuthoritiesWSRequest" : {
        "type" : "object"
      },
      "Support_GetSupportAuthoritiesWSResponse" : {
        "type" : "object",
        "properties" : {
          "authorities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Support_SupportAuthorityWSType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_LogoutAllSupportAuthoritySessionsWSRequest" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_LogoutAllSupportAuthoritySessionsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_LookupSupportPartnerAuthoritiesWSRequest" : {
        "type" : "object",
        "properties" : {
          "lookupKeyword" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_LookupSupportPartnerAuthoritiesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "supportPartnerAuthorities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Support_SupportPartnerAuthorityWSType"
            },
            "nullable" : true
          }
        }
      },
      "Support_RemoveSupportAuthorityWSRequest" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_RemoveSupportAuthorityWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_RevokeSupportAuthorityAccessWSRequest" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_RevokeSupportAuthorityAccessWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_SupportAuthoritySelectiveUpdateWSType" : {
        "type" : "object",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "grantedToEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToName" : {
            "type" : "string",
            "nullable" : true
          },
          "loginAccessAllowed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_SupportAuthorityWSType" : {
        "type" : "object",
        "properties" : {
          "authorityType" : {
            "type" : "string",
            "enum" : [ "PARTNER_SUPPORT", "RHOMBUS_SUPPORT" ],
            "nullable" : true
          },
          "authorityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "grantedByUsername" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToInternalEntityUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToName" : {
            "type" : "string",
            "nullable" : true
          },
          "loginAccessAllowed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "managedByMsp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mobileAccessUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webAccessUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_SupportPartnerAuthorityWSType" : {
        "type" : "object",
        "properties" : {
          "contactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "contactName" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_UpdateSupportAuthorityWSRequest" : {
        "type" : "object",
        "properties" : {
          "update" : {
            "$ref" : "#/components/schemas/Support_SupportAuthoritySelectiveUpdateWSType"
          }
        }
      },
      "Support_UpdateSupportAuthorityWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "TPLinkSettings" : {
        "type" : "object",
        "properties" : {
          "cameraToSwitchMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "targetState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "TamperSettings" : {
        "type" : "object",
        "properties" : {
          "accelerometer_change_tamper_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "accelerometer_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "pressure_switch_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "TamperSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Tamper detection settings",
        "properties" : {
          "accelerometer_change_tamper_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "accelerometer_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "pressure_switch_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "TempProbeType" : {
        "type" : "object",
        "properties" : {
          "adcMv" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "adcRaw" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "present" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ThirdPartyCameraPasswordType" : {
        "type" : "object",
        "properties" : {
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ThirdPartyCameraSettings" : {
        "type" : "object",
        "properties" : {
          "onvif_ip" : {
            "type" : "string",
            "nullable" : true
          },
          "onvif_password" : {
            "type" : "string",
            "nullable" : true
          },
          "onvif_profiletoken" : {
            "type" : "string",
            "nullable" : true
          },
          "onvif_username" : {
            "type" : "string",
            "nullable" : true
          },
          "ptz_engine" : {
            "type" : "string",
            "enum" : [ "DIGITAL", "MECHANICAL", "NONE", "UNKNOWN" ],
            "nullable" : true
          },
          "ptz_movement" : {
            "type" : "string",
            "enum" : [ "RELATIVE", "ABSOLUTE" ],
            "nullable" : true
          },
          "ptz_translation_space" : {
            "type" : "string",
            "enum" : [ "FOV", "DIGITAL", "NONE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "ThreatCaseStatus" : {
        "type" : "string",
        "enum" : [ "INITIATED", "REQUESTED", "FOLLOW_ON", "ESCALATED", "PSAP_CONTACTED", "VERIFIED", "DISMISSED", "CANCELLED", "UNVERIFIABLE", "TIMEOUT", "ERROR", "CLOSED" ]
      },
      "ThreatCaseTimelineEventType" : {
        "type" : "object",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "nullable" : true
          },
          "noonlightVerificationId" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ThreatCaseTimelineEventTypeEnum"
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ThreatCaseTimelineEventTypeEnum" : {
        "type" : "string",
        "enum" : [ "ALERT", "DELAYED_ALERT", "USER", "SERVICE_PROVIDER", "ERROR", "PANIC_BUTTON", "ACCESS_CONTROL_INTEGRATION", "UNKNOWN" ]
      },
      "TimeInterval" : {
        "type" : "object",
        "properties" : {
          "endMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "TimeSeriesDataPointV2Type" : {
        "type" : "object",
        "properties" : {
          "dateLocal" : {
            "type" : "string",
            "nullable" : true
          },
          "dateUtc" : {
            "type" : "string",
            "nullable" : true
          },
          "eventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "TimeWindowSeconds" : {
        "type" : "object",
        "properties" : {
          "durationSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "TimelapseClipType" : {
        "type" : "object",
        "properties" : {
          "clipCreationTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "clipFormat" : {
            "type" : "string",
            "enum" : [ "MPEG", "GIF" ],
            "nullable" : true
          },
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "drawCameraDetails" : {
            "type" : "boolean",
            "nullable" : true
          },
          "drawTimestamp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "drawWatermark" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "passwordDigest" : {
            "type" : "string",
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "skipNights" : {
            "type" : "boolean",
            "nullable" : true
          },
          "skipNonBusinessHours" : {
            "type" : "boolean",
            "nullable" : true
          },
          "skipWeekends" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelapseSource"
            },
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/TimelapseStatus"
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "videoStartTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "videoStopTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "TimelapseSource" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "TimelapseStatus" : {
        "type" : "object",
        "properties" : {
          "percentComplete" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "INITIATED", "INPROGRESS", "COMPLETE", "FAILED" ],
            "nullable" : true
          }
        }
      },
      "TimestampFilter" : {
        "type" : "object",
        "description" : "Optional filter by an event timestamp. If not specified, the filter defaults to the last 7 days.",
        "properties" : {
          "rangeEnd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "End of the date range (inclusive).",
            "nullable" : true
          },
          "rangeStart" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Start of the date range (inclusive).",
            "nullable" : true
          }
        }
      },
      "ToastCheckInfo" : {
        "type" : "object",
        "properties" : {
          "totalAmount" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "ToastOrderIdType" : {
        "type" : "object",
        "properties" : {
          "employeeName" : {
            "type" : "string",
            "nullable" : true
          },
          "guid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "restaurantName" : {
            "type" : "string",
            "nullable" : true
          },
          "toastCheckInfo" : {
            "$ref" : "#/components/schemas/ToastCheckInfo"
          }
        }
      },
      "ToastRestaurantInfo" : {
        "type" : "object",
        "description" : "A HashMap of <Restaurant Guid, ToastRestaurantInfo>. This stores the information for each restaurant.",
        "properties" : {
          "locationName" : {
            "type" : "string",
            "description" : "The location name of the restaurant from Toast",
            "nullable" : true
          },
          "restaurantName" : {
            "type" : "string",
            "description" : "The name of the restaurant from Toast. e.g., COFFEE CAN",
            "nullable" : true
          }
        }
      },
      "ToastRestaurantSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "locationName" : {
            "type" : "string",
            "description" : "The location name of the restaurant from Toast",
            "nullable" : true
          },
          "restaurantName" : {
            "type" : "string",
            "description" : "The name of the restaurant from Toast, e.g. COFFEE CAN",
            "nullable" : true
          },
          "serviceAreaSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/GenericPosSettings"
            },
            "description" : "Collection of service area settings for this restaurant",
            "nullable" : true
          }
        }
      },
      "ToastSettings" : {
        "type" : "object",
        "properties" : {
          "currentToastRestaurantGuid" : {
            "type" : "string",
            "description" : "The current restaurant guid you want to use",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "posInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PosIntegrationInfoType"
            },
            "description" : "A HashMap of <Service Area Guid, PosIntegrationInfoType>. This stores the Pos Information and assigned cameras.",
            "nullable" : true
          },
          "toastRestaurantInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ToastRestaurantInfo"
            },
            "description" : "A HashMap of <Restaurant Guid, ToastRestaurantInfo>. This stores the information for each restaurant.",
            "nullable" : true
          }
        }
      },
      "ToastType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "currentToastRestaurantGuid" : {
              "type" : "string",
              "nullable" : true
            },
            "restaurantSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ToastRestaurantSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "TriggerComponentRelayActionRecordType" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "outputType" : {
            "$ref" : "#/components/schemas/ComponentRelayOutputType"
          },
          "overrideRelayDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "overrideRelayDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          },
          "succeeded" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "TriggerComponentRelayActionType" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "outputType" : {
            "$ref" : "#/components/schemas/ComponentRelayOutputType"
          },
          "overrideRelayDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "overrideRelayDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "TriggerContent" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "experienceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "experienceNames" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "nullable" : true
          },
          "parameter1" : {
            "type" : "string",
            "nullable" : true
          },
          "parameter2" : {
            "type" : "string",
            "nullable" : true
          },
          "parameter3" : {
            "type" : "string",
            "nullable" : true
          },
          "playerDeviceNames" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "playerIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "playerTags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "TripwireSettingsType" : {
        "type" : "object",
        "properties" : {
          "intervalSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "threshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "TvOsConfigType" : {
        "type" : "object",
        "properties" : {
          "limitedVideoWallUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Tvos_GetTvOsConfigWsRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Tvos_GetTvOsConfigWsResponse" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/TvOsConfigType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Tvos_GetTvOsConfigsForOrgWsRequest" : {
        "type" : "object"
      },
      "Tvos_GetTvOsConfigsForOrgWsResponse" : {
        "type" : "object",
        "properties" : {
          "configs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TvOsConfigType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Tvos_UpdateTvOsConfigWsRequest" : {
        "type" : "object",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/TvOsConfigType"
          }
        }
      },
      "Tvos_UpdateTvOsConfigWsResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "TwilioSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "phoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "UAPSettingsType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "text" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UnHealthyDeviceAlertType" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "symptom" : {
            "type" : "string",
            "enum" : [ "POLICY_NOT_ASSIGNED", "DOWN", "SLOW_INTERNET" ],
            "nullable" : true
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UnlockDoorActionRecordType" : {
        "type" : "object",
        "properties" : {
          "doorId" : {
            "type" : "string",
            "nullable" : true
          },
          "placeId" : {
            "type" : "string",
            "nullable" : true
          },
          "succeeded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "system" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserCustomMetadataTextElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "color" : {
              "type" : "string",
              "nullable" : true
            },
            "maxWidth" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "metadataTemplateUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "style" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "UserCustomizationsType" : {
        "type" : "object",
        "properties" : {
          "dashboard" : {
            "$ref" : "#/components/schemas/DashboardCustomizations"
          },
          "frontend" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "userEmail" : {
              "type" : "string",
              "nullable" : true
            },
            "userUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "username" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "UserInfo" : {
        "type" : "object",
        "description" : "A HashMap of <RhombusOrgUser uuid : Slack user uuid, user access token>. This stores the information for each Slack user.",
        "properties" : {
          "userAccessToken" : {
            "type" : "string",
            "description" : "Slack user access token",
            "nullable" : true
          },
          "userId" : {
            "type" : "string",
            "description" : "Slack user uuid",
            "nullable" : true
          }
        }
      },
      "UserLockdownEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "userEmail" : {
              "type" : "string",
              "nullable" : true
            },
            "userUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "username" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "UserMetadataEnum" : {
        "type" : "string",
        "enum" : [ "NAME", "FIRST_NAME", "LAST_NAME", "EMAIL" ]
      },
      "UserMetadataField" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "fieldValue" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "templateUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserMetadataFieldTemplate" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "fieldName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scimFieldName" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserMetadataFieldTemplateSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "fieldName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scimFieldName" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserMetadataTextElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "color" : {
              "type" : "string",
              "nullable" : true
            },
            "field" : {
              "$ref" : "#/components/schemas/UserMetadataEnum"
            },
            "maxWidth" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "style" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "UserNotificationSelectiveUpdateV2" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timeFrames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationTimeFrame"
            },
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserNotificationSettingsV3Type" : {
        "type" : "object",
        "properties" : {
          "notificationIntervalsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserNotificationSettingsV4Type" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timeFrames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationTimeFrame"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserPermissionGroupType" : {
        "type" : "object",
        "properties" : {
          "accessControlLocationAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "accessibleLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "assignablePermissionGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "defaultAccessControlPermissionForNewLocations" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "defaultPermissionForNewLocations" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "functionalityList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Functionality"
            },
            "nullable" : true
          },
          "inLine" : {
            "type" : "boolean",
            "nullable" : true
          },
          "installer" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "locationGranularAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/Permission"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "storedInS3" : {
            "type" : "boolean",
            "nullable" : true
          },
          "superAdmin" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userPermissionGroupAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserPermissionType" : {
        "type" : "object",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UserProfilePhotoElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "height" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "width" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "UserVirtualMfaDeviceType" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "User_AssignEmailToUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "emailToAssign" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_AssignEmailToUserWSResponse" : {
        "type" : "object"
      },
      "User_ChangeUserEmailWSRequest" : {
        "type" : "object",
        "properties" : {
          "newEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_ChangeUserEmailWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_ChangeUserPasswordWSRequest" : {
        "type" : "object",
        "properties" : {
          "currentPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "newPassword" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_ChangeUserPasswordWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "User_CreateUserWSRequest" : {
        "type" : "object",
        "description" : "CreateUserWSRequest",
        "properties" : {
          "accessibleRhombusApps" : {
            "type" : "array",
            "description" : "The set of accessible Rhombus apps",
            "items" : {
              "type" : "string",
              "description" : "The set of accessible Rhombus apps",
              "enum" : [ "PARTNER", "CONSOLE", "RHOMBUS_KEY", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "email" : {
            "type" : "string",
            "description" : "The email of the user",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the user",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "description" : "The group uuid of the permission group",
            "nullable" : true
          },
          "rhombusKeySettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "suppressRhombusKeyWelcomeEmail" : {
            "type" : "boolean",
            "description" : "Suppress the welcome email for the Rhombus Key mobile app if the user is provided access",
            "nullable" : true
          },
          "suppressWelcomeEmail" : {
            "type" : "boolean",
            "description" : "Suppress the welcome email",
            "nullable" : true
          }
        }
      },
      "User_CreateUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_DeleteUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_DeleteUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_DeleteVirtualMfaDeviceForCurrentUserWSRequest" : {
        "type" : "object"
      },
      "User_DeleteVirtualMfaDeviceForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_FindUserByEmailWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_FindUserByEmailWSResponse" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "User_FindUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_FindUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "User_GetImportUsersFormatWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "example" : {
            "type" : "string",
            "nullable" : true
          },
          "explanation" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_GetRhombusKeyConfigForUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_GetRhombusKeyConfigForUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "userRhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          }
        }
      },
      "User_GetUserCustomizationFlagsWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_GetUserCustomizationFlagsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "userCustomizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "User_GetUsersInOrgForReportsWSRequest" : {
        "type" : "object"
      },
      "User_GetUsersInOrgForReportsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RhombusOrgUserType"
            },
            "nullable" : true
          }
        }
      },
      "User_GetUsersInOrgWSRequest" : {
        "type" : "object"
      },
      "User_GetUsersInOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserNotificationSettingsV3Type"
            },
            "nullable" : true
          },
          "notificationSettingsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserNotificationSettingsV4Type"
            },
            "nullable" : true
          },
          "partners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
            },
            "nullable" : true
          },
          "rhombusKeyAppConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
            },
            "nullable" : true
          },
          "snoozeSettings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User_UserSnoozeNotificationSettingsType"
            },
            "nullable" : true
          },
          "userPermissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserPermissionType"
            },
            "nullable" : true
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
            },
            "nullable" : true
          }
        }
      },
      "User_GetVirtualMfaDeviceForCurrentUserWSRequest" : {
        "type" : "object"
      },
      "User_GetVirtualMfaDeviceForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "virtualMfaDevice" : {
            "$ref" : "#/components/schemas/UserVirtualMfaDeviceType"
          }
        }
      },
      "User_ImportUsersWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "User_RhombusKeyOrgDetailsType" : {
        "type" : "object",
        "properties" : {
          "companyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendMobileDownloadSMSWSRequest" : {
        "type" : "object",
        "properties" : {
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendMobileDownloadSMSWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendPartnerAccessGrantedEmailWSRequest" : {
        "type" : "object",
        "properties" : {
          "loginLink" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerEmailAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerFullName" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendPartnerAccessGrantedEmailWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendRhombusKeyUserWelcomeEmailWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendRhombusKeyUserWelcomeEmailWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendUserWelcomeEmailWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendUserWelcomeEmailWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SetupVirtualMfaDeviceForCurrentUserWSRequest" : {
        "type" : "object"
      },
      "User_SetupVirtualMfaDeviceForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "alreadyExists" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "qrCodeSetupData" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "User_UpdatePartnerUserNotificationSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "allClientsSelected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientNotificationIntervalsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PartnerNotificationClientSection"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationIntervalsForAllClients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationClientSection"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdatePartnerUserNotificationSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdatePartnerWSRequest" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsType"
          },
          "notificationSettingsV2" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsV2"
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdatePartnerWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateRhombusKeySettingsForUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "endDateProvisioner" : {
            "$ref" : "#/components/schemas/EpochSecondsProvisioner"
          },
          "maxMobileCredsAllowed" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusKeyAccessEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startDateProvisioner" : {
            "$ref" : "#/components/schemas/EpochSecondsProvisioner"
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateRhombusKeySettingsForUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "userRhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          }
        }
      },
      "User_UpdateUserCustomizationFlagsWSRequest" : {
        "type" : "object",
        "properties" : {
          "userCustomizationFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserCustomizationFlagsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserNotificationSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timeFrames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationTimeFrame"
            },
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserNotificationSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserSelectiveWSRequest" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationIntervalsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserSelectiveWSResponse" : {
        "type" : "object"
      },
      "User_UpdateUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationIntervalsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UserSnoozeNotificationSettingsType" : {
        "type" : "object",
        "properties" : {
          "snoozedForAllNotificationsIntervals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledIntervalType"
            },
            "nullable" : true
          },
          "snoozedForDevicesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "snoozedForLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_metadata_CreateUserMetadataFieldTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
          }
        }
      },
      "User_metadata_CreateUserMetadataFieldTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
          }
        }
      },
      "User_metadata_DeleteUserMetadataFieldTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "templateUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_metadata_DeleteUserMetadataFieldTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
          }
        }
      },
      "User_metadata_DeleteUserMetadataFieldWSRequest" : {
        "type" : "object",
        "properties" : {
          "templateUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_metadata_DeleteUserMetadataFieldWSResponse" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "$ref" : "#/components/schemas/UserMetadataField"
          }
        }
      },
      "User_metadata_FindUserMetadataFieldTemplatesWSRequest" : {
        "type" : "object"
      },
      "User_metadata_FindUserMetadataFieldTemplatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "templateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
            },
            "nullable" : true
          }
        }
      },
      "User_metadata_FindUserMetadataFieldsWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_metadata_FindUserMetadataFieldsWSResponse" : {
        "type" : "object",
        "properties" : {
          "templateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
            },
            "nullable" : true
          },
          "userFieldValueMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataField"
            },
            "nullable" : true
          }
        }
      },
      "User_metadata_SaveUserMetadataFieldsWSRequest" : {
        "type" : "object",
        "properties" : {
          "fieldValueMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_metadata_SaveUserMetadataFieldsWSResponse" : {
        "type" : "object",
        "properties" : {
          "templateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
            },
            "nullable" : true
          },
          "userFieldValueMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataField"
            },
            "nullable" : true
          }
        }
      },
      "User_metadata_UpdateUserMetadataFieldTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "selectiveUpdate" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplateSelectiveUpdate"
          }
        }
      },
      "User_metadata_UpdateUserMetadataFieldTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
          }
        }
      },
      "VacantActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "vacancyThresholdSec" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "VehicleEventIndexType" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "eventTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "matchingLicensePlates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "partialLicensePlates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VehicleEventSearchHitType" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "eventTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "matchingLicensePlates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "partialLicensePlates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "searchMatchedTerm" : {
            "type" : "string",
            "nullable" : true
          },
          "searchMatchedType" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VehicleV2Type" : {
        "type" : "object",
        "properties" : {
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "trust" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Vehicle_AddVehicleLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_AddVehicleLabelWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_AssociateEventsToVehicleWSRequest" : {
        "type" : "object",
        "properties" : {
          "eventUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_AssociateEventsToVehicleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_DeleteVehicleWSRequest" : {
        "type" : "object",
        "properties" : {
          "vehicleLicensePlate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_DeleteVehicleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsForVehicleWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsForVehicleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetVehicleEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuidFilter" : {
            "type" : "array",
            "description" : "Filter events by specific reporting device uuids",
            "items" : {
              "type" : "string",
              "description" : "Filter events by specific reporting device uuids",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Time window filter end (newest) time in Epoch milliseconds",
            "nullable" : true
          },
          "licensePlateExactQuery" : {
            "type" : "array",
            "description" : "Query events by exact license plate number. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "items" : {
              "type" : "string",
              "description" : "Query events by exact license plate number. Query fields are additive queries (returned events satisfy at least one of the query fields)",
              "nullable" : true
            },
            "nullable" : true
          },
          "licensePlateFuzzyQuery" : {
            "type" : "string",
            "description" : "Query events by partial or complete license plate with fuzzy character matching. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "nullable" : true
          },
          "locationUuidFilter" : {
            "type" : "array",
            "description" : "Filter events by specific reporting location uuids",
            "items" : {
              "type" : "string",
              "description" : "Filter events by specific reporting location uuids",
              "nullable" : true
            },
            "nullable" : true
          },
          "nameQuery" : {
            "type" : "array",
            "description" : "Query events by vehicle name. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "items" : {
              "type" : "string",
              "description" : "Query events by vehicle name. Query fields are additive queries (returned events satisfy at least one of the query fields)",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Time window filter start (oldest) time in Epoch milliseconds",
            "nullable" : true
          },
          "unnamedQuery" : {
            "type" : "boolean",
            "description" : "Query events by name presence.  If false, returns events with a name.  If true, returns events without names.  Omit if not needed.  Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "nullable" : true
          },
          "vehicleLabelQuery" : {
            "type" : "array",
            "description" : "Query events by vehicle labels. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "items" : {
              "type" : "string",
              "description" : "Query events by vehicle labels. Query fields are additive queries (returned events satisfy at least one of the query fields)",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetVehicleEventsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetVehicleLabelsForOrgWSRequest" : {
        "type" : "object"
      },
      "Vehicle_GetVehicleLabelsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleLabels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetVehiclesWSRequest" : {
        "type" : "object"
      },
      "Vehicle_GetVehiclesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VehicleV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_RemoveVehicleLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_RemoveVehicleLabelWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_ReportVehicleEventRequest" : {
        "type" : "object",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_ReportVehicleEventResponse" : {
        "type" : "object",
        "properties" : {
          "collectedMediaForTraining" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_SaveVehicleWSRequest" : {
        "type" : "object",
        "properties" : {
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "trust" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_SaveVehicleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VerificationHistory" : {
        "type" : "object",
        "properties" : {
          "alertIndex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "currentVerification" : {
            "$ref" : "#/components/schemas/VerificationRecord"
          },
          "verificationRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VerificationRecord"
            },
            "nullable" : true
          }
        }
      },
      "VerificationRecord" : {
        "type" : "object",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "clipVerificationId" : {
            "type" : "string",
            "nullable" : true
          },
          "failedAsClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "failedAsStream" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sentAsClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sentAsClipAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "sentAsWindowedStream" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sentAsWindowedStreamAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "streamVerificationId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VideoDoorbellSettings" : {
        "type" : "object",
        "properties" : {
          "standalone_doorbell_mode" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "VideoDoorbellSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Video Doorbell settings",
        "properties" : {
          "standalone_doorbell_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "VideoIntercomPolicyType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VideoIntercomScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VideoIntercomScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VideoIntercomTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "VideoIntercomTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "faceAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "faceAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "lufsThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "peopleCountThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "vehicleAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicleAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "VideoSimilarityModelEnum" : {
        "type" : "string",
        "enum" : [ "CHRIS_POSE_512", "CHRIS_BOX_512", "UNKNOWN" ]
      },
      "VideoWallType" : {
        "type" : "object",
        "properties" : {
          "deviceList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "othersCanEdit" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_CancelSpliceV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "clipUuidList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Video_CancelSpliceV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_CancelSpliceWSRequest" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_CancelSpliceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_CreateSharedTimelapseGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "plaintextPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "timelapseUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_CreateSharedTimelapseGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_DeleteSharedTimelapseGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_DeleteSharedTimelapseGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_DeleteTimelapseClipsWSRequest" : {
        "type" : "object",
        "properties" : {
          "clipUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Video_DeleteTimelapseClipsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_GenerateTimelapseClipWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "drawCameraDetails" : {
            "type" : "boolean",
            "nullable" : true
          },
          "drawTimestamp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "skipNights" : {
            "type" : "boolean",
            "nullable" : true
          },
          "skipWeekends" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "stopTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "videoDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "videoFormat" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_GenerateTimelapseClipWSResponse" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_GetExactFrameUriWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "description" : "Device Facet ID of the camera",
            "nullable" : true
          },
          "downscaleFactor" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Ratio to shrink the image pixels by",
            "minimum" : 1,
            "nullable" : true
          },
          "jpgQuality" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust quality of image compression",
            "maximum" : 100,
            "minimum" : 0,
            "nullable" : true
          },
          "permyriadCropHeight" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Precise ratio to crop the height by. Capped at 10000, which is 100.00% of the image",
            "maximum" : 10000,
            "minimum" : 0,
            "nullable" : true
          },
          "permyriadCropWidth" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Precise ratio to crop the width by. Capped at 10000, which is 100.00% of the image",
            "maximum" : 10000,
            "minimum" : 0,
            "nullable" : true
          },
          "permyriadCropX" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Proportional location to start horizontal crop at. Where 10000 is 100.00% of, or the end of the image",
            "maximum" : 10000,
            "minimum" : 0,
            "nullable" : true
          },
          "permyriadCropY" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Proportional location to start vertical crop at. Where 10000 is 100.00% of, or the end of the image",
            "maximum" : 10000,
            "minimum" : 0,
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in epoch milliseconds",
            "nullable" : true
          }
        },
        "required" : [ "cameraUuid", "timestampMs" ]
      },
      "Video_GetExactFrameUriWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "frameUri" : {
            "type" : "string",
            "nullable" : true
          },
          "responseMessage" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_GetMaxSpliceDurationWSRequest" : {
        "type" : "object"
      },
      "Video_GetMaxSpliceDurationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "maxDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Video_GetSharedTimelapseGroupsWSRequest" : {
        "type" : "object"
      },
      "Video_GetSharedTimelapseGroupsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedTimelapses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedTimelapseGroupWrapperType"
            },
            "nullable" : true
          }
        }
      },
      "Video_GetSplicedClipsInProgressWSRequest" : {
        "type" : "object"
      },
      "Video_GetSplicedClipsInProgressWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "splicedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SplicedClipType"
            },
            "nullable" : true
          }
        }
      },
      "Video_GetTimelapseClipsWSRequest" : {
        "type" : "object"
      },
      "Video_GetTimelapseClipsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timelapseClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelapseClipType"
            },
            "nullable" : true
          }
        }
      },
      "Video_GetTimelapseMetadataWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuidList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Video_GetTimelapseMetadataWSResponse" : {
        "type" : "object",
        "properties" : {
          "earliestTimestampMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_RetrySpliceWSRequest" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Video_RetrySpliceWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_ShareTimelapseClipsWSRequest" : {
        "type" : "object",
        "properties" : {
          "clipUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Video_ShareTimelapseClipsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrlMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Video_SpliceFrameWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Video_SpliceFrameWSResponse" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_SpliceV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "fisheyePresentationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "startTimeMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_SpliceV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_SpliceV3WSRequest" : {
        "type" : "object",
        "properties" : {
          "alteredViewMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "audioIncluded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clipVisibility" : {
            "$ref" : "#/components/schemas/ClipVisibility"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "integrationUploadMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "saveToConsole" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sendToUserStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTimeMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_SpliceV3WSResponse" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "clipUuidList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_SpliceWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Video_SpliceWSResponse" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_UpdateSharedTimelapseGroupWSRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "descriptionUpdate" : {
            "type" : "boolean",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "expirationTimeUpdate" : {
            "type" : "boolean",
            "nullable" : true
          },
          "passwordUpdate" : {
            "type" : "boolean",
            "nullable" : true
          },
          "plaintextPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "titleUpdate" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_UpdateSharedTimelapseGroupWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_UpdateTimelapseClipMetadataWSRequest" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "description" : "The UUID of the timelapse clip to be updated",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The new description for the timelapse clip. Omit this field to not update. Providing the field with null will cause the field to be unset",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "The new title for the timelapse clip. Omit this field to not update. Providing the field with null will cause the field to be unset",
            "nullable" : true
          }
        },
        "required" : [ "clipUuid" ]
      },
      "Video_UpdateTimelapseClipMetadataWSResponse" : {
        "type" : "object",
        "properties" : {
          "timelapseClip" : {
            "$ref" : "#/components/schemas/TimelapseClipType"
          }
        }
      },
      "VisionLLMEventRecordType" : {
        "type" : "object",
        "properties" : {
          "deviceFacetUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "fullResponse" : {
            "type" : "string",
            "nullable" : true
          },
          "parsedAffirmativeResponse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userPrompt" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VisionLLMRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "createAffirmativeSeekpoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createNegativeSeekpoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "deviceFacetUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "highDetail" : {
              "type" : "boolean",
              "nullable" : true
            },
            "userPrompt" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "WaveToUnlockIntentExpiredEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "authWaitMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "authWaitMsTotal" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "credentials" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CredentialEntry"
              },
              "nullable" : true
            },
            "rssiThreshold" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WaveToUnlockSettingsType" : {
        "type" : "object",
        "properties" : {
          "awaitAuthDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "minRSSIThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "showAwaitIntentFeedback" : {
            "type" : "boolean",
            "nullable" : true
          },
          "treatNfcAsIntent" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "WaveToUnlockSettingsType_Minimal" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "minRSSIThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "WebhookActionType" : {
        "type" : "object",
        "properties" : {
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WebhookInfo" : {
        "type" : "object",
        "properties" : {
          "webhookDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WebhookMapEntry" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "orgId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "WebhookSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WebhooksType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activityWebhooks" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "activityWebhooksV2" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/WebhookInfo"
              },
              "nullable" : true
            },
            "diagnosticWebhooks" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "diagnosticWebhooksV2" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/WebhookInfo"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WeeklyMinuteIntervalType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "WeeklyRepeatingScheduleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "intervalList" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WeeklyStatisticsDataPoint" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "nullable" : true
          },
          "stats" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Stats"
            },
            "nullable" : true
          }
        }
      },
      "Wiegand64BitRawCredentialType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cardNumber" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "format" : {
              "$ref" : "#/components/schemas/WiegandFormatEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "WiegandD10202Credential" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cardNumber" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "facilityCode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "format" : {
              "$ref" : "#/components/schemas/WiegandFormatEnumType"
            },
            "nonParityValue" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "WiegandDataPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "WIEGAND_INPUT" ]
      },
      "WiegandDataPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/WiegandDataPhysicalPortEnumType"
          }
        }
      },
      "WiegandDoorReaderType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "buzzerPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "d0Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "d1Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "gledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "readerType" : {
            "$ref" : "#/components/schemas/DoorReaderEnumType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "tamperPort" : {
            "$ref" : "#/components/schemas/WiegandInputPortType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WiegandFormatEnumType" : {
        "type" : "string",
        "enum" : [ "H10301", "D10202", "H10304", "H10302", "WIEGAND_64BIT_RAW", "HID_CORP1000" ]
      },
      "WiegandH10301CredentialType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cardNumber" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "facilityCode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "format" : {
              "$ref" : "#/components/schemas/WiegandFormatEnumType"
            },
            "nonParityValue" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "WiegandH10304Credential" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cardNumber" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "facilityCode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "format" : {
              "$ref" : "#/components/schemas/WiegandFormatEnumType"
            },
            "nonParityValue" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "WiegandInputPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "WIEGAND_INPUT", "GPIO_INPUT" ]
      },
      "WiegandInputPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/WiegandInputPhysicalPortEnumType"
          }
        }
      },
      "WiegandOutputPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "WIEGAND_OUTPUT" ]
      },
      "WiegandOutputPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/WiegandOutputPhysicalPortEnumType"
          }
        }
      },
      "WrappedRhombusOrgUserType" : {
        "type" : "object",
        "properties" : {
          "accessibleRhombusApps" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PARTNER", "CONSOLE", "RHOMBUS_KEY", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "accountOwner" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "changePasswordOnLogin" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "emailVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaTokenType" : {
            "type" : "string",
            "enum" : [ "EMAIL", "SMS", "VIRTUAL_MFA" ],
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUserCustomizationFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "passwordSet" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusUserUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "JOINED", "PENDING", "INACTIVE", "UNKNOWN" ],
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ZapierEnum" : {
        "type" : "string",
        "enum" : [ "BUTTON_EVENTS", "DOOR_SENSOR_EVENTS", "ENVIRONMENTAL_SENSOR_EVENTS", "RULE_EVENTS" ]
      },
      "ZapierType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "zapierWebhooks" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ZapierWebhookSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ZapierWebhookSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "backoffSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorState" : {
            "type" : "string",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          },
          "humidityLowerThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "humidityUpperThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempLowerThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempUpperThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "zapEnum" : {
            "$ref" : "#/components/schemas/ZapierEnum"
          }
        },
        "required" : [ "url", "zapEnum" ]
      },
      "rctpRMAType" : {
        "type" : "object",
        "properties" : {
          "falseReport" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rectified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rmauuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      }
    },
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "in" : "header",
        "name" : "x-auth-apikey",
        "type" : "apiKey"
      }
    }
  },
  "x-headers" : [ {
    "key" : "x-auth-scheme",
    "value" : "api-token"
  } ],
  "x-samples-languages" : [ "curl", "node", "python", "java" ]
}