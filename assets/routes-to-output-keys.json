{
  "timestamp": "2025-07-23T17:30:48.973Z",
  "totalRoutes": 784,
  "routes": {
    "POST /api/accesscontrol/addUsersToAccessControlGroup": [
      "createdAtMillis",
      "groupUuid",
      "orgUuid",
      "type",
      "updatedAtMillis",
      "userUuid"
    ],
    "POST /api/accesscontrol/assignAccessControlCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/createAccessControlGroup": [
      "createdAtMillis",
      "description",
      "groupUuid",
      "name",
      "orgUuid",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid"
    ],
    "POST /api/accesscontrol/createAccessGrant": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/createAccessRevocation": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/createRhombusSecureCsnCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/createStandardCsnCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/createWiegandCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/doorScheduleException/createException": [
      "createdAtMillis",
      "defaultState",
      "description",
      "doorUuids",
      "localEndDate",
      "localEndDateTime",
      "localStartDate",
      "localStartDateTime",
      "locationUuid",
      "name",
      "orgUuid",
      "state",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/doorScheduleException/deleteException": [
      "exceptionUuid",
      "orgUuid"
    ],
    "POST /api/accesscontrol/doorScheduleException/findExceptions": [
      "createdAtMillis",
      "defaultState",
      "description",
      "doorUuids",
      "localEndDate",
      "localEndDateTime",
      "localStartDate",
      "localStartDateTime",
      "locationUuid",
      "name",
      "orgUuid",
      "state",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/doorScheduleException/findExceptionsForDoor": [
      "createdAtMillis",
      "defaultState",
      "description",
      "doorUuids",
      "localEndDate",
      "localEndDateTime",
      "localStartDate",
      "localStartDateTime",
      "locationUuid",
      "name",
      "orgUuid",
      "state",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/doorScheduleException/findExceptionsForLocation": [
      "createdAtMillis",
      "defaultState",
      "description",
      "doorUuids",
      "localEndDate",
      "localEndDateTime",
      "localStartDate",
      "localStartDateTime",
      "locationUuid",
      "name",
      "orgUuid",
      "state",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/doorScheduleException/getException": [
      "createdAtMillis",
      "defaultState",
      "description",
      "doorUuids",
      "localEndDate",
      "localEndDateTime",
      "localStartDate",
      "localStartDateTime",
      "locationUuid",
      "name",
      "orgUuid",
      "state",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/doorScheduleException/updateException": [
      "createdAtMillis",
      "defaultState",
      "description",
      "doorUuids",
      "localEndDate",
      "localEndDateTime",
      "localStartDate",
      "localStartDateTime",
      "locationUuid",
      "name",
      "orgUuid",
      "state",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/findAccessControlCredentialByOrg": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/findAccessControlCredentialByUser": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/findAccessControlCredentialByUsers": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/findAccessControlGroupByExactName": [
      "createdAtMillis",
      "description",
      "name",
      "orgUuid",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/findAccessControlGroupMembershipsByUser": [
      "createdAtMillis",
      "groupUuid",
      "orgUuid",
      "type",
      "updatedAtMillis",
      "userUuid"
    ],
    "POST /api/accesscontrol/findAccessControlGroupMembershipsForCurrentUser": [
      "createdAtMillis",
      "groupUuid",
      "orgUuid",
      "type",
      "updatedAtMillis",
      "userUuid"
    ],
    "POST /api/accesscontrol/findAccessControlGroupsByNamePrefix": [
      "createdAtMillis",
      "description",
      "name",
      "orgUuid",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/findAccessControlGroupsByOrg": [
      "createdAtMillis",
      "description",
      "name",
      "orgUuid",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/findAccessControlGroupsByUserMembership": [
      "createdAtMillis",
      "description",
      "name",
      "orgUuid",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/accesscontrol/findAllUsersForAccessControlGroup": [
      "createdAtMillis",
      "groupUuid",
      "orgUuid",
      "type",
      "updatedAtMillis",
      "userUuid"
    ],
    "POST /api/accesscontrol/findCredentialHistoryByCredentialHexValue": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/findCredentialHistoryByCredentialValue": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/findCredentialHistoryByUser": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/findLocationAccessGrantsByAccessControlledDoor": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessGrantsByDoorLabel": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessGrantsByGroup": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessGrantsByLocation": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessGrantsByLocationAndUser": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessGrantsByOrg": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessGrantsByUser": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessRevocationsByAccessControlledDoor": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessRevocationsByDoorLabel": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessRevocationsByGroup": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessRevocationsByOrg": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findLocationAccessRevocationsByUser": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/findRhombusSecureMobileCredentialsForCurrentUser": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/getLocationAccessGrant": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/getLocationAccessRevocation": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/getLocationsByAccessGrantForCurrentUser": [
      "address1",
      "address2",
      "addressLine2",
      "addressline1",
      "administrativeArea",
      "allAudioPlaybackRuleActionsAllowed",
      "allLiveNotificationRuleActionsAllowed",
      "allTriggerComponentRelayRuleActionsAllowed",
      "allWebhookRuleActionsAllowed",
      "allowedAudioPlaybackRuleUuids",
      "allowedLiveNotificationRuleUuids",
      "allowedTriggerComponentRelayRuleUuids",
      "allowedWebhookRuleUuids",
      "countryCode",
      "createdAtMillis",
      "defaultLockdownState",
      "doorLockdownStateMap",
      "doorStateOverrideEnabled",
      "eastEdge",
      "floorLabel",
      "floorNumber",
      "followingTestPlan",
      "groupUuids",
      "imageUrl",
      "labels",
      "latitude",
      "locality",
      "locationUuid",
      "lockdownPlanUuid",
      "longitude",
      "mediaUuid",
      "name",
      "northEdge",
      "orgUuid",
      "policyUuid",
      "postalCode",
      "regionCode",
      "rhombusKeyNotificationEnabled",
      "rhombusKeyNotificationMessage",
      "rhombusKeyNotificationOverrideMessage",
      "rotation",
      "scope",
      "scopeUuid",
      "southEdge",
      "state",
      "stateChangedAtMillis",
      "type",
      "tz",
      "updatedAtMillis",
      "userAccessOverrideEnabled",
      "userUuids",
      "uuid",
      "westEdge"
    ],
    "POST /api/accesscontrol/getMinimalAccessControlledDoorsByLocationForCurrentUser": [
      "associatedCameras",
      "componentUuid",
      "deviceUuid",
      "directionRadians",
      "enabled",
      "floorNumber",
      "latitude",
      "locationUuid",
      "longitude",
      "minRSSIThreshold",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "remoteUnlockEnabled",
      "type",
      "unlockTimeSec",
      "uuid"
    ],
    "POST /api/accesscontrol/getRhombusKeyLocationLockdownDetailsForCurrentUser": [
      "createdAtMillis",
      "followingTestPlan",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "scope",
      "scopeUuid",
      "state",
      "stateChangedAtMillis",
      "updatedAtMillis"
    ],
    "POST /api/accesscontrol/getRhombusSecureCsnCredentialDetails": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/getStandardCsnCredentialDetails": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/lockdownPlan/activateLockdownForLocation": [
      "createdAtMillis",
      "followingTestPlan",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "result",
      "scope",
      "scopeUuid",
      "state",
      "stateChangedAtMillis",
      "updatedAtMillis"
    ],
    "POST /api/accesscontrol/lockdownPlan/activateLockdownForLocationViaRhombusKey": [
      "createdAtMillis",
      "followingTestPlan",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "result",
      "scope",
      "scopeUuid",
      "state",
      "stateChangedAtMillis",
      "updatedAtMillis"
    ],
    "POST /api/accesscontrol/lockdownPlan/createLocationLockdownPlan": [
      "allAudioPlaybackRuleActionsAllowed",
      "allLiveNotificationRuleActionsAllowed",
      "allTriggerComponentRelayRuleActionsAllowed",
      "allWebhookRuleActionsAllowed",
      "allowedAudioPlaybackRuleUuids",
      "allowedLiveNotificationRuleUuids",
      "allowedTriggerComponentRelayRuleUuids",
      "allowedWebhookRuleUuids",
      "createdAtMillis",
      "defaultLockdownState",
      "doorLockdownStateMap",
      "doorStateOverrideEnabled",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "rhombusKeyNotificationEnabled",
      "rhombusKeyNotificationMessage",
      "rhombusKeyNotificationOverrideMessage",
      "scopeUuid",
      "type",
      "updatedAtMillis",
      "userAccessOverrideEnabled",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/lockdownPlan/deactivateLockdownForLocation": [
      "createdAtMillis",
      "followingTestPlan",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "result",
      "scope",
      "scopeUuid",
      "state",
      "stateChangedAtMillis",
      "updatedAtMillis"
    ],
    "POST /api/accesscontrol/lockdownPlan/deactivateLockdownForLocationViaRhombusKey": [
      "createdAtMillis",
      "followingTestPlan",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "result",
      "scope",
      "scopeUuid",
      "state",
      "stateChangedAtMillis",
      "updatedAtMillis"
    ],
    "POST /api/accesscontrol/lockdownPlan/deleteLockdownPlan": [
      "lockdownPlanUuid",
      "orgUuid"
    ],
    "POST /api/accesscontrol/lockdownPlan/disableLockdownTestModeForLocation": [
      "createdAtMillis",
      "followingTestPlan",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "scope",
      "scopeUuid",
      "state",
      "stateChangedAtMillis",
      "updatedAtMillis"
    ],
    "POST /api/accesscontrol/lockdownPlan/enableLockdownTestModeForLocation": [
      "createdAtMillis",
      "followingTestPlan",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "scope",
      "scopeUuid",
      "state",
      "stateChangedAtMillis",
      "updatedAtMillis"
    ],
    "POST /api/accesscontrol/lockdownPlan/findLocationLockdownEvents": [
      "createdAtMillis",
      "locationUuid",
      "orgUuid",
      "stateChangedAtMillis",
      "type"
    ],
    "POST /api/accesscontrol/lockdownPlan/findLocationLockdownStates": [
      "createdAtMillis",
      "followingTestPlan",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "scope",
      "scopeUuid",
      "state",
      "stateChangedAtMillis",
      "updatedAtMillis"
    ],
    "POST /api/accesscontrol/lockdownPlan/findLockdownPlans": [
      "allAudioPlaybackRuleActionsAllowed",
      "allLiveNotificationRuleActionsAllowed",
      "allTriggerComponentRelayRuleActionsAllowed",
      "allWebhookRuleActionsAllowed",
      "allowedAudioPlaybackRuleUuids",
      "allowedLiveNotificationRuleUuids",
      "allowedTriggerComponentRelayRuleUuids",
      "allowedWebhookRuleUuids",
      "createdAtMillis",
      "defaultLockdownState",
      "doorLockdownStateMap",
      "doorStateOverrideEnabled",
      "groupUuids",
      "name",
      "orgUuid",
      "rhombusKeyNotificationEnabled",
      "rhombusKeyNotificationMessage",
      "rhombusKeyNotificationOverrideMessage",
      "scopeUuid",
      "type",
      "updatedAtMillis",
      "userAccessOverrideEnabled",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/lockdownPlan/findLockdownPlansByLocation": [
      "allAudioPlaybackRuleActionsAllowed",
      "allLiveNotificationRuleActionsAllowed",
      "allTriggerComponentRelayRuleActionsAllowed",
      "allWebhookRuleActionsAllowed",
      "allowedAudioPlaybackRuleUuids",
      "allowedLiveNotificationRuleUuids",
      "allowedTriggerComponentRelayRuleUuids",
      "allowedWebhookRuleUuids",
      "createdAtMillis",
      "defaultLockdownState",
      "doorLockdownStateMap",
      "doorStateOverrideEnabled",
      "groupUuids",
      "name",
      "orgUuid",
      "rhombusKeyNotificationEnabled",
      "rhombusKeyNotificationMessage",
      "rhombusKeyNotificationOverrideMessage",
      "scopeUuid",
      "type",
      "updatedAtMillis",
      "userAccessOverrideEnabled",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/lockdownPlan/getLockdownPlan": [
      "allAudioPlaybackRuleActionsAllowed",
      "allLiveNotificationRuleActionsAllowed",
      "allTriggerComponentRelayRuleActionsAllowed",
      "allWebhookRuleActionsAllowed",
      "allowedAudioPlaybackRuleUuids",
      "allowedLiveNotificationRuleUuids",
      "allowedTriggerComponentRelayRuleUuids",
      "allowedWebhookRuleUuids",
      "createdAtMillis",
      "defaultLockdownState",
      "doorLockdownStateMap",
      "doorStateOverrideEnabled",
      "groupUuids",
      "name",
      "orgUuid",
      "rhombusKeyNotificationEnabled",
      "rhombusKeyNotificationMessage",
      "rhombusKeyNotificationOverrideMessage",
      "scopeUuid",
      "type",
      "updatedAtMillis",
      "userAccessOverrideEnabled",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/lockdownPlan/getOrCreateLocationLockdownState": [
      "createdAtMillis",
      "followingTestPlan",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "scope",
      "scopeUuid",
      "state",
      "stateChangedAtMillis",
      "updatedAtMillis"
    ],
    "POST /api/accesscontrol/lockdownPlan/updateLocationLockdownPlan": [
      "allAudioPlaybackRuleActionsAllowed",
      "allLiveNotificationRuleActionsAllowed",
      "allTriggerComponentRelayRuleActionsAllowed",
      "allWebhookRuleActionsAllowed",
      "allowedAudioPlaybackRuleUuids",
      "allowedLiveNotificationRuleUuids",
      "allowedTriggerComponentRelayRuleUuids",
      "allowedWebhookRuleUuids",
      "createdAtMillis",
      "defaultLockdownState",
      "doorLockdownStateMap",
      "doorStateOverrideEnabled",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "rhombusKeyNotificationEnabled",
      "rhombusKeyNotificationMessage",
      "rhombusKeyNotificationOverrideMessage",
      "scopeUuid",
      "type",
      "updatedAtMillis",
      "userAccessOverrideEnabled",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/provisionMobileAccessControlCredentialForCurrentUser": [
      "type"
    ],
    "POST /api/accesscontrol/revokeAccessControlCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/sendUserPresenceForCurrentUser": [
      "type"
    ],
    "POST /api/accesscontrol/suspendAccessControlCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/unlockAccessControlledDoor": [
      "type"
    ],
    "POST /api/accesscontrol/unlockAccessControlledDoorForCurrentUser": [
      "type"
    ],
    "POST /api/accesscontrol/unsuspendAccessControlCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/updateAccessGrant": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/updateAccessRevocation": [
      "accessControlledDoorUuids",
      "createdAtMillis",
      "doorLabelIds",
      "groupUuids",
      "locationUuid",
      "name",
      "orgUuid",
      "scheduleUuid",
      "sortKey",
      "storedInS3",
      "updatedAtMillis",
      "userUuids",
      "uuid"
    ],
    "POST /api/accesscontrol/updateRhombusSecureCsnCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/updateRhombusSecureMobileCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/accesscontrol/updateStandardCsnCredential": [
      "createdAtMillis",
      "endDateEpochSecExclusive",
      "lastUsedAccessControlledDoorUuid",
      "lastUsedAtMillis",
      "lastUsedLocationUuid",
      "lowercaseHexValue",
      "managedCredUuid",
      "orgUuid",
      "startDateEpochSecInclusive",
      "type",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "value",
      "workflowStatus"
    ],
    "POST /api/alertmonitoring/acceptAlertMonitoringTermsOfService": [
      "error",
      "errorMsg"
    ],
    "POST /api/alertmonitoring/acceptAlertMonitoringTermsOfServiceForLocation": [
      "error",
      "errorMsg"
    ],
    "POST /api/alertmonitoring/cancelThreatCase": [
      "error",
      "errorMsg",
      "success"
    ],
    "POST /api/alertmonitoring/createAlertMonitoringSettings": [
      "error",
      "errorMsg"
    ],
    "POST /api/alertmonitoring/createPinForLocation": [
      "error",
      "errorMsg",
      "pin"
    ],
    "POST /api/alertmonitoring/deleteAlertMonitoringSettings": [
      "error",
      "errorMsg"
    ],
    "POST /api/alertmonitoring/deletePinForLocation": [
      "error",
      "errorMsg"
    ],
    "POST /api/alertmonitoring/dismissThreatCase": [
      "error",
      "errorMsg",
      "success"
    ],
    "POST /api/alertmonitoring/escalateThreatCaseToAlarm": [
      "error",
      "errorMsg"
    ],
    "POST /api/alertmonitoring/getAlertMonitoringSettings": [
      "acceptedTermsOfService",
      "defaultDelay",
      "defaultPromptTheme",
      "description",
      "enabled",
      "entryInstructions",
      "error",
      "errorMsg",
      "escalationDelayMinutes",
      "locationUuid",
      "monitoredDevices",
      "monitoringMode",
      "name",
      "orgUuid",
      "phoneNumber",
      "pin",
      "promptTheme",
      "scheduleUuid",
      "triggerSet"
    ],
    "POST /api/alertmonitoring/getAlertMonitoringSettingsForLocation": [
      "acceptedTermsOfService",
      "defaultDelay",
      "defaultPromptTheme",
      "description",
      "enabled",
      "entryInstructions",
      "error",
      "errorMsg",
      "escalationDelayMinutes",
      "locationUuid",
      "monitoredDevices",
      "monitoringMode",
      "name",
      "orgUuid",
      "phoneNumber",
      "pin",
      "promptTheme",
      "scheduleUuid",
      "triggerSet"
    ],
    "POST /api/alertmonitoring/updateAlertMonitoringSettings": [
      "error",
      "errorMsg"
    ],
    "POST /api/audiogateway/delete": [
      "error",
      "errorMsg",
      "responseStatus"
    ],
    "POST /api/audiogateway/getAudioGatewayFeatures": [
      "audioAnalysisEnabled",
      "audioGatewayUuid",
      "enterpriseCloudArchiving",
      "error",
      "errorMsg"
    ],
    "POST /api/audiogateway/getAudioGatewayFeaturesList": [
      "audioAnalysisEnabled",
      "audioGatewayUuid",
      "enterpriseCloudArchiving",
      "error",
      "errorMsg"
    ],
    "POST /api/audiogateway/getAudioSeekpoints": [
      "a",
      "al",
      "cc",
      "cd",
      "cdn",
      "employeeName",
      "error",
      "errorMsg",
      "fn",
      "guid",
      "id",
      "loudness",
      "lp",
      "m",
      "p",
      "ro",
      "totalAmount",
      "ts",
      "tu",
      "uf",
      "vn"
    ],
    "POST /api/audiogateway/getConfig": [
      "audio_analysis_enabled",
      "audio_external_mic_boost",
      "audio_external_mic_volume",
      "audio_external_speaker_volume",
      "audio_internal_mic_aec_enabled",
      "audio_internal_mic_boost",
      "audio_internal_mic_volume",
      "audio_internal_speaker_volume",
      "audio_record",
      "audio_use_external_mic",
      "audio_use_external_speaker",
      "audio_use_internal_speaker",
      "bandwidth_reports_disabled",
      "category",
      "cloud_archive_days",
      "cloud_archive_target",
      "cloud_archive_upload_schedule_inverted",
      "cloud_archive_upload_schedule_uuid",
      "confidence_min",
      "deviceUuid",
      "device_mic_enabled",
      "device_speaker_enabled",
      "error",
      "errorMsg",
      "event_clip_upload_target",
      "expression",
      "lastModified",
      "led_stealth_mode",
      "loudness_min",
      "max_event_duration_ms",
      "media_ttl_minutes",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "orgUuid",
      "significant_loudness_min",
      "splice_clip_upload_target"
    ],
    "POST /api/audiogateway/getFullAudioGatewayState": [
      "afSupport",
      "baseVideoOperationUri",
      "connectionStatus",
      "connectionTimestampMs",
      "createdAtMillis",
      "defaultInterface",
      "defaultInterfaceMac",
      "directionRadians",
      "error",
      "errorMsg",
      "externalIPAddress",
      "firmwareUpdateInProgress",
      "firmwareVersion",
      "floorNumber",
      "healthStatus",
      "healthStatusDetails",
      "hwVariation",
      "lanAddresses",
      "latestFirmwareVersion",
      "latitude",
      "liveStreamShared",
      "liveStreamsSharedCount",
      "locationUuid",
      "longitude",
      "maxZoomPercent",
      "mediaRegion",
      "mummified",
      "name",
      "onCameraState",
      "onCloudState",
      "policyUuid",
      "region",
      "serialNumber",
      "ssid",
      "uuid",
      "versionsBehind",
      "wifiApMac",
      "wifiBars",
      "wifiSignalStrength"
    ],
    "POST /api/audiogateway/getMediaUris": [
      "error",
      "errorMsg",
      "lanCheckUrls",
      "lanLiveMpdUris",
      "lanLiveOpusUris",
      "lanVodMpdUrisTemplates",
      "wanLiveMpdUri",
      "wanLiveOpusUri",
      "wanVodMpdUriTemplate"
    ],
    "POST /api/audiogateway/getMinimalAudioGatewayStateList": [
      "associatedCameras",
      "connectionStatus",
      "createdAtMillis",
      "defaultInterface",
      "defaultInterfaceMac",
      "directionRadians",
      "error",
      "errorMsg",
      "externalIPAddress",
      "firmwareUpdateInProgress",
      "firmwareVersion",
      "floorNumber",
      "healthStatus",
      "healthStatusDetails",
      "hwVariation",
      "lanAddresses",
      "latitude",
      "liveStreamShared",
      "liveStreamsSharedCount",
      "locationUuid",
      "longitude",
      "mediaRegion",
      "mummified",
      "name",
      "policyUuid",
      "region",
      "sensorUuid",
      "serialNumber",
      "ssid",
      "uuid",
      "wifiApMac",
      "wifiBars",
      "wifiSignalStrength"
    ],
    "POST /api/audiogateway/getPresenceWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/audiogateway/getUptimeWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/audiogateway/updateConfig": [
      "error",
      "errorMsg"
    ],
    "POST /api/audiogateway/updateDetails": [
      "error",
      "errorMsg"
    ],
    "POST /api/audioplayback/deleteAudioUploadMetadata": [
      "error",
      "errorMsg"
    ],
    "POST /api/audioplayback/getAudioUploadMetadataForOrg": [
      "audioPlaintext",
      "audioSSML",
      "description",
      "displayName",
      "durationMs",
      "error",
      "errorMsg",
      "mutable",
      "orgUuid",
      "s3ObjectKey",
      "uuid",
      "voiceId"
    ],
    "POST /api/audioplayback/playAudioUpload": [
      "error",
      "errorMsg",
      "success"
    ],
    "POST /api/audioplayback/updateAudioUploadMetadata": [
      "error",
      "errorMsg"
    ],
    "POST /api/audioplayback/uploadAudioPcm/{audioClipName}": [
      "encodingFailure",
      "error",
      "errorMsg",
      "uuid"
    ],
    "POST /api/audioplayback/uploadAudioText": [
      "encodingFailure",
      "error",
      "errorMsg",
      "invalidSSML",
      "synthesisFailure",
      "uuid"
    ],
    "POST /api/ble/getBaseStations": [
      "baseStations",
      "error",
      "errorMsg"
    ],
    "POST /api/ble/getSecureSecretForRegistered": [
      "deleted",
      "deviceUuid",
      "error",
      "errorMsg",
      "hardwareVariationToFirmwareDownloadUrl",
      "hwVariation",
      "name",
      "secret",
      "updateToFirmwareVersion"
    ],
    "POST /api/ble/getSecureSecretForUnregistered": [
      "error",
      "errorMsg",
      "mac",
      "secret"
    ],
    "POST /api/ble/getSecureSecretOfRegisteredDeviceForRhombusKey": [
      "deleted",
      "deviceUuid",
      "error",
      "errorMsg",
      "hardwareVariationToFirmwareDownloadUrl",
      "hwVariation",
      "name",
      "secret",
      "updateToFirmwareVersion"
    ],
    "POST /api/ble/getSensorHardwareFirmwareUpdateDetails": [
      "hardwareVariationToFirmwareDownloadUrl"
    ],
    "POST /api/ble/registerSensor": [
      "deviceUuid",
      "error",
      "errorMsg"
    ],
    "POST /api/ble/unregisterSensor": [
      "error",
      "errorMsg",
      "failureReason",
      "success"
    ],
    "POST /api/button/createRuleForButton": [
      "error",
      "errorMsg",
      "ruleUuid"
    ],
    "POST /api/button/deleteRuleForButton": [
      "error",
      "errorMsg"
    ],
    "POST /api/button/getButtonPressEventsForSensor": [
      "baseStationUuid",
      "batteryPercentage",
      "bleDeviceUuid",
      "bleRssi",
      "buttonMode",
      "buttonPress",
      "closeBaseStations",
      "error",
      "errorMsg",
      "locationUuid",
      "orgUuid",
      "testModeEnabled",
      "timestampMs"
    ],
    "POST /api/button/getButtonRulesForOrg": [
      "alertAction",
      "audioClipUuid",
      "audioGateways",
      "componentUuid",
      "doorId",
      "error",
      "errorMsg",
      "integration",
      "liveNotificationAction",
      "locationLockdownPlanUuid",
      "locationUuid",
      "notificationTarget",
      "overrideRelayDurationSec",
      "ownerDeviceUuid",
      "placeId",
      "ruleName",
      "ruleUuid",
      "scheduleUuids",
      "sensorUuid",
      "subject",
      "subjectCustomizable",
      "system",
      "triggerBackoffSecs",
      "triggerPress",
      "webhookUrl"
    ],
    "POST /api/button/getMinimalButtonStateList": [
      "associatedCameras",
      "batteryPercent",
      "buttonMode",
      "closestBaseStation",
      "createdAtMillis",
      "error",
      "errorMsg",
      "firmwareVersion",
      "floorNumber",
      "health",
      "healthDetails",
      "hwVariation",
      "lastSeenSec",
      "latitude",
      "locationUuid",
      "longitude",
      "name",
      "phoneNumber",
      "sensorUuid",
      "serialNumber",
      "signalStrength",
      "testModeEnabled"
    ],
    "POST /api/button/getRulesForButton": [
      "alertAction",
      "audioClipUuid",
      "audioGateways",
      "componentUuid",
      "doorId",
      "error",
      "errorMsg",
      "integration",
      "liveNotificationAction",
      "locationLockdownPlanUuid",
      "locationUuid",
      "notificationTarget",
      "overrideRelayDurationSec",
      "ownerDeviceUuid",
      "placeId",
      "ruleName",
      "ruleUuid",
      "scheduleUuids",
      "sensorUuid",
      "subject",
      "subjectCustomizable",
      "system",
      "triggerBackoffSecs",
      "triggerPress",
      "webhookUrl"
    ],
    "POST /api/button/updateConfig": [
      "error",
      "errorMsg"
    ],
    "POST /api/button/updateDetails": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/calibrateFloorplanProjection": [
      "homography"
    ],
    "POST /api/camera/createCustomFootageSeekpoints": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/createFootageBoundingBoxes": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/createProtectedSharedLiveVideoStream": [
      "error",
      "errorMsg",
      "sharedLiveM3U8StreamUrl",
      "sharedLiveVideoStreamUrl",
      "sharedLiveVideoStreamUuid"
    ],
    "POST /api/camera/createProtectedSharedVideoWall": [
      "error",
      "errorMsg",
      "sharedLiveVideoStreamUrl",
      "sharedLiveVideoStreamUuid"
    ],
    "POST /api/camera/createRawHttpStream": [
      "error",
      "errorMsg",
      "lanAudioUrl",
      "lanVideoLowResUrl",
      "lanVideoUrl"
    ],
    "POST /api/camera/createSharedLiveVideoStream": [
      "error",
      "errorMsg",
      "sharedLiveM3U8StreamUrl",
      "sharedLiveVideoStreamUrl",
      "sharedLiveVideoStreamUuid"
    ],
    "POST /api/camera/createSharedVideoWall": [
      "error",
      "errorMsg",
      "sharedLiveVideoStreamUrl",
      "sharedLiveVideoStreamUuid"
    ],
    "POST /api/camera/createVideoWall": [
      "error",
      "errorMsg",
      "uuid"
    ],
    "POST /api/camera/delete": [
      "error",
      "errorMsg",
      "responseStatus"
    ],
    "POST /api/camera/deleteCustomFootageSeekpoints": [
      "err",
      "errMsg",
      "error",
      "errorMsg"
    ],
    "POST /api/camera/deleteRawHttpStream": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/deleteSharedVideoWall": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/deleteVideoWall": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/erase": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/findAllSharedLiveVideoStreams": [
      "audioGatewayUuid",
      "audioPushToTalkEnabled",
      "cameraUuid",
      "deviceUuid",
      "error",
      "errorMsg",
      "expirationTime",
      "hideOverlay",
      "invertSchedule",
      "name",
      "orgUuid",
      "passwordProtected",
      "scheduleUuid",
      "sharedLiveM3U8StreamUrl",
      "sharedLiveVideoStreamUrl",
      "ssoProtected",
      "streamType",
      "timestampMs",
      "unscheduledMessage",
      "uuid",
      "vodEnabled"
    ],
    "POST /api/camera/findSharedLiveVideoStreams": [
      "audioGatewayUuid",
      "audioPushToTalkEnabled",
      "cameraUuid",
      "deviceUuid",
      "error",
      "errorMsg",
      "expirationTime",
      "hideOverlay",
      "invertSchedule",
      "name",
      "orgUuid",
      "passwordProtected",
      "scheduleUuid",
      "sharedLiveM3U8StreamUrl",
      "sharedLiveVideoStreamUrl",
      "ssoProtected",
      "streamType",
      "timestampMs",
      "unscheduledMessage",
      "uuid",
      "vodEnabled"
    ],
    "POST /api/camera/findSharedVideoWalls": [
      "error",
      "errorMsg",
      "expirationTime",
      "hideOverlay",
      "invertSchedule",
      "orgUuid",
      "passwordProtected",
      "permissionGroupUuid",
      "scheduleUuid",
      "sharedVideoWallUrl",
      "timestampMs",
      "unscheduledMessage",
      "uuid",
      "videoWallUuid",
      "vodEnabled"
    ],
    "POST /api/camera/generateBatchRegistrationInfo": [
      "env",
      "token"
    ],
    "POST /api/camera/generateWifiChangeAuthorizationToken": [
      "authorizationToken",
      "error",
      "errorMsg",
      "userUuid"
    ],
    "POST /api/camera/getBatchRegistrationUsage": [
      "di",
      "hi",
      "rs",
      "ts"
    ],
    "POST /api/camera/getCameraAIThresholds": [
      "consecutiveHumanFilter",
      "consecutiveVehicleFilter",
      "error",
      "errorMsg",
      "faceConfidenceThreshold",
      "faceMatchConfidenceThreshold",
      "humanConfidenceThreshold",
      "lprConfidenceThreshold",
      "maxEventDurationMs",
      "vehicleConfidenceThreshold"
    ],
    "POST /api/camera/getCameraFeatures": [
      "behaviorDetection",
      "cameraUuid",
      "colorDetection",
      "enterpriseCloudArchiving",
      "error",
      "errorMsg",
      "faceRecognition",
      "licensePlateRecognition",
      "peopleCounting",
      "ppeDetection",
      "timelapse",
      "vehicleCounting",
      "visualTamperDetection"
    ],
    "POST /api/camera/getCameraFeaturesList": [
      "behaviorDetection",
      "cameraUuid",
      "colorDetection",
      "enterpriseCloudArchiving",
      "error",
      "errorMsg",
      "faceRecognition",
      "licensePlateRecognition",
      "peopleCounting",
      "ppeDetection",
      "timelapse",
      "vehicleCounting",
      "visualTamperDetection"
    ],
    "POST /api/camera/getCloudArchivedMediaInfo": [
      "error",
      "errorMsg",
      "oldestArchivedVideoSegmentSecs"
    ],
    "POST /api/camera/getCloudArchivingConfig": [
      "error",
      "errorMsg",
      "orgUuid",
      "scope",
      "targetUuid",
      "uploadScheduleInverted",
      "uploadScheduleUuid",
      "uploadStrategy"
    ],
    "POST /api/camera/getConfig": [
      "accelerometer_change_tamper_threshold",
      "accelerometer_disabled",
      "af_enabled",
      "analyze_fps",
      "analyze_res",
      "audio_analysis_enabled",
      "audio_external_mic_boost",
      "audio_external_mic_volume",
      "audio_external_speaker_volume",
      "audio_internal_mic_aec_enabled",
      "audio_internal_mic_boost",
      "audio_internal_mic_volume",
      "audio_internal_speaker_volume",
      "audio_use_external_mic",
      "audio_use_external_speaker",
      "audio_use_internal_speaker",
      "bandwidth_reports_disabled",
      "behavior_detection",
      "blocked_debounce_time_ms",
      "blocked_threshold",
      "canny_thresh",
      "category",
      "cloud_archive_days",
      "cloud_archive_upload_schedule_inverted",
      "cloud_archive_upload_schedule_uuid",
      "color_detection",
      "con_human_filter",
      "con_vehicle_filter",
      "confidence_min",
      "cross_counting",
      "deviceUuid",
      "device_mic_enabled",
      "device_speaker_enabled",
      "dewarpMode",
      "dewarp_tile_height",
      "dewarp_tile_width",
      "edge_cov_diff_thresh",
      "enabled",
      "engagement_counting",
      "error",
      "errorMsg",
      "event_clip_upload_target",
      "exposure_level",
      "expression",
      "face_ai_threshold",
      "face_counting",
      "face_counting_nonunique",
      "face_id_ai_threshold",
      "face_match_threshold",
      "face_recognition",
      "fisheye_display_mode",
      "focus",
      "h",
      "hdr_enabled",
      "height",
      "img_brightness",
      "img_contrast",
      "img_saturation",
      "img_sharpness",
      "inverted",
      "ir_filter_mode",
      "ir_leds_mode",
      "lastModified",
      "led_stealth_mode",
      "licenseplate_detection",
      "long_buf_size",
      "loudness_min",
      "lpr_ai_threshold",
      "max_event_duration_ms",
      "media_ttl_minutes",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "motion_grid_disabled",
      "motion_grid_window_sec",
      "motion_lightweight_disabled",
      "motion_threshold",
      "mounting_direction",
      "new_motion_feature_flag",
      "night_exposure_level",
      "night_img_brightness",
      "night_img_contrast",
      "night_img_saturation",
      "night_img_sharpness",
      "night_sensor_gain_max",
      "night_shutter_time_max",
      "night_shutter_time_min",
      "obj_ai_threshold",
      "offset_x_percent",
      "offset_y_percent",
      "orientation",
      "people_counting",
      "person_ai_threshold",
      "piris",
      "pitchDegrees",
      "pose_detection",
      "ppe_detection",
      "pressure_switch_tamper_disabled",
      "rollDegrees",
      "rotation",
      "segment_max_bytes",
      "sensor_gain_max",
      "short_buf_size",
      "shutter_time_max",
      "shutter_time_min",
      "significant_loudness_min",
      "size_percent",
      "snapshot_height",
      "snapshot_interval_secs",
      "splice_clip_upload_target",
      "table",
      "target_ai_fps",
      "thumbstrip_disabled",
      "timelapse",
      "use_onboard_ai",
      "use_pilot_face_id",
      "vehicle_ai_threshold",
      "vehicle_counting",
      "verticalFieldOfViewDegrees",
      "video_persist_disabled",
      "w",
      "wdr_strength",
      "width",
      "x",
      "y",
      "yawDegrees",
      "zero_motion_video_quality",
      "zoom"
    ],
    "POST /api/camera/getCurrentState": [
      "baseVideoOperationUri",
      "connectionStatus",
      "connectionTimestampMs",
      "defaultInterface",
      "defaultInterfaceMac",
      "error",
      "errorMsg",
      "firmwareVersion",
      "healthStatus",
      "healthStatusDetails",
      "latestFirmwareVersion",
      "mediaRegion",
      "onCameraState",
      "onCloudState",
      "region",
      "serialNumber",
      "ssid",
      "versionsBehind",
      "wifiApMac",
      "wifiBars",
      "wifiSignalStrength"
    ],
    "POST /api/camera/getCustomFootageSeekpointsV2": [
      "customDescription",
      "customDisplayName",
      "deviceUuid",
      "error",
      "errorMsg",
      "locationUuid",
      "objectType",
      "orgUuid",
      "timestampMs"
    ],
    "POST /api/camera/getDetails": [
      "archiveRegion",
      "cameraFramerate",
      "createdAtMillis",
      "customData",
      "deleted",
      "description",
      "directionRadians",
      "error",
      "errorMsg",
      "floorNumber",
      "hwVariation",
      "latitude",
      "locationUuid",
      "longitude",
      "mummified",
      "name",
      "pending",
      "policyUuid",
      "serialNumber",
      "type",
      "uuid"
    ],
    "POST /api/camera/getFootageBoundingBoxes": [
      "a",
      "al",
      "b",
      "cd",
      "cdn",
      "croppedImageLocator",
      "customActivityColor",
      "employeeName",
      "error",
      "errorMsg",
      "fn",
      "guid",
      "l",
      "loudness",
      "lp",
      "m",
      "objectId",
      "p",
      "r",
      "ro",
      "t",
      "totalAmount",
      "ts",
      "uf",
      "vn",
      "x",
      "y"
    ],
    "POST /api/camera/getFootageBoundingBoxesForMultiple": [
      "a",
      "al",
      "b",
      "cd",
      "cdn",
      "croppedImageLocator",
      "customActivityColor",
      "employeeName",
      "error",
      "errorMsg",
      "fn",
      "guid",
      "l",
      "loudness",
      "lp",
      "m",
      "objectId",
      "p",
      "r",
      "ro",
      "t",
      "totalAmount",
      "ts",
      "uf",
      "vn",
      "x",
      "y"
    ],
    "POST /api/camera/getFootageSeekpoints": [
      "a",
      "al",
      "b",
      "error",
      "errorMsg",
      "fn",
      "l",
      "lp",
      "p",
      "r",
      "ro",
      "t",
      "ts",
      "uf",
      "vn",
      "x",
      "y"
    ],
    "POST /api/camera/getFootageSeekpointsForMultiple": [
      "activityCountMap",
      "alert",
      "error",
      "errorMsg",
      "faceNames",
      "poses",
      "recognizedObjects",
      "unidentifiedFaceIds",
      "vehicleLicensePlates",
      "vehicleNames"
    ],
    "POST /api/camera/getFootageSeekpointsV2": [
      "a",
      "al",
      "cc",
      "cd",
      "cdn",
      "employeeName",
      "error",
      "errorMsg",
      "fn",
      "guid",
      "id",
      "loudness",
      "lp",
      "m",
      "p",
      "ro",
      "totalAmount",
      "ts",
      "tu",
      "uf",
      "vn"
    ],
    "POST /api/camera/getFullCameraState": [
      "afSupport",
      "baseVideoOperationUri",
      "connectionStatus",
      "connectionTimestampMs",
      "createdAtMillis",
      "defaultInterface",
      "defaultInterfaceMac",
      "directionRadians",
      "error",
      "errorMsg",
      "externalIPAddress",
      "firmwareUpdateInProgress",
      "firmwareVersion",
      "floorNumber",
      "healthStatus",
      "healthStatusDetails",
      "hwVariation",
      "lanAddresses",
      "latestFirmwareVersion",
      "latitude",
      "liveStreamShared",
      "liveStreamsSharedCount",
      "locationUuid",
      "longitude",
      "maxZoomPercent",
      "mediaRegion",
      "mummified",
      "name",
      "onCameraState",
      "onCloudState",
      "policyUuid",
      "region",
      "serialNumber",
      "ssid",
      "uuid",
      "versionsBehind",
      "wifiApMac",
      "wifiBars",
      "wifiSignalStrength"
    ],
    "POST /api/camera/getMediaUris": [
      "error",
      "errorMsg",
      "lanCheckUrls",
      "lanLiveH264Uris",
      "lanLiveM3u8Uris",
      "lanLiveMpdUris",
      "lanVodM3u8UrisTemplates",
      "lanVodMpdUrisTemplates",
      "wanLiveH264Uri",
      "wanLiveM3u8Uri",
      "wanLiveMpdUri",
      "wanVodM3u8UriTemplate",
      "wanVodMpdUriTemplate"
    ],
    "POST /api/camera/getMinimalCameraLocationMap": [
      "cameraName",
      "error",
      "errorMsg",
      "locationName",
      "locationUuid"
    ],
    "POST /api/camera/getMinimalCameraStateList": [
      "connectionStatus",
      "createdAtMillis",
      "defaultInterface",
      "defaultInterfaceMac",
      "directionRadians",
      "error",
      "errorMsg",
      "externalIPAddress",
      "firmwareUpdateInProgress",
      "firmwareVersion",
      "floorNumber",
      "healthStatus",
      "healthStatusDetails",
      "hwVariation",
      "lanAddresses",
      "latitude",
      "liveStreamShared",
      "liveStreamsSharedCount",
      "locationUuid",
      "longitude",
      "mediaRegion",
      "mummified",
      "name",
      "policyUuid",
      "region",
      "serialNumber",
      "ssid",
      "uuid",
      "wifiApMac",
      "wifiBars",
      "wifiSignalStrength"
    ],
    "POST /api/camera/getMinimalList": [
      "connectionStatus",
      "defaultInterface",
      "defaultInterfaceMac",
      "error",
      "errorMsg",
      "floorNumber",
      "healthStatus",
      "healthStatusDetails",
      "lanAddresses",
      "latitude",
      "liveStreamShared",
      "locationUuid",
      "longitude",
      "mediaRegion",
      "mummified",
      "name",
      "policyUuid",
      "region",
      "serialNumber",
      "ssid",
      "uuid",
      "wifiApMac",
      "wifiBars",
      "wifiSignalStrength"
    ],
    "POST /api/camera/getOfflineLanStreamingInfo": [
      "accessToken",
      "error",
      "errorMsg",
      "lanAddresses"
    ],
    "POST /api/camera/getPresenceWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/camera/getRawHttpStreams": [
      "audioPath",
      "createdAtMs",
      "createdBy",
      "customPathPart",
      "deviceUuid",
      "error",
      "errorMsg",
      "lanAudioUrl",
      "lanVideoLowResUrl",
      "lanVideoUrl",
      "name",
      "orgUuid",
      "videoLowResPath",
      "videoPath"
    ],
    "POST /api/camera/getStorageRecoveryFile": [
      "fileContents"
    ],
    "POST /api/camera/getUptimeWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/camera/getVideoWalls": [
      "deviceList",
      "displayName",
      "error",
      "errorMsg",
      "numShares",
      "orgUuid",
      "othersCanEdit",
      "ownerUserUuid",
      "settings",
      "shared",
      "userNameMap",
      "uuid"
    ],
    "POST /api/camera/reboot": [
      "error",
      "errorMsg",
      "status"
    ],
    "POST /api/camera/updateCameraAIThresholds": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/updateConfig": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/updateDetails": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/updateDetailsBulkV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/updateDetailsV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/updateFirmware": [
      "error",
      "errorMsg",
      "status"
    ],
    "POST /api/camera/updateVideoWalls": [
      "error",
      "errorMsg"
    ],
    "POST /api/camera/updateWifi": [
      "error",
      "errorMsg",
      "status"
    ],
    "POST /api/climate/getClimateEventsForSensor": [
      "alertActivities",
      "baseStationUuid",
      "batteryPercentage",
      "bleDeviceUuid",
      "bleRssi",
      "closeBaseStations",
      "co2",
      "error",
      "errorMsg",
      "ethanol",
      "humidity",
      "iaq",
      "locationUuid",
      "orgUuid",
      "pm25",
      "probeTempC",
      "tampered",
      "temp",
      "thcDetected",
      "thcPercent",
      "timestampMs",
      "tvoc",
      "vapeSmokeDetected",
      "vapeSmokePercent"
    ],
    "POST /api/climate/getClimateEventsForTags": [
      "alertActivities",
      "baseStationUuid",
      "batteryPercentage",
      "bleDeviceUuid",
      "bleRssi",
      "closeBaseStations",
      "co2",
      "error",
      "errorMsg",
      "ethanol",
      "humidity",
      "iaq",
      "locationUuid",
      "orgUuid",
      "pm25",
      "probeTempC",
      "tampered",
      "temp",
      "thcDetected",
      "thcPercent",
      "timestampMs",
      "tvoc",
      "vapeSmokeDetected",
      "vapeSmokePercent"
    ],
    "POST /api/climate/getClimatePresenceWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/climate/getConfig": [
      "accelerometer_change_tamper_threshold",
      "accelerometer_disabled",
      "alert_window_minutes",
      "deviceUuid",
      "error",
      "errorMsg",
      "lastModified",
      "orgUuid",
      "pressure_switch_tamper_disabled",
      "smoke_ai_threshold",
      "thc_ai_threshold",
      "vape_ai_threshold"
    ],
    "POST /api/climate/getMinimalClimateStateList": [
      "associatedCameras",
      "batteryPercent",
      "calibrating",
      "co2",
      "createdAtMillis",
      "error",
      "errorMsg",
      "ethanol",
      "firmwareVersion",
      "floorNumber",
      "health",
      "healthDetails",
      "humidity",
      "hwVariation",
      "iaq",
      "lastSeenSec",
      "latitude",
      "locationUuid",
      "longitude",
      "name",
      "pm25",
      "policyUuid",
      "probeConnected",
      "probeTempC",
      "sensorUuid",
      "serialNumber",
      "signalStrength",
      "temperatureCelcius",
      "thcPercent",
      "tvoc",
      "vapePercent"
    ],
    "POST /api/climate/updateDetails": [
      "error",
      "errorMsg"
    ],
    "POST /api/component/createAccessControlledDoor": [
      "ajarTimeSec",
      "associatedCameras",
      "awaitAuthDurationMs",
      "componentUuid",
      "createdAtMillis",
      "defaultState",
      "deviceUuid",
      "directionRadians",
      "doorStateToScheduleUuidMap",
      "enabled",
      "error",
      "errorMsg",
      "floorNumber",
      "forcedOpenTimeSec",
      "latitude",
      "locationUuid",
      "longitude",
      "minRSSIThreshold",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "policyUuid",
      "relockAfterOpenTimeMs",
      "remoteUnlockEnabled",
      "showAwaitIntentFeedback",
      "treatNfcAsIntent",
      "type",
      "unlockTimeSec",
      "unlockTimeSecRex",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/createIntegratedDoorPositionIndicator": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "dpiType",
      "name",
      "normalState",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/createIntegratedDoorRelay": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "relayType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/createIntegratedGenericButton": [
      "baseType",
      "boardNum",
      "buttonType",
      "createdAtMillis",
      "mode",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/createIntegratedGenericInput": [
      "auxType",
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "normalState",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/createIntegratedGenericRelay": [
      "auxType",
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "relayDurationSec",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/createIntegratedRequestToExit": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "normalState",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "rexType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/createOsdpDoorReader": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "orgUuid",
      "osdpAddress",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "readerType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/createRhombusOsdpDoorReader": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "deviceUuid",
      "hardwareUuid",
      "name",
      "orgUuid",
      "osdpAddress",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "readerType",
      "serialNumber",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/createWiegandReader": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "readerType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/deleteAccessControlledDoor": [
      "ajarTimeSec",
      "associatedCameras",
      "awaitAuthDurationMs",
      "componentUuid",
      "createdAtMillis",
      "defaultState",
      "deviceUuid",
      "directionRadians",
      "doorStateToScheduleUuidMap",
      "enabled",
      "floorNumber",
      "forcedOpenTimeSec",
      "latitude",
      "locationUuid",
      "longitude",
      "minRSSIThreshold",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "policyUuid",
      "relockAfterOpenTimeMs",
      "remoteUnlockEnabled",
      "showAwaitIntentFeedback",
      "treatNfcAsIntent",
      "type",
      "unlockTimeSec",
      "unlockTimeSecRex",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/findAccessControlledDoors": [
      "ajarTimeSec",
      "associatedCameras",
      "awaitAuthDurationMs",
      "componentUuid",
      "createdAtMillis",
      "defaultState",
      "deviceUuid",
      "directionRadians",
      "doorStateToScheduleUuidMap",
      "enabled",
      "floorNumber",
      "forcedOpenTimeSec",
      "latitude",
      "locationUuid",
      "longitude",
      "minRSSIThreshold",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "policyUuid",
      "relockAfterOpenTimeMs",
      "remoteUnlockEnabled",
      "showAwaitIntentFeedback",
      "treatNfcAsIntent",
      "type",
      "unlockTimeSec",
      "unlockTimeSecRex",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/findAccessControlledDoorsByLocation": [
      "ajarTimeSec",
      "associatedCameras",
      "awaitAuthDurationMs",
      "componentUuid",
      "createdAtMillis",
      "defaultState",
      "deviceUuid",
      "directionRadians",
      "doorStateToScheduleUuidMap",
      "enabled",
      "floorNumber",
      "forcedOpenTimeSec",
      "latitude",
      "locationUuid",
      "longitude",
      "minRSSIThreshold",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "policyUuid",
      "relockAfterOpenTimeMs",
      "remoteUnlockEnabled",
      "showAwaitIntentFeedback",
      "treatNfcAsIntent",
      "type",
      "unlockTimeSec",
      "unlockTimeSecRex",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/findAccessControlledDoorsByOwnerDevice": [
      "ajarTimeSec",
      "associatedCameras",
      "awaitAuthDurationMs",
      "componentUuid",
      "createdAtMillis",
      "defaultState",
      "deviceUuid",
      "directionRadians",
      "doorStateToScheduleUuidMap",
      "enabled",
      "floorNumber",
      "forcedOpenTimeSec",
      "latitude",
      "locationUuid",
      "longitude",
      "minRSSIThreshold",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "policyUuid",
      "relockAfterOpenTimeMs",
      "remoteUnlockEnabled",
      "showAwaitIntentFeedback",
      "treatNfcAsIntent",
      "type",
      "unlockTimeSec",
      "unlockTimeSecRex",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/findAllComponentShadows": [
      "componentUuid",
      "createdAtMillis",
      "orgUuid",
      "ownerDeviceUuid",
      "type",
      "updatedAtMillis"
    ],
    "POST /api/component/findComponentEventsByAccessControlledDoor": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsByApiToken": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsByComponent": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsByCorrelation": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsByCredentialHexValue": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsByCredentialUuid": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsByCredentialValue": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsByLocation": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsByOwnerDevice": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsBySupportAuthority": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsByUser": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentEventsForCurrentUser": [
      "componentUuid",
      "correlationId",
      "locationUuid",
      "orgUuid",
      "ownerDeviceUuid",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/component/findComponentSeekPointsByAccessControlledDoor": [
      "activity",
      "componentCompositeUuid",
      "componentUuid",
      "locationUuid",
      "orgUuid",
      "originalEvent",
      "ownerDeviceUuid",
      "timestampMs",
      "userUuid",
      "uuid"
    ],
    "POST /api/component/findComponentSeekPointsByComponent": [
      "activity",
      "componentCompositeUuid",
      "componentUuid",
      "locationUuid",
      "orgUuid",
      "originalEvent",
      "ownerDeviceUuid",
      "timestampMs",
      "userUuid",
      "uuid"
    ],
    "POST /api/component/findComponentSeekPointsByLocation": [
      "activity",
      "componentCompositeUuid",
      "componentUuid",
      "locationUuid",
      "orgUuid",
      "originalEvent",
      "ownerDeviceUuid",
      "timestampMs",
      "userUuid",
      "uuid"
    ],
    "POST /api/component/findComponentSeekPointsByOwnerDevice": [
      "activity",
      "componentCompositeUuid",
      "componentUuid",
      "locationUuid",
      "orgUuid",
      "originalEvent",
      "ownerDeviceUuid",
      "timestampMs",
      "userUuid",
      "uuid"
    ],
    "POST /api/component/findComponentSeekPointsByUser": [
      "activity",
      "componentCompositeUuid",
      "componentUuid",
      "locationUuid",
      "orgUuid",
      "originalEvent",
      "ownerDeviceUuid",
      "timestampMs",
      "userUuid",
      "uuid"
    ],
    "POST /api/component/findComponentShadowsByOwnerDevice": [
      "componentUuid",
      "createdAtMillis",
      "orgUuid",
      "ownerDeviceUuid",
      "type",
      "updatedAtMillis"
    ],
    "POST /api/component/findComponentsByOwnerDevice": [
      "baseType",
      "createdAtMillis",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/getAccessControlledDoorLabelsForOrg": [
      "accessControlledDoorLabels"
    ],
    "POST /api/component/getOrCreateDevicePhysicalPortConfig": [
      "baseType",
      "boardNum",
      "componentPortTypeUsageMap",
      "componentUuids",
      "createdAtMillis",
      "label",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "reason",
      "supportedPortTypes",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateAccessControlledDoor": [
      "ajarTimeSec",
      "associatedCameras",
      "awaitAuthDurationMs",
      "componentUuid",
      "createdAtMillis",
      "defaultState",
      "deviceUuid",
      "directionRadians",
      "doorStateToScheduleUuidMap",
      "enabled",
      "floorNumber",
      "forcedOpenTimeSec",
      "latitude",
      "locationUuid",
      "longitude",
      "minRSSIThreshold",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "policyUuid",
      "relockAfterOpenTimeMs",
      "remoteUnlockEnabled",
      "showAwaitIntentFeedback",
      "treatNfcAsIntent",
      "type",
      "unlockTimeSec",
      "unlockTimeSecRex",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateIntegratedDoorPositionIndicator": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "dpiType",
      "name",
      "normalState",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateIntegratedDoorRelay": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "relayType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateIntegratedGenericButton": [
      "baseType",
      "boardNum",
      "buttonType",
      "createdAtMillis",
      "mode",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateIntegratedGenericInput": [
      "auxType",
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "normalState",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateIntegratedGenericRelay": [
      "auxType",
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "relayDurationSec",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateIntegratedRequestToExit": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "normalState",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "rexType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateOsdpDoorReader": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "orgUuid",
      "osdpAddress",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "readerType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateRhombusOsdpDoorReader": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "deviceUuid",
      "hardwareUuid",
      "name",
      "orgUuid",
      "osdpAddress",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "readerType",
      "serialNumber",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/component/updateWiegandDoorReader": [
      "baseType",
      "boardNum",
      "createdAtMillis",
      "name",
      "orgUuid",
      "ownerDeviceUuid",
      "ownerHardwareType",
      "portImmutable",
      "portNum",
      "portType",
      "readerType",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/customer/deleteAllNotificationSnoozeSettings": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/deleteNotificationSnoozeSettingForDevice": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/deleteNotificationSnoozeSettingForLocation": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/getCurrentPartnerUser": [
      "accessibleRhombusApps",
      "accountOwner",
      "activityTriggerMap",
      "allClientsSelected",
      "bypassSaml",
      "changePasswordOnLogin",
      "createdAtMillis",
      "deleted",
      "deviceFilterSet",
      "diagnosticTriggerMap",
      "email",
      "emailCaseSensitive",
      "emailVerified",
      "error",
      "errorMsg",
      "firstName",
      "flags",
      "lastName",
      "locationFilterSet",
      "mfaEnabled",
      "mfaTokenType",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "name",
      "orgUserCustomizationFlags",
      "orgUuid",
      "passwordSet",
      "permissionGroupUuid",
      "rhombusUserUuid",
      "smsPhoneNumbers",
      "status",
      "summaryEmailEnabled",
      "updatedAtMillis",
      "userUuid",
      "uuid"
    ],
    "POST /api/customer/getCurrentRhombusKeyUser": [
      "accessibleRhombusApps",
      "accountOwner",
      "bypassSaml",
      "changePasswordOnLogin",
      "companyLogoUrl",
      "createdAtMillis",
      "deleted",
      "email",
      "emailCaseSensitive",
      "emailVerified",
      "favoriteAccessControlledDoorUuids",
      "firstName",
      "lastName",
      "maxMobileCredsAllowed",
      "mfaEnabled",
      "mfaTokenType",
      "name",
      "orgUserCustomizationFlags",
      "orgUuid",
      "passwordSet",
      "remoteUnlockEnabled",
      "rhombusKeyAccessEnabled",
      "rhombusOrgUserUuid",
      "rhombusUserUuid",
      "status",
      "type",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/customer/getCurrentUser": [
      "accessibleRhombusApps",
      "accountOwner",
      "activityTriggerMap",
      "bypassSaml",
      "changePasswordOnLogin",
      "createdAtMillis",
      "deleted",
      "deviceFilterSet",
      "diagnosticTriggerMap",
      "email",
      "emailCaseSensitive",
      "emailVerified",
      "error",
      "errorMsg",
      "firstName",
      "flags",
      "frontend",
      "fullCamera",
      "halfCamera",
      "lastName",
      "layout",
      "locationFilterSet",
      "mfaEnabled",
      "mfaTokenType",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "name",
      "orgUserCustomizationFlags",
      "orgUuid",
      "passwordSet",
      "permissionGroupUuid",
      "rememberedLocation",
      "report",
      "rhombusUserUuid",
      "smsPhoneNumbers",
      "status",
      "summaryEmailEnabled",
      "updatedAtMillis",
      "userUuid",
      "uuid",
      "videoWall"
    ],
    "POST /api/customer/getCurrentUserConsoleOrgsForContextSwitch": [
      "companyThumbnailLogoUrl",
      "orgName",
      "orgUuid",
      "userName"
    ],
    "POST /api/customer/getCurrentUserOrgsForContextSwitch": [
      "accountBillingContactEmail",
      "accountOwnerEmail",
      "accountTechnicalContactEmail",
      "accountTechnicalContacts",
      "address1",
      "address2",
      "audioRecordingEnabled",
      "companyLogoUrl",
      "countryCode",
      "createdAtMillis",
      "criticalStatusEnabled",
      "deleted",
      "enabled",
      "inactivityTimeout",
      "itemizedInvoice",
      "maxAllowedSegmentMaxBytesMap",
      "mfaEnabled",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mode",
      "name",
      "newCameraFramerateMap",
      "newCameraResolutionMap",
      "newCameraSegmentMaxBytesMap",
      "newCameraVideoTargetQualityMap",
      "newCameraZeroMotionVideoQualityMap",
      "notifyForHardwareFailureTickets",
      "partnerAccessAllowedUntil",
      "postalCode",
      "salesforceAccountId",
      "shareAiTrainingMediaWithRhombus",
      "subscriptionEndDate",
      "subscriptionStatus",
      "subscriptionType",
      "supportAccessAllowedUntil",
      "text",
      "type",
      "uuid",
      "v3AuthNumDaysSkip2FAForTrustedDevices"
    ],
    "POST /api/customer/getCurrentUserRhombusKeyOrgsForContextSwitch": [
      "companyThumbnailLogoUrl",
      "orgName",
      "orgUuid",
      "userName"
    ],
    "POST /api/customer/getCurrentUserSessions": [
      "appName",
      "appOs",
      "appVersion",
      "city_name",
      "clientType",
      "country_code",
      "country_name",
      "currentSession",
      "error",
      "errorMsg",
      "lastActivityTimeMs",
      "lastIpAccessedFrom",
      "region_name",
      "userAgent"
    ],
    "POST /api/customer/getDashboardStatus": [
      "camerasDown",
      "camerasDownByLocation",
      "camerasUp",
      "error",
      "errorMsg",
      "healthStatusIndicator",
      "healthStatusMsg",
      "locationCameraStatus",
      "totalCameras",
      "totalClimateSensors",
      "totalDoorSensors",
      "totalLocations",
      "totalProximitySensors"
    ],
    "POST /api/customer/getRhombusKeyConfigForCurrentUser": [
      "bypassSaml",
      "createdAtMillis",
      "favoriteAccessControlledDoorUuids",
      "maxMobileCredsAllowed",
      "orgUuid",
      "remoteUnlockEnabled",
      "rhombusKeyAccessEnabled",
      "rhombusOrgUserUuid",
      "type",
      "updatedAtMillis"
    ],
    "POST /api/customer/getUserSnoozedNotificationSettings": [
      "durationSecs",
      "error",
      "errorMsg",
      "timestampSec",
      "uuid"
    ],
    "POST /api/customer/setFlag": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/snoozeAllNotifications": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/snoozeDeviceNotifications": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/snoozeLocationNotifications": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/updateCurrentPartnerUser": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/updateCurrentUser": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/updateDashboardCustomizations": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/updateFrontendCustomizations": [
      "error",
      "errorMsg"
    ],
    "POST /api/customer/updateRhombusKeyPreferencesForCurrentUser": [
      "bypassSaml",
      "createdAtMillis",
      "favoriteAccessControlledDoorUuids",
      "maxMobileCredsAllowed",
      "orgUuid",
      "remoteUnlockEnabled",
      "rhombusKeyAccessEnabled",
      "rhombusOrgUserUuid",
      "type",
      "updatedAtMillis"
    ],
    "POST /api/developer/createEventListener": [
      "error",
      "errorMsg",
      "eventListenerUuid"
    ],
    "POST /api/developer/deleteEventListener": [
      "error",
      "errorMsg"
    ],
    "POST /api/developer/getAllEventListeners": [
      "activities",
      "clientCertificate",
      "clientKey",
      "deviceUuid",
      "error",
      "errorMsg",
      "hostname",
      "orgUuid",
      "trustedCertificate",
      "uri",
      "uuid"
    ],
    "POST /api/developer/getEventListenersForDevice": [
      "activities",
      "clientCertificate",
      "clientKey",
      "deviceUuid",
      "error",
      "errorMsg",
      "hostname",
      "orgUuid",
      "trustedCertificate",
      "uri",
      "uuid"
    ],
    "POST /api/door/getDoorEventsForSensor": [
      "baseStationUuid",
      "batteryPercentage",
      "bleDeviceUuid",
      "bleRssi",
      "closeBaseStations",
      "error",
      "errorMsg",
      "locationUuid",
      "orgUuid",
      "state",
      "stateChanged",
      "timestampMs"
    ],
    "POST /api/door/getDoorEventsForTags": [
      "baseStationUuid",
      "batteryPercentage",
      "bleDeviceUuid",
      "bleRssi",
      "closeBaseStations",
      "error",
      "errorMsg",
      "locationUuid",
      "orgUuid",
      "state",
      "stateChanged",
      "timestampMs"
    ],
    "POST /api/door/getDoorPresenceWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/door/getMinimalDoorStateList": [
      "associatedCameras",
      "batteryPercent",
      "createdAtMillis",
      "error",
      "errorMsg",
      "firmwareVersion",
      "floorNumber",
      "health",
      "healthDetails",
      "hwVariation",
      "lastSeenSec",
      "latitude",
      "locationUuid",
      "longitude",
      "name",
      "policyUuid",
      "sensorUuid",
      "serialNumber",
      "signalStrength",
      "status"
    ],
    "POST /api/door/updateDetails": [
      "error",
      "errorMsg"
    ],
    "POST /api/doorbellcamera/calibrateFloorplanProjection": [
      "homography"
    ],
    "POST /api/doorbellcamera/createRuleForDoorbellCamera": [
      "error",
      "errorMsg",
      "ruleUuid"
    ],
    "POST /api/doorbellcamera/delete": [
      "error",
      "errorMsg",
      "responseStatus"
    ],
    "POST /api/doorbellcamera/deleteRuleForDoorbellCamera": [
      "error",
      "errorMsg"
    ],
    "POST /api/doorbellcamera/getBoundingBoxes": [
      "a",
      "al",
      "b",
      "cd",
      "cdn",
      "croppedImageLocator",
      "customActivityColor",
      "employeeName",
      "error",
      "errorMsg",
      "fn",
      "guid",
      "l",
      "loudness",
      "lp",
      "m",
      "objectId",
      "p",
      "r",
      "ro",
      "t",
      "totalAmount",
      "ts",
      "uf",
      "vn",
      "x",
      "y"
    ],
    "POST /api/doorbellcamera/getConfig": [
      "af_enabled",
      "analyze_fps",
      "analyze_res",
      "audio_analysis_enabled",
      "audio_external_mic_boost",
      "audio_external_mic_volume",
      "audio_external_speaker_volume",
      "audio_internal_mic_aec_enabled",
      "audio_internal_mic_boost",
      "audio_internal_mic_volume",
      "audio_internal_speaker_volume",
      "audio_record",
      "audio_use_external_mic",
      "audio_use_external_speaker",
      "audio_use_internal_speaker",
      "bandwidth_reports_disabled",
      "behavior_detection",
      "blocked_debounce_time_ms",
      "blocked_threshold",
      "canny_thresh",
      "cloud_archive_days",
      "cloud_archive_upload_schedule_inverted",
      "cloud_archive_upload_schedule_uuid",
      "color_detection",
      "con_human_filter",
      "con_vehicle_filter",
      "cross_counting",
      "deviceUuid",
      "device_mic_enabled",
      "device_speaker_enabled",
      "dewarpMode",
      "dewarp_tile_height",
      "dewarp_tile_width",
      "edge_cov_diff_thresh",
      "enabled",
      "engagement_counting",
      "error",
      "errorMsg",
      "event_clip_upload_target",
      "exposure_level",
      "face_ai_threshold",
      "face_counting",
      "face_counting_nonunique",
      "face_id_ai_threshold",
      "face_match_threshold",
      "face_recognition",
      "fisheye_display_mode",
      "focus",
      "h",
      "hdr_enabled",
      "height",
      "img_brightness",
      "img_contrast",
      "img_saturation",
      "img_sharpness",
      "inverted",
      "ir_filter_mode",
      "ir_leds_mode",
      "lastModified",
      "led_stealth_mode",
      "licenseplate_detection",
      "long_buf_size",
      "lpr_ai_threshold",
      "max_event_duration_ms",
      "media_ttl_minutes",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "motion_grid_disabled",
      "motion_grid_window_sec",
      "motion_lightweight_disabled",
      "motion_threshold",
      "mounting_direction",
      "new_motion_feature_flag",
      "night_exposure_level",
      "night_img_brightness",
      "night_img_contrast",
      "night_img_saturation",
      "night_img_sharpness",
      "night_sensor_gain_max",
      "night_shutter_time_max",
      "night_shutter_time_min",
      "obj_ai_threshold",
      "offset_x_percent",
      "offset_y_percent",
      "orgUuid",
      "orientation",
      "people_counting",
      "person_ai_threshold",
      "piris",
      "pitchDegrees",
      "pose_detection",
      "ppe_detection",
      "rollDegrees",
      "rotation",
      "segment_max_bytes",
      "sensor_gain_max",
      "short_buf_size",
      "shutter_time_max",
      "shutter_time_min",
      "size_percent",
      "snapshot_height",
      "snapshot_interval_secs",
      "splice_clip_upload_target",
      "table",
      "target_ai_fps",
      "thumbstrip_disabled",
      "timelapse",
      "use_onboard_ai",
      "use_pilot_face_id",
      "vehicle_ai_threshold",
      "vehicle_counting",
      "verticalFieldOfViewDegrees",
      "video_persist_disabled",
      "w",
      "wdr_strength",
      "width",
      "x",
      "y",
      "yawDegrees",
      "zero_motion_video_quality",
      "zoom"
    ],
    "POST /api/doorbellcamera/getDoorbellCameraRulesForOrg": [
      "alertAction",
      "audioClipUuid",
      "audioGateways",
      "componentUuid",
      "doorId",
      "doorbellCameraComponentUuid",
      "doorbellCameraUuid",
      "error",
      "errorMsg",
      "integration",
      "liveNotificationAction",
      "locationLockdownPlanUuid",
      "locationUuid",
      "notificationTarget",
      "overrideRelayDurationSec",
      "ownerDeviceUuid",
      "placeId",
      "ruleName",
      "ruleUuid",
      "scheduleUuids",
      "subject",
      "subjectCustomizable",
      "system",
      "triggerActivity",
      "triggerBackoffSecs",
      "webhookUrl"
    ],
    "POST /api/doorbellcamera/getFullState": [
      "afSupport",
      "baseVideoOperationUri",
      "connectionStatus",
      "connectionTimestampMs",
      "createdAtMillis",
      "defaultInterface",
      "defaultInterfaceMac",
      "directionRadians",
      "externalIPAddress",
      "firmwareUpdateInProgress",
      "firmwareVersion",
      "floorNumber",
      "healthStatus",
      "healthStatusDetails",
      "hwVariation",
      "lanAddresses",
      "latestFirmwareVersion",
      "latitude",
      "liveStreamShared",
      "liveStreamsSharedCount",
      "locationUuid",
      "longitude",
      "maxZoomPercent",
      "mediaRegion",
      "mummified",
      "name",
      "onCameraState",
      "onCloudState",
      "policyUuid",
      "region",
      "serialNumber",
      "ssid",
      "uuid",
      "versionsBehind",
      "wifiApMac",
      "wifiBars",
      "wifiSignalStrength"
    ],
    "POST /api/doorbellcamera/getMediaUris": [
      "lanCheckUrls",
      "lanLiveH264Uris",
      "lanLiveMpdUris",
      "lanLiveOpusUris",
      "lanVodM3u8UrisTemplates",
      "lanVodMpdUrisTemplates",
      "wanLiveH264Uri",
      "wanLiveMpdUri",
      "wanLiveOpusUri",
      "wanVodM3u8UriTemplate",
      "wanVodMpdUriTemplate"
    ],
    "POST /api/doorbellcamera/getMinimalStateList": [
      "connectionStatus",
      "createdAtMillis",
      "defaultInterface",
      "defaultInterfaceMac",
      "directionRadians",
      "externalIPAddress",
      "firmwareUpdateInProgress",
      "firmwareVersion",
      "floorNumber",
      "healthStatus",
      "healthStatusDetails",
      "hwVariation",
      "lanAddresses",
      "latitude",
      "liveStreamShared",
      "liveStreamsSharedCount",
      "locationUuid",
      "longitude",
      "mediaRegion",
      "mummified",
      "name",
      "policyUuid",
      "region",
      "serialNumber",
      "ssid",
      "uuid",
      "wifiApMac",
      "wifiBars",
      "wifiSignalStrength"
    ],
    "POST /api/doorbellcamera/getPresenceWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/doorbellcamera/getRulesForDoorbellCamera": [
      "alertAction",
      "audioClipUuid",
      "audioGateways",
      "componentUuid",
      "doorId",
      "doorbellCameraComponentUuid",
      "doorbellCameraUuid",
      "error",
      "errorMsg",
      "integration",
      "liveNotificationAction",
      "locationLockdownPlanUuid",
      "locationUuid",
      "notificationTarget",
      "overrideRelayDurationSec",
      "ownerDeviceUuid",
      "placeId",
      "ruleName",
      "ruleUuid",
      "scheduleUuids",
      "subject",
      "subjectCustomizable",
      "system",
      "triggerActivity",
      "triggerBackoffSecs",
      "webhookUrl"
    ],
    "POST /api/doorbellcamera/getSeekpoints": [
      "a",
      "al",
      "cc",
      "cd",
      "cdn",
      "employeeName",
      "error",
      "errorMsg",
      "fn",
      "guid",
      "id",
      "loudness",
      "lp",
      "m",
      "p",
      "ro",
      "totalAmount",
      "ts",
      "tu",
      "uf",
      "vn"
    ],
    "POST /api/doorbellcamera/getUptimeWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/doorbellcamera/updateConfig": [
      "error",
      "errorMsg"
    ],
    "POST /api/doorbellcamera/updateDetails": [
      "error",
      "errorMsg"
    ],
    "POST /api/doorcontroller/delete": [
      "error",
      "errorMsg",
      "responseStatus"
    ],
    "POST /api/doorcontroller/getConfig": [
      "accelerometer_change_tamper_threshold",
      "accelerometer_disabled",
      "autocomponentize_readers",
      "autoregister_readers",
      "deviceUuid",
      "error",
      "errorMsg",
      "flip_display_orientation",
      "lastModified",
      "orgUuid",
      "pressure_switch_tamper_disabled",
      "pressure_switch_tamper_normally_open",
      "proximity_sensor_tamper_disabled",
      "proximity_sensor_tamper_distance_threshold"
    ],
    "POST /api/doorcontroller/getDoorControllerStateList": [
      "boardNum",
      "configUpdatedAtMs",
      "connectionStatus",
      "deleted",
      "description",
      "directionRadians",
      "error",
      "errorMsg",
      "firmwareVersion",
      "floorNumber",
      "grantsUpdatedAtMs",
      "lastSeenMs",
      "latitude",
      "locationUuid",
      "longitude",
      "name",
      "online",
      "policyUuid",
      "portNum",
      "serialNumber",
      "type",
      "uuid"
    ],
    "POST /api/doorcontroller/updateConfig": [
      "error",
      "errorMsg"
    ],
    "POST /api/doorcontroller/updateDetails": [
      "error",
      "errorMsg"
    ],
    "POST /api/ethernettester/getEthernetTesterConfig": [
      "configJson",
      "error",
      "errorMsg"
    ],
    "POST /api/event/createSharedClipGroup": [
      "error",
      "errorMsg",
      "shareUrl",
      "uuid"
    ],
    "POST /api/event/createSharedClipGroupV2": [
      "error",
      "errorMsg",
      "shareUrl",
      "uuid"
    ],
    "POST /api/event/createSharedClipGroupV3": [
      "error",
      "errorMsg",
      "shareUrl",
      "uuid"
    ],
    "POST /api/event/deleteAlertMonitoringThreatCase": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/deleteSavedClip": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/deleteSharedClipGroup": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/deleteSharedClipGroupV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/dismissAllPolicyAlertsForDevice": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/dismissAllPolicyAlertsV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/dismissPolicyAlertV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/dismissPolicyAlertsV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/getAlertMonitoringThreatCases": [
      "alertUuid",
      "createdAtMillis",
      "deleted",
      "error",
      "errorMsg",
      "locationName",
      "locationUuid",
      "message",
      "noonlightAlarmId",
      "noonlightVerificationId",
      "orgUuid",
      "policyAlertUuid",
      "policyAlertUuids",
      "promptTheme",
      "sharedClipGroupUuid",
      "status",
      "submissionTimestampMs",
      "timestampSec",
      "type",
      "userUuid",
      "uuid"
    ],
    "POST /api/event/getClipsWithProgress": [
      "analyzed",
      "byteCount",
      "consoleDelete",
      "createdAtMs",
      "currentOperation",
      "description",
      "deviceUuid",
      "deviceUuids",
      "durationSec",
      "error",
      "errorMsg",
      "externalTransactionId",
      "height",
      "integrationUploadList",
      "lastUpdatedSec",
      "orgUuid",
      "percentComplete",
      "pitchDegrees",
      "region",
      "rollDegrees",
      "saveToDrive",
      "sha256Hex",
      "sourceAlertUuid",
      "status",
      "timestampMs",
      "title",
      "uuid",
      "verticalFieldOfViewDegrees",
      "width",
      "x",
      "y",
      "yawDegrees"
    ],
    "POST /api/event/getMotionGrid": [
      "col",
      "error",
      "errorMsg",
      "row"
    ],
    "POST /api/event/getMotionHeatMap": [
      "countGrid",
      "error",
      "errorMsg"
    ],
    "POST /api/event/getPolicyAlert": [
      "alertMonitoringThreatCaseUuid",
      "alertMonitoringVerified",
      "clipLocationMapV2",
      "delayedProcessing",
      "deleted",
      "durationSec",
      "error",
      "errorMsg",
      "finalized",
      "locationUuid",
      "notificationSent",
      "orgUuid",
      "policyAlertTriggers",
      "region",
      "saved",
      "shared",
      "thumbnailLocationV2",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/event/getPolicyAlertCount": [
      "count",
      "error",
      "errorMsg"
    ],
    "POST /api/event/getPolicyAlertDetails": [
      "activity",
      "alert",
      "alertMonitoringThreatCaseUuid",
      "alertMonitoringVerified",
      "bottom",
      "clipLocationMapV2",
      "croppedImageLocator",
      "customActivityColor",
      "customActivityDescription",
      "customActivityDisplayName",
      "delayedProcessing",
      "deleted",
      "durationSec",
      "employeeName",
      "error",
      "errorMsg",
      "faceId",
      "faceName",
      "finalized",
      "guid",
      "id",
      "imageS3Bucket",
      "imageS3Key",
      "imageS3Region",
      "inMotion",
      "left",
      "licensePlate",
      "licensePlateNumber",
      "locationUuid",
      "loudness",
      "notificationSent",
      "objectId",
      "orgUuid",
      "policyAlertTriggers",
      "pose",
      "region",
      "relativeSecond",
      "right",
      "saved",
      "shared",
      "thumbnailLocationV2",
      "timestampMs",
      "top",
      "totalAmount",
      "tu",
      "type",
      "unidentifiedFaceId",
      "uuid",
      "vehicleName",
      "x",
      "y"
    ],
    "POST /api/event/getPolicyAlertGroupsForDevice": [
      "alertMonitoringThreatCaseUuid",
      "alertMonitoringVerified",
      "clipLocationMapV2",
      "co2",
      "co2Threshold",
      "delayedProcessing",
      "deleted",
      "deviceType",
      "deviceUuid",
      "durationSec",
      "egressBoundaryDevices",
      "endTime",
      "error",
      "errorMsg",
      "ethanol",
      "ethanolThreshold",
      "faceId",
      "faceName",
      "finalized",
      "humidityPercent1616",
      "humidityPercentThreshold1616",
      "humidityPermyriad",
      "humidityThresholdPermyriad",
      "iaq",
      "iaqThreshold",
      "imageS3Bucket",
      "imageS3Key",
      "imageS3Region",
      "ingressBoundaryDevices",
      "licensePlateNumber",
      "locationUuid",
      "maxLuf",
      "notificationSent",
      "numHumans",
      "orgUuid",
      "peopleCountHighThreshold",
      "peopleCountLowThreshold",
      "pm25",
      "pm25Threshold",
      "policyAlertTriggers",
      "probeTempC",
      "probeTempCThreshold",
      "region",
      "saved",
      "shared",
      "startTime",
      "tamperByMovementChange",
      "tampered",
      "temperatureCelsius1616",
      "temperatureCelsiusThreshold1616",
      "temperaturePermyriad",
      "temperatureThresholdPermyriad",
      "thcPercent",
      "thcPercentThreshold",
      "thumbnailLocationV2",
      "timestampMs",
      "tvoc",
      "tvocThreshold",
      "type",
      "uuid",
      "vapeSmokePercent",
      "vapeSmokePercentThreshold",
      "vehicleName"
    ],
    "POST /api/event/getPolicyAlertGroupsForLocation": [
      "alertMonitoringThreatCaseUuid",
      "alertMonitoringVerified",
      "clipLocationMapV2",
      "co2",
      "co2Threshold",
      "delayedProcessing",
      "deleted",
      "deviceType",
      "deviceUuid",
      "durationSec",
      "egressBoundaryDevices",
      "endTime",
      "error",
      "errorMsg",
      "ethanol",
      "ethanolThreshold",
      "faceId",
      "faceName",
      "finalized",
      "humidityPercent1616",
      "humidityPercentThreshold1616",
      "humidityPermyriad",
      "humidityThresholdPermyriad",
      "iaq",
      "iaqThreshold",
      "imageS3Bucket",
      "imageS3Key",
      "imageS3Region",
      "ingressBoundaryDevices",
      "licensePlateNumber",
      "locationUuid",
      "maxLuf",
      "notificationSent",
      "numHumans",
      "orgUuid",
      "peopleCountHighThreshold",
      "peopleCountLowThreshold",
      "pm25",
      "pm25Threshold",
      "policyAlertTriggers",
      "probeTempC",
      "probeTempCThreshold",
      "region",
      "saved",
      "shared",
      "startTime",
      "tamperByMovementChange",
      "tampered",
      "temperatureCelsius1616",
      "temperatureCelsiusThreshold1616",
      "temperaturePermyriad",
      "temperatureThresholdPermyriad",
      "thcPercent",
      "thcPercentThreshold",
      "thumbnailLocationV2",
      "timestampMs",
      "tvoc",
      "tvocThreshold",
      "type",
      "uuid",
      "vapeSmokePercent",
      "vapeSmokePercentThreshold",
      "vehicleName"
    ],
    "POST /api/event/getPolicyAlertGroupsV2": [
      "alertMonitoringThreatCaseUuid",
      "alertMonitoringVerified",
      "clipLocationMapV2",
      "co2",
      "co2Threshold",
      "delayedProcessing",
      "deleted",
      "deviceType",
      "deviceUuid",
      "durationSec",
      "egressBoundaryDevices",
      "endTime",
      "error",
      "errorMsg",
      "ethanol",
      "ethanolThreshold",
      "faceId",
      "faceName",
      "finalized",
      "humidityPercent1616",
      "humidityPercentThreshold1616",
      "humidityPermyriad",
      "humidityThresholdPermyriad",
      "iaq",
      "iaqThreshold",
      "imageS3Bucket",
      "imageS3Key",
      "imageS3Region",
      "ingressBoundaryDevices",
      "licensePlateNumber",
      "locationUuid",
      "maxLuf",
      "notificationSent",
      "numHumans",
      "orgUuid",
      "peopleCountHighThreshold",
      "peopleCountLowThreshold",
      "pm25",
      "pm25Threshold",
      "policyAlertTriggers",
      "probeTempC",
      "probeTempCThreshold",
      "region",
      "saved",
      "shared",
      "startTime",
      "tamperByMovementChange",
      "tampered",
      "temperatureCelsius1616",
      "temperatureCelsiusThreshold1616",
      "temperaturePermyriad",
      "temperatureThresholdPermyriad",
      "thcPercent",
      "thcPercentThreshold",
      "thumbnailLocationV2",
      "timestampMs",
      "tvoc",
      "tvocThreshold",
      "type",
      "uuid",
      "vapeSmokePercent",
      "vapeSmokePercentThreshold",
      "vehicleName"
    ],
    "POST /api/event/getPolicyAlertV2": [
      "alertMonitoringThreatCaseUuid",
      "alertMonitoringVerified",
      "clipLocationMapV2",
      "co2",
      "co2Threshold",
      "delayedProcessing",
      "deleted",
      "deviceType",
      "deviceUuid",
      "durationSec",
      "egressBoundaryDevices",
      "error",
      "errorMsg",
      "ethanol",
      "ethanolThreshold",
      "faceId",
      "faceName",
      "finalized",
      "humidityPercent1616",
      "humidityPercentThreshold1616",
      "humidityPermyriad",
      "humidityThresholdPermyriad",
      "iaq",
      "iaqThreshold",
      "imageS3Bucket",
      "imageS3Key",
      "imageS3Region",
      "ingressBoundaryDevices",
      "licensePlateNumber",
      "locationUuid",
      "maxLuf",
      "notificationSent",
      "numHumans",
      "orgUuid",
      "peopleCountHighThreshold",
      "peopleCountLowThreshold",
      "pm25",
      "pm25Threshold",
      "policyAlertTriggers",
      "probeTempC",
      "probeTempCThreshold",
      "region",
      "saved",
      "shared",
      "tamperByMovementChange",
      "tampered",
      "temperatureCelsius1616",
      "temperatureCelsiusThreshold1616",
      "temperaturePermyriad",
      "temperatureThresholdPermyriad",
      "thcPercent",
      "thcPercentThreshold",
      "thumbnailLocationV2",
      "timestampMs",
      "tvoc",
      "tvocThreshold",
      "type",
      "uuid",
      "vapeSmokePercent",
      "vapeSmokePercentThreshold",
      "vehicleName"
    ],
    "POST /api/event/getPolicyAlerts": [
      "alertMonitoringThreatCaseUuid",
      "alertMonitoringVerified",
      "clipLocationMapV2",
      "delayedProcessing",
      "deleted",
      "durationSec",
      "error",
      "errorMsg",
      "finalized",
      "locationUuid",
      "notificationSent",
      "orgUuid",
      "policyAlertTriggers",
      "region",
      "saved",
      "shared",
      "thumbnailLocationV2",
      "timestampMs",
      "type",
      "uuid"
    ],
    "POST /api/event/getPolicyAlertsV2": [
      "alertMonitoringThreatCaseUuid",
      "alertMonitoringVerified",
      "clipLocationMapV2",
      "co2",
      "co2Threshold",
      "delayedProcessing",
      "deleted",
      "deviceType",
      "deviceUuid",
      "durationSec",
      "egressBoundaryDevices",
      "error",
      "errorMsg",
      "ethanol",
      "ethanolThreshold",
      "faceId",
      "faceName",
      "finalized",
      "humidityPercent1616",
      "humidityPercentThreshold1616",
      "humidityPermyriad",
      "humidityThresholdPermyriad",
      "iaq",
      "iaqThreshold",
      "imageS3Bucket",
      "imageS3Key",
      "imageS3Region",
      "ingressBoundaryDevices",
      "licensePlateNumber",
      "locationUuid",
      "maxLuf",
      "notificationSent",
      "numHumans",
      "orgUuid",
      "peopleCountHighThreshold",
      "peopleCountLowThreshold",
      "pm25",
      "pm25Threshold",
      "policyAlertTriggers",
      "probeTempC",
      "probeTempCThreshold",
      "region",
      "saved",
      "shared",
      "tamperByMovementChange",
      "tampered",
      "temperatureCelsius1616",
      "temperatureCelsiusThreshold1616",
      "temperaturePermyriad",
      "temperatureThresholdPermyriad",
      "thcPercent",
      "thcPercentThreshold",
      "thumbnailLocationV2",
      "timestampMs",
      "tvoc",
      "tvocThreshold",
      "type",
      "uuid",
      "vapeSmokePercent",
      "vapeSmokePercentThreshold",
      "vehicleName"
    ],
    "POST /api/event/getSavedClipCount": [
      "count",
      "error",
      "errorMsg"
    ],
    "POST /api/event/getSavedClipDetails": [
      "activity",
      "alert",
      "analyzed",
      "bottom",
      "byteCount",
      "consoleDelete",
      "createdAtMs",
      "croppedImageLocator",
      "customActivityColor",
      "customActivityDescription",
      "customActivityDisplayName",
      "description",
      "deviceUuid",
      "deviceUuids",
      "durationSec",
      "employeeName",
      "error",
      "errorMsg",
      "externalTransactionId",
      "faceName",
      "guid",
      "height",
      "id",
      "inMotion",
      "integrationUploadList",
      "left",
      "licensePlate",
      "loudness",
      "objectId",
      "orgUuid",
      "pitchDegrees",
      "pose",
      "region",
      "relativeSecond",
      "right",
      "rollDegrees",
      "saveToDrive",
      "sha256Hex",
      "sourceAlertUuid",
      "status",
      "timestampMs",
      "title",
      "top",
      "totalAmount",
      "tu",
      "unidentifiedFaceId",
      "uuid",
      "vehicleName",
      "verticalFieldOfViewDegrees",
      "width",
      "x",
      "y",
      "yawDegrees"
    ],
    "POST /api/event/getSavedClips": [
      "analyzed",
      "byteCount",
      "consoleDelete",
      "createdAtMs",
      "description",
      "deviceUuid",
      "deviceUuids",
      "durationSec",
      "error",
      "errorMsg",
      "externalTransactionId",
      "height",
      "integrationUploadList",
      "orgUuid",
      "pitchDegrees",
      "region",
      "rollDegrees",
      "saveToDrive",
      "sha256Hex",
      "sourceAlertUuid",
      "status",
      "timestampMs",
      "title",
      "uuid",
      "verticalFieldOfViewDegrees",
      "width",
      "x",
      "y",
      "yawDegrees"
    ],
    "POST /api/event/getSavedClipsByExternalTransactionId": [
      "analyzed",
      "byteCount",
      "consoleDelete",
      "createdAtMs",
      "description",
      "deviceUuid",
      "deviceUuids",
      "durationSec",
      "error",
      "errorMsg",
      "externalTransactionId",
      "height",
      "integrationUploadList",
      "orgUuid",
      "pitchDegrees",
      "region",
      "rollDegrees",
      "saveToDrive",
      "sha256Hex",
      "sourceAlertUuid",
      "status",
      "timestampMs",
      "title",
      "uuid",
      "verticalFieldOfViewDegrees",
      "width",
      "x",
      "y",
      "yawDegrees"
    ],
    "POST /api/event/getSavedClipsV2": [
      "analyzed",
      "byteCount",
      "consoleDelete",
      "createdAtMs",
      "description",
      "deviceUuid",
      "deviceUuids",
      "durationSec",
      "error",
      "errorMsg",
      "externalTransactionId",
      "height",
      "integrationUploadList",
      "orgUuid",
      "pitchDegrees",
      "region",
      "rollDegrees",
      "saveToDrive",
      "sha256Hex",
      "sourceAlertUuid",
      "status",
      "timestampMs",
      "title",
      "uuid",
      "verticalFieldOfViewDegrees",
      "width",
      "x",
      "y",
      "yawDegrees"
    ],
    "POST /api/event/getSharedClipGroupDetails": [
      "activity",
      "alert",
      "bottom",
      "createdAtMillis",
      "croppedImageLocator",
      "customActivityColor",
      "customActivityDescription",
      "customActivityDisplayName",
      "description",
      "durationSec",
      "employeeName",
      "error",
      "errorMsg",
      "expirationTimeSecs",
      "faceName",
      "guid",
      "id",
      "inMotion",
      "left",
      "licensePlate",
      "loudness",
      "objectId",
      "orgUuid",
      "pose",
      "region",
      "relativeSecond",
      "right",
      "startTime",
      "title",
      "top",
      "totalAmount",
      "tu",
      "unidentifiedFaceId",
      "uuid",
      "vehicleName",
      "x",
      "y"
    ],
    "POST /api/event/getSharedClipGroups": [
      "activity",
      "activitySeekPoints",
      "alert",
      "bottom",
      "createdAtMillis",
      "croppedImageLocator",
      "customActivityColor",
      "customActivityDescription",
      "customActivityDisplayName",
      "description",
      "deviceUuid",
      "deviceUuids",
      "durationSec",
      "employeeName",
      "error",
      "errorMsg",
      "expirationTime",
      "faceName",
      "guid",
      "id",
      "inMotion",
      "isSecured",
      "left",
      "licensePlate",
      "loudness",
      "mGrids",
      "objectId",
      "orgUuid",
      "pose",
      "region",
      "relativeSecond",
      "right",
      "soundSignificantLufs",
      "startTime",
      "thumbnailLocationV2",
      "timestampMs",
      "title",
      "top",
      "totalAmount",
      "tu",
      "unidentifiedFaceId",
      "uuid",
      "vehicleName",
      "x",
      "y"
    ],
    "POST /api/event/getSharedClipGroupsV2": [
      "createdAtMillis",
      "description",
      "durationSec",
      "error",
      "errorMsg",
      "expirationTimeSecs",
      "isSecured",
      "orgUuid",
      "region",
      "startTime",
      "title",
      "uuid"
    ],
    "POST /api/event/getSplicedClipsInProgress": [
      "analyzeClip",
      "clipUuid",
      "consoleDelete",
      "deleted",
      "description",
      "deviceUuid",
      "duration",
      "error",
      "errorMsg",
      "height",
      "integrationUploadList",
      "isPolicyEvent",
      "metadataBucketRegion",
      "orgUuid",
      "pitchDegrees",
      "region",
      "rollDegrees",
      "saveClip",
      "saveFrame",
      "saveToDrive",
      "segmentsUploaded",
      "startTime",
      "status",
      "thumbnailRelativeSecond",
      "timestampMs",
      "title",
      "totalSegments",
      "transactionUuid",
      "verticalFieldOfViewDegrees",
      "width",
      "x",
      "y",
      "yawDegrees"
    ],
    "POST /api/event/getUnhealthyDeviceAlerts": [
      "deviceUuid",
      "error",
      "errorMsg",
      "orgUuid",
      "symptom",
      "timestamp",
      "uuid"
    ],
    "POST /api/event/muteNotificationsForDevice": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/reportBadPolicyAlert": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/savePolicyAlertV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/searchMotionGrid": [
      "error",
      "errorMsg",
      "timeUtcSecsList"
    ],
    "POST /api/event/searchMotionGridWithActivities": [
      "activities",
      "activity",
      "bestTimestampMs",
      "error",
      "errorMsg",
      "objectId"
    ],
    "POST /api/event/unSavePolicyAlertV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/updateSavedClip": [
      "error",
      "errorMsg"
    ],
    "POST /api/event/updateSharedClipGroup": [
      "error",
      "errorMsg",
      "shareUrl",
      "uuid"
    ],
    "POST /api/event/updateSharedClipGroupV2": [
      "error",
      "errorMsg",
      "shareUrl",
      "uuid"
    ],
    "POST /api/face/addFaceLabel": [
      "error",
      "errorMsg"
    ],
    "POST /api/face/disassociateFaceEvents": [
      "error",
      "errorMsg",
      "faceId"
    ],
    "POST /api/face/getFace": [
      "createdAtMillis",
      "error",
      "errorMsg",
      "faceId",
      "name",
      "orgUuid",
      "thumbnailS3Key"
    ],
    "POST /api/face/getFaceLabelsForOrg": [
      "error",
      "errorMsg",
      "faceLabels"
    ],
    "POST /api/face/getFacesForName": [
      "createdAtMillis",
      "error",
      "errorMsg",
      "faceId",
      "name",
      "orgUuid",
      "thumbnailS3Key"
    ],
    "POST /api/face/getFacesV2": [
      "createdAtMillis",
      "error",
      "errorMsg",
      "faceId",
      "name",
      "orgUuid",
      "paginationKey",
      "thumbnailS3Key"
    ],
    "POST /api/face/getRecentFaceEventsByLocation": [
      "alternativeFaceIds",
      "detectionType",
      "deviceLabels",
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "faceId",
      "faceName",
      "imageS3Key",
      "indexed",
      "locationLabels",
      "locationUuid",
      "orgUuid",
      "pitch",
      "roll",
      "thumbnailS3Key",
      "uuid",
      "yaw"
    ],
    "POST /api/face/getRecentFaceEventsForFace": [
      "alternativeFaceIds",
      "detectionType",
      "deviceLabels",
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "faceId",
      "faceName",
      "imageS3Key",
      "indexed",
      "locationLabels",
      "locationUuid",
      "orgUuid",
      "pitch",
      "roll",
      "thumbnailS3Key",
      "uuid",
      "yaw"
    ],
    "POST /api/face/getRecentFaceEventsForName": [
      "alternativeFaceIds",
      "detectionType",
      "deviceLabels",
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "faceId",
      "faceName",
      "imageS3Key",
      "indexed",
      "locationLabels",
      "locationUuid",
      "orgUuid",
      "pitch",
      "roll",
      "thumbnailS3Key",
      "uuid",
      "yaw"
    ],
    "POST /api/face/getRecentFaceEventsV2": [
      "alternativeFaceIds",
      "detectionType",
      "deviceLabels",
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "faceId",
      "faceName",
      "imageS3Key",
      "indexed",
      "locationLabels",
      "locationUuid",
      "orgUuid",
      "pitch",
      "roll",
      "thumbnailS3Key",
      "uuid",
      "yaw"
    ],
    "POST /api/face/getUploadedFaces": [
      "createdAtMillis",
      "error",
      "errorMsg",
      "faceId",
      "name",
      "orgUuid",
      "origS3Key",
      "success",
      "thumbnailKey",
      "transactionId"
    ],
    "POST /api/face/getUploadedFacesByTransactionId": [
      "createdAtMillis",
      "error",
      "errorMsg",
      "faceId",
      "name",
      "orgUuid",
      "origS3Key",
      "success",
      "thumbnailKey",
      "transactionId"
    ],
    "POST /api/face/removeFaceLabel": [
      "error",
      "errorMsg"
    ],
    "POST /api/face/reportFaceEvent": [
      "collectedMediaForTraining",
      "error",
      "errorMsg"
    ],
    "POST /api/face/updateFace": [
      "error",
      "errorMsg"
    ],
    "POST /api/feature/getDeviceEventTypes": [
      "eventTypes"
    ],
    "POST /api/feature/getDeviceFeatures": [
      "deviceUuid",
      "error",
      "errorMsg",
      "featureMap"
    ],
    "POST /api/feature/getDeviceFeaturesList": [
      "deviceUuid",
      "error",
      "errorMsg",
      "featureMap"
    ],
    "POST /api/feature/getFeatureCompatabilityMatrix": [
      "deviceFeatureEnablement",
      "error",
      "errorMsg",
      "featureName",
      "generatedActivities",
      "hardwareDefaultMap",
      "requiredLicenses",
      "supportedHardware"
    ],
    "POST /api/feature/updateDeviceFeatures": [
      "error",
      "errorMsg"
    ],
    "POST /api/guestExternal/updateGuestByToken": [
      "error",
      "errorMsg"
    ],
    "POST /api/help/feedback": [
      "error",
      "errorMsg",
      "failureReason",
      "success"
    ],
    "POST /api/help/openTickets": [
      "createdAt",
      "currentPage",
      "error",
      "errorMsg",
      "hasNexPage",
      "id",
      "status",
      "subject",
      "totalTickets"
    ],
    "POST /api/help/openTicketsV2": [
      "createdAt",
      "error",
      "errorMsg",
      "id",
      "status",
      "subject"
    ],
    "POST /api/help/rma": [
      "error",
      "errorMsg",
      "failureReason",
      "success",
      "ticketId"
    ],
    "POST /api/help/ticket": [
      "error",
      "errorMsg",
      "failureReason",
      "success",
      "ticketId"
    ],
    "POST /api/help/ticketWithFile": [
      "error",
      "errorMsg",
      "failureReason",
      "success",
      "ticketId"
    ],
    "POST /api/integrations/createEnvoyInvite": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteAmtIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteAwsIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteBoxIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteBrivoIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteButterflymxIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteDeviceIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteDiceIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteDropboxIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteEmailIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteEnvoyIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteEnvoyIntegrationV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteGeneaIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteGoogleIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteGoogleIntegrationV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteGuest": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteGuestManagementIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteHaloIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteInformacastIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteIntuifaceIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteKisiIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteLumeoIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteMattermostIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteMicrosoftTeamsIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteMicrosoftTeamsIntegrationV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteMicrosoftTeamsUser": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteOffice365Integration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteOmnialertIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteOpenAIIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteOpenpathIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteOpentechAllianceIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deletePagerDutyIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deletePdkIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deletePlaceOsIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteServiceNowIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteSlackIntegrationV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteToastIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteWebhookIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/deleteWebhookIntegrationV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/getAllGuestsByOrg": [
      "accessEndTimeMs",
      "accessStartTimeMs",
      "address1",
      "address2",
      "associatedCameras",
      "checked",
      "city",
      "countryCode",
      "crime",
      "email",
      "error",
      "errorMsg",
      "faceImage",
      "firstName",
      "guestType",
      "lastName",
      "locationUuid",
      "orgUuid",
      "phoneNumber",
      "postalCode",
      "state",
      "status",
      "timeMs"
    ],
    "POST /api/integrations/getAmtReaders": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getApiTokenApplications": [
      "authType",
      "authenticationTokenHash",
      "clientDetails",
      "clientType",
      "csr",
      "displayName",
      "error",
      "errorMsg",
      "orgUuid",
      "permissionGroupUuid",
      "tokenUuid"
    ],
    "POST /api/integrations/getApiTokens": [
      "authType",
      "authenticationTokenHash",
      "cert",
      "certFingerprint",
      "clientDetails",
      "clientType",
      "csr",
      "displayName",
      "error",
      "errorMsg",
      "orgUuid",
      "permissionGroupUuid",
      "tokenUuid"
    ],
    "POST /api/integrations/getBrivoDoors": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getButterflymxPanels": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getDeviceIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getDiceIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getEnvoyIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getGeneaDoors": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getGoogleIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getGuest": [
      "accessEndTimeMs",
      "accessStartTimeMs",
      "address1",
      "address2",
      "associatedCameras",
      "checked",
      "city",
      "countryCode",
      "crime",
      "email",
      "error",
      "errorMsg",
      "faceImage",
      "firstName",
      "guestType",
      "lastName",
      "locationUuid",
      "orgUuid",
      "phoneNumber",
      "postalCode",
      "state",
      "status",
      "timeMs"
    ],
    "POST /api/integrations/getGuestManagementIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getInformacastIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getInformacastMessageTemplates": [
      "bodyCustomizable",
      "error",
      "errorMsg",
      "id",
      "name",
      "subject",
      "subjectCustomizable"
    ],
    "POST /api/integrations/getKisiDoors": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getKisiPlaces": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getLumeoIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getMicrosoftTeamsIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getMicrosoftUsersJoinedTeams": [
      "error",
      "errorMsg",
      "teamsMap"
    ],
    "POST /api/integrations/getOmnialertIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getOpenAIIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getOpenAIModels": [
      "created",
      "error",
      "errorMsg",
      "id",
      "object",
      "ownedBy",
      "owned_by"
    ],
    "POST /api/integrations/getOpenpathDoors": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getOpentechAllianceFacilities": [
      "actionGroupId",
      "deviceId",
      "error",
      "errorMsg",
      "id",
      "locationName",
      "name"
    ],
    "POST /api/integrations/getOrgIntegrations": [
      "acceptedTermsOfService",
      "accessKey",
      "accessToken",
      "accountEmail",
      "accountName",
      "accountUser",
      "actionGroupId",
      "alertAgression",
      "alertCO",
      "alertCO2",
      "alertGunshot",
      "alertHelp",
      "alertMasking",
      "alertTHC",
      "alertTamper",
      "alertTemp",
      "alertUnauthorizedFaces",
      "alertVOC",
      "alertVape",
      "allLocationIntegrationKeys",
      "apiKey",
      "apiSecret",
      "apiSecretKey",
      "apiToken",
      "apiUrl",
      "applicationKey",
      "applicationKeyId",
      "assignedCameraList",
      "bucketName",
      "buildingId",
      "buildingWebhookIdMap",
      "cameraToSwitchMap",
      "channel",
      "channelId",
      "channelName",
      "clientId",
      "clientSecret",
      "code",
      "createSeekPoints",
      "currentToastRestaurantGuid",
      "defaultAlertFolderId",
      "defaultAlertFolderName",
      "defaultDelayByLocationsMap",
      "defaultFolderId",
      "defaultFolderName",
      "defaultPromptByLocationsMap",
      "description",
      "deviceList",
      "doorName",
      "doorToCameraMap",
      "driveId",
      "email",
      "emailAddresses",
      "enabled",
      "enabledTimestampMs",
      "enablingUser",
      "enablingUserUuid",
      "enterpriseId",
      "envoyIntegrationInstalled",
      "error",
      "errorMsg",
      "escalationDelayMinutes",
      "eventToWebhookIdMap",
      "experienceIds",
      "experienceNames",
      "folderId",
      "identifyFacesFromBadge",
      "indexFaces",
      "instanceUrl",
      "integrationKey",
      "locationEntryInstructionsMap",
      "locationIdToDeviceUuidsMap",
      "locationName",
      "locationToIntegrationKeysMap",
      "message",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "name",
      "orgAccessToken",
      "orgId",
      "orgUuid",
      "ouId",
      "panelName",
      "parameter1",
      "parameter2",
      "parameter3",
      "password",
      "phoneNumber",
      "phoneNumbers",
      "pin",
      "placeId",
      "playerDeviceNames",
      "playerIds",
      "playerTags",
      "posName",
      "promptTheme",
      "refreshToken",
      "remoteUnlock",
      "restaurantName",
      "rhombusToken",
      "saveAllAlerts",
      "saveClips",
      "savedClipDurationMs",
      "secretKey",
      "sendChannelNotifications",
      "sendUserNotifications",
      "sensorToCamerasMap",
      "serverUrl",
      "targetState",
      "teamDriveId",
      "tenantId",
      "tokenToCamerasMap",
      "triggerNotification",
      "url",
      "userAccessToken",
      "userId",
      "username",
      "verificationPrompt",
      "webhookId",
      "webhookSecret",
      "webhookSignatureSecret",
      "webhookUrl",
      "webhookUuid"
    ],
    "POST /api/integrations/getOrgIntegrationsV2": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/getPdkDoors": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getPlaceOsDoors": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getToastServiceAreas": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/integrations/getWebhookIntegration": [
      "enabled",
      "enabledTimestampMs",
      "error",
      "errorMsg",
      "integration",
      "integrationAuditEvent",
      "orgUuid",
      "user",
      "userUuid"
    ],
    "POST /api/integrations/initiateDropboxOAuth": [
      "error",
      "errorMsg",
      "redirectUrl"
    ],
    "POST /api/integrations/initiateEnvoyOAuth": [
      "error",
      "errorMsg",
      "redirectUrl"
    ],
    "POST /api/integrations/initiateGoogleOAuth": [
      "error",
      "errorMsg",
      "redirectUrl"
    ],
    "POST /api/integrations/initiateMicrosoftTeamsOAuth": [
      "error",
      "errorMsg",
      "redirectUrl"
    ],
    "POST /api/integrations/initiateOffice365OAuth": [
      "error",
      "errorMsg",
      "redirectUrl"
    ],
    "POST /api/integrations/initiateSlackOAuth": [
      "error",
      "errorMsg",
      "redirectUrl"
    ],
    "POST /api/integrations/installMicrosoftTeamsBotForTeam": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/installMicrosoftTeamsBotForUser": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/migrateGoogleIntegration": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/refreshGoogleAccessToken": [
      "accessToken",
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/revokeApiToken": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/submitApiTokenApplication": [
      "error",
      "errorMsg",
      "validCSR"
    ],
    "POST /api/integrations/subscribeZapierWebhook": [
      "error",
      "errorMsg",
      "webhookId"
    ],
    "POST /api/integrations/togglePower": [
      "error",
      "errorMsg",
      "newState"
    ],
    "POST /api/integrations/uninstallMicrosoftTeamsBotForTeam": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/uninstallMicrosoftTeamsBotForUser": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/unlockBrivoDoor": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/unlockGeneaDoor": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/unlockKisiDoor": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/unlockOpenpathDoor": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/unlockOpentechAllianceDoor": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/unlockPdkDoor": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/unlockPlaceOsDoor": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/unsubscribeZapierWebhook": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateAmtIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateApiToken": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateAwsIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateBoxIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateBrivoIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateButterflymxIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateDeviceIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateDiceIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateDropboxIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateEmailIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateEnvoyIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateEnvoyIntegrationV2": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateGeneaIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateGoogleIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateGoogleIntegrationV2": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateGuest": [
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateGuestManagementIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateHaloIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateInformacastIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateIntuifaceIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateKisiIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateLumeoIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateMattermostIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateMicrosoftTeamsIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateMicrosoftTeamsIntegrationV2": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateNoonlightSettings": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateOffice365Integration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateOmnialertIntegration": [
      "error",
      "errorMsg",
      "webhookToken"
    ],
    "POST /api/integrations/updateOpenAIIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateOpenpathIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateOpentechAllianceIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updatePagerDutyIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updatePdkIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updatePlaceOsSettings": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateSaltoIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateSamlIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateServiceNowIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateSlackIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateSlackIntegrationV2": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateSquareIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateToastIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateWebhookIntegration": [
      "authError",
      "error",
      "errorMsg"
    ],
    "POST /api/integrations/updateWebhookIntegrationV2": [
      "error",
      "errorMsg",
      "webhookSecret"
    ],
    "POST /api/integrations/validateKisiApiKey": [
      "error",
      "errorMsg"
    ],
    "POST /api/internal/addPartnerAsSuperAdmin": [
      "error",
      "errorMsg",
      "superAdminGroupUuid"
    ],
    "POST /api/internal/createOrg": [
      "orgUuid"
    ],
    "POST /api/internal/createPartnerOrg": [
      "error",
      "errorMsg",
      "orgUuid"
    ],
    "POST /api/internal/createSupportAuthority": [
      "error",
      "errorMsg",
      "supportAuthorityUuid"
    ],
    "POST /api/internal/getSuperAdminGroupUUID": [
      "error",
      "errorMsg",
      "superAdminGroupUUID"
    ],
    "POST /api/internal/initiateShipment": [
      "trackingIdentifier"
    ],
    "POST /api/internal/listOrgs": [
      "accountBillingContactEmail",
      "accountOwnerEmail",
      "accountTechnicalContactEmail",
      "accountTechnicalContacts",
      "address1",
      "address2",
      "audioRecordingEnabled",
      "companyLogoUrl",
      "countryCode",
      "createdAtMillis",
      "criticalStatusEnabled",
      "deleted",
      "enabled",
      "inactivityTimeout",
      "itemizedInvoice",
      "maxAllowedSegmentMaxBytesMap",
      "mfaEnabled",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mode",
      "name",
      "newCameraFramerateMap",
      "newCameraResolutionMap",
      "newCameraSegmentMaxBytesMap",
      "newCameraVideoTargetQualityMap",
      "newCameraZeroMotionVideoQualityMap",
      "notifyForHardwareFailureTickets",
      "partnerAccessAllowedUntil",
      "postalCode",
      "salesforceAccountId",
      "shareAiTrainingMediaWithRhombus",
      "subscriptionEndDate",
      "subscriptionStatus",
      "subscriptionType",
      "supportAccessAllowedUntil",
      "text",
      "type",
      "uuid",
      "v3AuthNumDaysSkip2FAForTrustedDevices"
    ],
    "POST /api/invoice/charge": [
      "chargeSucceeded",
      "error",
      "errorMessage",
      "errorMsg",
      "previouslyInitialized"
    ],
    "POST /api/invoice/chargeV1": [
      "chargeSucceeded",
      "error",
      "errorMessage",
      "errorMsg",
      "previouslyInitialized"
    ],
    "POST /api/invoice/details": [
      "additionalEmails",
      "attachCsv",
      "cameraPurchaseCount",
      "cameraPurchasePrice",
      "clientOrgUuid",
      "cloudArchiveDays",
      "companyName",
      "count",
      "customerAddress",
      "customerEmail",
      "customerName",
      "date",
      "description",
      "domePurchaseCount",
      "domePurchasePrice",
      "dueDate",
      "error",
      "errorMsg",
      "externalId",
      "installationPrice",
      "license",
      "licenseCount",
      "licensePrice",
      "notes",
      "partnerOrgUuid",
      "perceptionTypes",
      "price",
      "r1CameraPurchaseCount",
      "r1CameraPurchasePrice",
      "r1LargeCameraPurchaseCount",
      "r1LargeCameraPurchasePrice",
      "salespersonName",
      "shippingPrice",
      "status",
      "tax",
      "uuid"
    ],
    "POST /api/invoice/detailsV1": [
      "billingContactEmail",
      "billingContactMailingCity",
      "billingContactMailingCountry",
      "billingContactMailingPostalCode",
      "billingContactMailingState",
      "billingContactMailingStreet",
      "billingContactName",
      "companyName",
      "description",
      "dueDate",
      "error",
      "errorMsg",
      "family",
      "grandTotal",
      "invoiceDate",
      "invoiceNumber",
      "name",
      "notes",
      "partnerBillingCity",
      "partnerBillingCountry",
      "partnerBillingPostalCode",
      "partnerBillingState",
      "partnerBillingStreet",
      "partnerName",
      "productCode",
      "quantity",
      "salespersonName",
      "shipping",
      "status",
      "subtotal",
      "tax",
      "unitPrice",
      "uuid"
    ],
    "POST /api/license/assignDeviceLicense": [
      "error",
      "success"
    ],
    "POST /api/license/assignLicense": [
      "error",
      "success"
    ],
    "POST /api/license/createACUDoorLicense": [
      "error",
      "errorMsg"
    ],
    "POST /api/license/createAlertMonitoringLicense": [
      "error",
      "errorMsg"
    ],
    "POST /api/license/createDeviceLicense": [
      "error",
      "errorMsg",
      "licenseUuid"
    ],
    "POST /api/license/createLicense": [
      "error",
      "errorMsg",
      "licenseUuid"
    ],
    "POST /api/license/deleteAlertMonitoringLicense": [
      "error",
      "errorMsg"
    ],
    "POST /api/license/deleteDeviceLicense": [
      "error",
      "errorMsg"
    ],
    "POST /api/license/deleteLicense": [
      "error",
      "errorMsg"
    ],
    "POST /api/license/getACUDoorLicenses": [
      "createdAtTimestampMs",
      "error",
      "errorMsg",
      "expiresAtTimestampMs",
      "orgUuid",
      "uuid"
    ],
    "POST /api/license/getAlertMonitoringLicenses": [
      "allowedDeviceCount",
      "deviceUuids",
      "error",
      "errorMsg",
      "locationUuid",
      "orgUuid"
    ],
    "POST /api/license/getDeviceLicenses": [
      "deviceType",
      "deviceUuid",
      "error",
      "errorMsg",
      "licenseType",
      "orgUuid",
      "trial",
      "uuid"
    ],
    "POST /api/license/getLicenses": [
      "additionalPerceptionFeatures",
      "cloudArchiveDays",
      "deviceType",
      "deviceUuid",
      "error",
      "errorMsg",
      "hidden",
      "license",
      "orgUuid",
      "perceptionTypes",
      "uuid"
    ],
    "POST /api/license/updateAlertMonitoringLicense": [
      "error",
      "errorMsg"
    ],
    "POST /api/location/createLocation": [
      "error",
      "errorMsg",
      "uuid"
    ],
    "POST /api/location/deleteLocation": [
      "error",
      "errorMsg"
    ],
    "POST /api/location/geoCode": [
      "error",
      "errorMsg",
      "latitude",
      "longitude"
    ],
    "POST /api/location/getLocations": [
      "address1",
      "address2",
      "addressLine2",
      "addressline1",
      "administrativeArea",
      "countryCode",
      "eastEdge",
      "error",
      "errorMsg",
      "floorLabel",
      "floorNumber",
      "imageUrl",
      "labels",
      "latitude",
      "locality",
      "longitude",
      "mediaUuid",
      "name",
      "northEdge",
      "policyUuid",
      "postalCode",
      "regionCode",
      "rotation",
      "southEdge",
      "tz",
      "uuid",
      "westEdge"
    ],
    "POST /api/location/getLocationsByGeo": [
      "address1",
      "address2",
      "addressLine2",
      "addressline1",
      "administrativeArea",
      "countryCode",
      "eastEdge",
      "floorLabel",
      "floorNumber",
      "imageUrl",
      "labels",
      "latitude",
      "locality",
      "longitude",
      "mediaUuid",
      "name",
      "northEdge",
      "policyUuid",
      "postalCode",
      "regionCode",
      "rotation",
      "southEdge",
      "tz",
      "uuid",
      "westEdge"
    ],
    "POST /api/location/selectiveUpdateLocation": [
      "error",
      "errorMsg"
    ],
    "POST /api/location/updateLocation": [
      "error",
      "errorMsg"
    ],
    "POST /api/location/validateLocation": [
      "addressComplete",
      "addressLine2",
      "addressline1",
      "administrativeArea",
      "error",
      "errorMsg",
      "locality",
      "locationUuid",
      "postalCode",
      "regionCode",
      "validatedAddressline1",
      "validatedAdminestrativeArea",
      "validatedLocality",
      "validatedPostalCode",
      "validatedRegionCode",
      "validatedSubpremise"
    ],
    "POST /api/logistics/getRMAs": [
      "address",
      "briefDescription",
      "costInDollars",
      "customerUnresponsive",
      "deleted",
      "deviceUuid",
      "error",
      "errorCode",
      "errorMsg",
      "failureDiagnostics",
      "finalNotes",
      "hardwareUuid",
      "inventoryNeeded",
      "isRefurbished",
      "orgUuid",
      "recipientName",
      "recipientPhoneNumber",
      "replacementCourier",
      "replacementHardwareUuid",
      "replacementTrackingNumber",
      "requesterEmailAddress",
      "returnTrackingNumber",
      "sdCardReplaced",
      "shipmentRequested",
      "shipmentRequestedUpdatedAtSec",
      "shipmentSent",
      "shipmentSentUpdatedAtSec",
      "skipAutoRegistration",
      "status",
      "storageCid",
      "timestampSec",
      "uuid",
      "zenDeskTicketSubject",
      "zendeskTicket"
    ],
    "POST /api/logistics/getShipments": [
      "ait-aitTrackingNumber",
      "ait-carrierTrackingNumber",
      "ait-destinationAddress",
      "ait-purchaseOrderNumber",
      "ait-shipmentDate",
      "error",
      "errorMsg",
      "lastStateUpdateSec",
      "partNumber",
      "quantityShipped",
      "rhombus-additionalEmails",
      "rhombus-customerEmails",
      "rhombus-customerName",
      "rhombus-orgUuid",
      "rhombus-partnerOrgUuid",
      "rhombus-purchaseOrderNumber",
      "rhombus-rmaReturnTrackingNumber",
      "rhombus-rmaUuid",
      "rhombus-rmaUuids",
      "rhombus-salesForceOpportunityId",
      "rhombus-zendeskTicketNumber",
      "serialNumber",
      "shipmentCategory",
      "shipmentState",
      "uuid"
    ],
    "POST /api/maps/generateMapUrl": [
      "signedUrl"
    ],
    "POST /api/metric/logEvents": [
      "error",
      "errorMsg"
    ],
    "POST /api/metric/reportError": [
      "error",
      "errorMsg"
    ],
    "POST /api/mobile/loginToOrg": [
      "type"
    ],
    "POST /api/mobile/loginVerifiedSupportAuthority": [
      "supportAuthoritySessionUuid",
      "valid"
    ],
    "POST /api/occupancy/getMinimalOccupancySensorStateList": [
      "associatedCameras",
      "batteryPercent",
      "error",
      "errorMsg",
      "firmwareVersion",
      "floorNumber",
      "health",
      "healthDetails",
      "hwVariation",
      "lastSeenSec",
      "latitude",
      "locationUuid",
      "longitude",
      "name",
      "normalizedLux",
      "policyUuid",
      "rawLux",
      "sensorUuid",
      "serialNumber",
      "signalStrength",
      "status"
    ],
    "POST /api/occupancy/getOccupancyEventsForSensor": [
      "baseStationUuid",
      "batteryPercentage",
      "bleDeviceUuid",
      "bleRssi",
      "closeBaseStations",
      "error",
      "errorMsg",
      "locationUuid",
      "lux",
      "orgUuid",
      "state",
      "stateChanged",
      "tampered",
      "timestampMs"
    ],
    "POST /api/occupancy/getOccupancyPresenceWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/occupancy/updateDetails": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/claimActivationToken": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/claimShipmentRegistrationToken": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/createPendingRegistration": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/deleteCloudArchivingConfig": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/findAllHardwareWithPendingRegistration": [
      "deviceUuid",
      "enforcedMinFirmwareVersion",
      "firmwareUpdateTimeMs",
      "firmwareVersion",
      "hwUuid",
      "hwVariation",
      "licenseType",
      "locationUuid",
      "mac",
      "manufacturedAtMillis",
      "name",
      "orgUuid",
      "pendingRegistrationDeviceUuid",
      "pendingRegistrationOrgUuid",
      "pendingRegistrationToken",
      "policyUuid",
      "sdSize",
      "serialNumber",
      "type",
      "uuid"
    ],
    "POST /api/org/findHardwareAvailableForPendingRegistration": [
      "deviceUuid",
      "enforcedMinFirmwareVersion",
      "firmwareUpdateTimeMs",
      "firmwareVersion",
      "hwVariation",
      "mac",
      "manufacturedAtMillis",
      "orgUuid",
      "pendingRegistrationDeviceUuid",
      "pendingRegistrationOrgUuid",
      "pendingRegistrationToken",
      "sdSize",
      "serialNumber",
      "type",
      "uuid"
    ],
    "POST /api/org/findIfTeamNameAvailable": [
      "available"
    ],
    "POST /api/org/findSCIMSettingsForOrg": [
      "addUsersOnRoleMismatch",
      "bypassSaml",
      "createdAtMillis",
      "maxMobileCredsAllowed",
      "orgUuid",
      "remoteUnlockEnabled",
      "rhombusKeyAccessEnabled",
      "sendWelcomeEmailToNewRhombusKeyUsers",
      "sendWelcomeEmailToNewUsers",
      "type",
      "updatedAtMillis"
    ],
    "POST /api/org/generateFederatedSessionToken": [
      "federatedSessionToken"
    ],
    "POST /api/org/getAwsIntCloudformationFile": [
      "fileBase64"
    ],
    "POST /api/org/getCloudArchivingConfigs": [
      "error",
      "errorMsg",
      "orgUuid",
      "scope",
      "targetUuid",
      "uploadScheduleInverted",
      "uploadScheduleUuid",
      "uploadStrategy"
    ],
    "POST /api/org/getDeviceFlags": [
      "error",
      "errorMsg",
      "flags"
    ],
    "POST /api/org/getFeatures": [
      "behaviorDetection",
      "cloudArchiving",
      "engagementCounting",
      "error",
      "errorMsg",
      "faceCounting",
      "faceCountingNonUnique",
      "faceRecognition",
      "licensePlateRecognition",
      "peopleCounting",
      "ppeDetection",
      "rulesEngine",
      "vehicleCounting"
    ],
    "POST /api/org/getLocationFlags": [
      "error",
      "errorMsg",
      "flagsMap"
    ],
    "POST /api/org/getOrg": [
      "accountOwnerEmail",
      "addUsersOnRoleMismatch",
      "address1",
      "address2",
      "countryCode",
      "createdAtMillis",
      "enabled",
      "error",
      "errorMsg",
      "featureFlags",
      "idpMetaDataXml",
      "itemizedInvoice",
      "justInTimeAccountProvisioningEnabled",
      "mfaEnabled",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mode",
      "name",
      "newCameraFramerateMap",
      "newCameraResolutionMap",
      "newCameraSegmentMaxBytesMap",
      "newCameraVideoTargetQualityMap",
      "orgUuid",
      "partnerAccessAllowedUntil",
      "planType",
      "postalCode",
      "slackChannel",
      "slackEnabled",
      "slackWebhookUrl",
      "subscriptionEndDate",
      "subscriptionStatus",
      "subscriptionType",
      "supportAccessAllowedUntil",
      "teamName",
      "text",
      "type",
      "uuid"
    ],
    "POST /api/org/getOrgIntegrations": [
      "acceptedTermsOfService",
      "accessKey",
      "accessToken",
      "accountEmail",
      "accountName",
      "accountUser",
      "actionGroupId",
      "alertAgression",
      "alertCO",
      "alertCO2",
      "alertGunshot",
      "alertHelp",
      "alertMasking",
      "alertTHC",
      "alertTamper",
      "alertTemp",
      "alertUnauthorizedFaces",
      "alertVOC",
      "alertVape",
      "allLocationIntegrationKeys",
      "apiKey",
      "apiSecret",
      "apiSecretKey",
      "apiToken",
      "apiUrl",
      "applicationKey",
      "applicationKeyId",
      "assignedCameraList",
      "bucketName",
      "buildingId",
      "buildingWebhookIdMap",
      "cameraToSwitchMap",
      "channel",
      "channelId",
      "channelName",
      "clientId",
      "clientSecret",
      "code",
      "createSeekPoints",
      "currentToastRestaurantGuid",
      "defaultAlertFolderId",
      "defaultAlertFolderName",
      "defaultDelayByLocationsMap",
      "defaultFolderId",
      "defaultFolderName",
      "defaultPromptByLocationsMap",
      "description",
      "deviceList",
      "doorName",
      "doorToCameraMap",
      "driveId",
      "email",
      "emailAddresses",
      "enabled",
      "enabledTimestampMs",
      "enablingUser",
      "enablingUserUuid",
      "enterpriseId",
      "envoyIntegrationInstalled",
      "error",
      "errorMsg",
      "escalationDelayMinutes",
      "eventToWebhookIdMap",
      "experienceIds",
      "experienceNames",
      "folderId",
      "identifyFacesFromBadge",
      "indexFaces",
      "instanceUrl",
      "integrationKey",
      "locationEntryInstructionsMap",
      "locationIdToDeviceUuidsMap",
      "locationName",
      "locationToIntegrationKeysMap",
      "message",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "name",
      "orgAccessToken",
      "orgId",
      "orgUuid",
      "ouId",
      "panelName",
      "parameter1",
      "parameter2",
      "parameter3",
      "password",
      "phoneNumber",
      "phoneNumbers",
      "pin",
      "placeId",
      "playerDeviceNames",
      "playerIds",
      "playerTags",
      "posName",
      "promptTheme",
      "refreshToken",
      "remoteUnlock",
      "restaurantName",
      "rhombusToken",
      "saveAllAlerts",
      "saveClips",
      "savedClipDurationMs",
      "secretKey",
      "sendChannelNotifications",
      "sendUserNotifications",
      "sensorToCamerasMap",
      "serverUrl",
      "targetState",
      "teamDriveId",
      "tenantId",
      "tokenToCamerasMap",
      "triggerNotification",
      "url",
      "userAccessToken",
      "userId",
      "username",
      "verificationPrompt",
      "webhookId",
      "webhookSecret",
      "webhookSignatureSecret",
      "webhookUrl",
      "webhookUuid"
    ],
    "POST /api/org/getOrgNotificationTemplate": [
      "activityTriggerMap",
      "deviceFilterSet",
      "diagnosticTriggerMap",
      "error",
      "errorMsg",
      "locationFilterSet",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "orgUuid",
      "smsPhoneNumbers",
      "summaryEmailEnabled",
      "userUuid"
    ],
    "POST /api/org/getOrgV2": [
      "accountBillingContactEmail",
      "accountOwnerEmail",
      "accountTechnicalContactEmail",
      "accountTechnicalContacts",
      "address1",
      "address2",
      "audioRecordingEnabled",
      "companyLogoUrl",
      "countryCode",
      "createdAtMillis",
      "criticalStatusEnabled",
      "deleted",
      "enabled",
      "error",
      "errorMsg",
      "featureFlags",
      "height",
      "inactivityTimeout",
      "itemizedInvoice",
      "max",
      "maxAllowedSegmentMaxBytesMap",
      "maxZoomPercent",
      "mfaEnabled",
      "min",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mode",
      "name",
      "newCameraFramerateMap",
      "newCameraResolutionMap",
      "newCameraSegmentMaxBytesMap",
      "newCameraVideoTargetQualityMap",
      "newCameraZeroMotionVideoQualityMap",
      "notifyForHardwareFailureTickets",
      "partnerAccessAllowedUntil",
      "postalCode",
      "salesforceAccountId",
      "segmentMaxBytes",
      "sensorGainMax",
      "shareAiTrainingMediaWithRhombus",
      "shutterTimeMin",
      "subscriptionEndDate",
      "subscriptionStatus",
      "subscriptionType",
      "supportAccessAllowedUntil",
      "text",
      "type",
      "uuid",
      "v3AuthNumDaysSkip2FAForTrustedDevices",
      "width"
    ],
    "POST /api/org/getSAMLSettings": [
      "addUsersOnRoleMismatch",
      "bypassSaml",
      "enabled",
      "enabledForRhombusKey",
      "error",
      "errorMsg",
      "idpMetaDataXml",
      "justInTimeAccountProvisioningEnabled",
      "maxMobileCredsAllowed",
      "orgUuid",
      "registrationUuid",
      "remoteUnlockEnabled",
      "rhombusKeyAccessEnabled",
      "teamName",
      "type"
    ],
    "POST /api/org/getSAMLSettingsV2": [
      "addUsersOnRoleMismatch",
      "bypassSaml",
      "enabled",
      "enabledForRhombusKey",
      "error",
      "errorMsg",
      "idpMetaDataXml",
      "justInTimeAccountProvisioningEnabled",
      "maxMobileCredsAllowed",
      "orgUuid",
      "registrationUuid",
      "remoteUnlockEnabled",
      "rhombusKeyAccessEnabled",
      "teamName",
      "type"
    ],
    "POST /api/org/getScimDisplayInfo": [
      "azureScimEndpointUrl",
      "scimEndpointUrl"
    ],
    "POST /api/org/getTemporaryOrgToken": [
      "tempOrgToken"
    ],
    "POST /api/org/peekShipmentRegistrationToken": [
      "error",
      "errorMsg",
      "hardwareUuidList"
    ],
    "POST /api/org/setFlag": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/setupSCIMAccessForOrg": [
      "scimAccessAlreadySetupFailure",
      "token"
    ],
    "POST /api/org/updateAiTrainingSettings": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updateCloudArchivingConfig": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updateFirmwareSettings": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updateGeneralSettings": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updateMFASettings": [
      "accountBillingContactEmail",
      "accountOwnerEmail",
      "accountTechnicalContactEmail",
      "accountTechnicalContacts",
      "address1",
      "address2",
      "audioRecordingEnabled",
      "companyLogoUrl",
      "countryCode",
      "createdAtMillis",
      "criticalStatusEnabled",
      "deleted",
      "enabled",
      "error",
      "errorMsg",
      "inactivityTimeout",
      "itemizedInvoice",
      "maxAllowedSegmentMaxBytesMap",
      "mfaEnabled",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mode",
      "name",
      "newCameraFramerateMap",
      "newCameraResolutionMap",
      "newCameraSegmentMaxBytesMap",
      "newCameraVideoTargetQualityMap",
      "newCameraZeroMotionVideoQualityMap",
      "notifyForHardwareFailureTickets",
      "partnerAccessAllowedUntil",
      "postalCode",
      "salesforceAccountId",
      "shareAiTrainingMediaWithRhombus",
      "subscriptionEndDate",
      "subscriptionStatus",
      "subscriptionType",
      "supportAccessAllowedUntil",
      "text",
      "type",
      "uuid",
      "v3AuthNumDaysSkip2FAForTrustedDevices"
    ],
    "POST /api/org/updateOrg": [
      "samlEntityIdUniquenessConstraintFailure",
      "teamNameNotAssignedFailure",
      "teamNameUniquenessConstraintFailure"
    ],
    "POST /api/org/updateOrgAudioRecordingPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updateOrgIntegrations": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updateOrgNotificationTemplate": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updatePendingRegistration": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updateSAMLSettings": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updateSAMLSettingsV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/org/updateSCIMSettingsForOrg": [
      "error",
      "errorMsg"
    ],
    "POST /api/partner/createPartnerClient": [
      "clientOrgUuid",
      "error",
      "errorMsg",
      "responseStatus"
    ],
    "POST /api/partner/customizeClient": [
      "error",
      "errorMsg",
      "forceLowBandwidthOnAllCameras",
      "inactivityTimeout"
    ],
    "POST /api/partner/customizeClientDevice": [
      "error",
      "errorMsg",
      "forceLowBandwidthOnAllCameras",
      "inactivityTimeout"
    ],
    "POST /api/partner/getApiTokenApplications": [
      "authType",
      "authenticationTokenHash",
      "clientDetails",
      "clientType",
      "csr",
      "displayName",
      "error",
      "errorMsg",
      "orgUuid",
      "permissionGroupUuid",
      "tokenUuid"
    ],
    "POST /api/partner/getApiTokens": [
      "authType",
      "authenticationTokenHash",
      "cert",
      "certFingerprint",
      "clientDetails",
      "clientType",
      "csr",
      "displayName",
      "error",
      "errorMsg",
      "orgUuid",
      "permissionGroupUuid",
      "tokenUuid"
    ],
    "POST /api/partner/getClientDevices": [
      "createdAtMillis",
      "customData",
      "deleted",
      "description",
      "hardwareId",
      "hwVariation",
      "mummified",
      "name",
      "orgUuid",
      "partnerControlledHardware",
      "pending",
      "policyUuid",
      "reassignable",
      "serialNumber",
      "type",
      "uuid"
    ],
    "POST /api/partner/getClientRhombusOrgUsersForPartnerActivationTokenV2": [
      "type"
    ],
    "POST /api/partner/getClientStatusMap": [
      "connectedCount",
      "error",
      "errorMsg",
      "operationalCount",
      "totalCount"
    ],
    "POST /api/partner/getClientSummaryInfo": [
      "accessibleRhombusApps",
      "accountOwner",
      "bypassSaml",
      "changePasswordOnLogin",
      "connectedCount",
      "createdAtMillis",
      "deleted",
      "email",
      "emailCaseSensitive",
      "emailVerified",
      "error",
      "errorMsg",
      "firstName",
      "lastName",
      "locationCount",
      "mfaEnabled",
      "mfaTokenType",
      "name",
      "operationalCount",
      "orgUserCustomizationFlags",
      "orgUuid",
      "passwordSet",
      "recentPolicyAlertCount",
      "rhombusUserUuid",
      "status",
      "totalCount",
      "updatedAtMillis",
      "uuid"
    ],
    "POST /api/partner/getClients": [
      "authorityUuid",
      "clientAccessAllowed",
      "clientAccountAccessUrl",
      "clientOrgName",
      "clientOrgUuid",
      "createdAtMillis",
      "error",
      "errorMsg",
      "totalAudioGateways",
      "totalBadgeReaders",
      "totalCameras",
      "totalClimateSensors",
      "totalDoorSensors",
      "totalLocations",
      "totalOccupancySensors",
      "totalProximitySensors"
    ],
    "POST /api/partner/getClientsV2": [
      "authorityUuid",
      "clientAccessAllowed",
      "clientAccountAccessUrl",
      "clientOrgName",
      "clientOrgUuid",
      "createdAtMillis",
      "error",
      "errorMsg",
      "totalAudioGateways",
      "totalBadgeReaders",
      "totalCameras",
      "totalClimateSensors",
      "totalDoorSensors",
      "totalLocations",
      "totalOccupancySensors",
      "totalProximitySensors"
    ],
    "POST /api/partner/getDeviceLicensesForOrg": [
      "deviceType",
      "deviceUuid",
      "error",
      "errorMsg",
      "licenseType",
      "orgUuid",
      "trial",
      "uuid"
    ],
    "POST /api/partner/getLicensesForOrg": [
      "additionalPerceptionFeatures",
      "cloudArchiveDays",
      "deviceType",
      "deviceUuid",
      "error",
      "errorMsg",
      "hidden",
      "license",
      "orgUuid",
      "perceptionTypes",
      "uuid"
    ],
    "POST /api/partner/getListOfAllClientDevices": [
      "createdAtMillis",
      "customData",
      "deleted",
      "description",
      "hardwareId",
      "hwVariation",
      "mummified",
      "name",
      "orgUuid",
      "pending",
      "policyUuid",
      "serialNumber",
      "type",
      "uuid"
    ],
    "POST /api/partner/getListOfAvailableHardware": [
      "deviceModel",
      "deviceType",
      "macAddress",
      "serialNumber"
    ],
    "POST /api/partner/getPartnerClientMobileAccountAccess": [
      "clientAccountAccessSessionId"
    ],
    "POST /api/partner/getShipments": [
      "ait-aitTrackingNumber",
      "ait-carrierTrackingNumber",
      "ait-destinationAddress",
      "ait-purchaseOrderNumber",
      "ait-shipmentDate",
      "error",
      "errorMsg",
      "lastStateUpdateSec",
      "partNumber",
      "quantityShipped",
      "rhombus-additionalEmails",
      "rhombus-customerEmails",
      "rhombus-customerName",
      "rhombus-orgUuid",
      "rhombus-partnerOrgUuid",
      "rhombus-purchaseOrderNumber",
      "rhombus-rmaReturnTrackingNumber",
      "rhombus-rmaUuid",
      "rhombus-rmaUuids",
      "rhombus-salesForceOpportunityId",
      "rhombus-zendeskTicketNumber",
      "serialNumber",
      "shipmentCategory",
      "shipmentState",
      "uuid"
    ],
    "POST /api/partner/grantSupportAccessToClient": [
      "errMessage",
      "error",
      "errorMsg"
    ],
    "POST /api/partner/reassignDeviceOrg": [
      "message",
      "status"
    ],
    "POST /api/partner/registerCameraToClient": [
      "error",
      "errorMsg"
    ],
    "POST /api/partner/registerDeal": [
      "authorityUuid",
      "clientAccessAllowed",
      "clientAccountAccessUrl",
      "clientOrgName",
      "clientOrgUuid",
      "createdAtMillis",
      "error",
      "errorMsg",
      "totalAudioGateways",
      "totalBadgeReaders",
      "totalCameras",
      "totalClimateSensors",
      "totalDoorSensors",
      "totalLocations",
      "totalOccupancySensors",
      "totalProximitySensors"
    ],
    "POST /api/partner/requestAccessToClientAccount": [
      "success"
    ],
    "POST /api/partner/requestAccessToClientAccountV2": [
      "success"
    ],
    "POST /api/partner/revokeApiToken": [
      "error",
      "errorMsg"
    ],
    "POST /api/partner/submitApiTokenApplication": [
      "error",
      "errorMsg",
      "validCSR"
    ],
    "POST /api/partner/submitSupportAccessDecisionForPartnerActivationTokenV2": [
      "type"
    ],
    "POST /api/partner/updateApiToken": [
      "error",
      "errorMsg"
    ],
    "POST /api/password/forgot": [
      "error",
      "errorMsg",
      "failureReason",
      "success"
    ],
    "POST /api/password/reset": [
      "error",
      "errorMsg",
      "failureReason",
      "failureReasonType",
      "success"
    ],
    "POST /api/password/user/signup": [
      "error",
      "errorMsg",
      "failureReason",
      "success"
    ],
    "POST /api/permission/assignPermission": [
      "error",
      "errorMsg"
    ],
    "POST /api/permission/createPartnerPermissionGroup": [
      "error",
      "errorMsg",
      "uuid"
    ],
    "POST /api/permission/createPermissionGroup": [
      "error",
      "errorMsg",
      "uuid"
    ],
    "POST /api/permission/deletePartnerPermissionGroup": [
      "error",
      "errorMsg"
    ],
    "POST /api/permission/deletePermissionGroup": [
      "error",
      "errorMsg"
    ],
    "POST /api/permission/getPartnerPermissionGroups": [
      "accessControlLocationAccessMap",
      "accessibleLocations",
      "assignablePermissionGroups",
      "clientAssignablePermissionGroupsMap",
      "clientFunctionalityList",
      "clientPermissionMap",
      "defaultAccessControlPermissionForNewLocations",
      "defaultPermissionForNewLocations",
      "description",
      "deviceAccessMap",
      "error",
      "errorMsg",
      "functionalityList",
      "groupMembership",
      "inLine",
      "installer",
      "locationAccessMap",
      "mutable",
      "name",
      "orgUuid",
      "storedInS3",
      "superAdmin",
      "userPermissionGroupAccessMap",
      "uuid"
    ],
    "POST /api/permission/getPermissionGroups": [
      "accessControlLocationAccessMap",
      "accessibleLocations",
      "assignablePermissionGroups",
      "defaultAccessControlPermissionForNewLocations",
      "defaultPermissionForNewLocations",
      "description",
      "deviceAccessMap",
      "error",
      "errorMsg",
      "functionalityList",
      "groupMembership",
      "inLine",
      "installer",
      "locationAccessMap",
      "mutable",
      "name",
      "orgUuid",
      "partnerMembership",
      "storedInS3",
      "superAdmin",
      "userPermissionGroupAccessMap",
      "uuid"
    ],
    "POST /api/permission/getPermissionGroupsForOrg": [
      "accessControlLocationAccessMap",
      "accessibleLocations",
      "assignablePermissionGroups",
      "defaultAccessControlPermissionForNewLocations",
      "defaultPermissionForNewLocations",
      "description",
      "deviceAccessMap",
      "error",
      "errorMsg",
      "functionalityList",
      "inLine",
      "installer",
      "locationAccessMap",
      "mutable",
      "name",
      "orgUuid",
      "storedInS3",
      "superAdmin",
      "userPermissionGroupAccessMap",
      "uuid"
    ],
    "POST /api/permission/getPermissionsForCurrentPartner": [
      "assignablePermissionGroups",
      "clientFunctionalityList",
      "clientPermissionMap",
      "error",
      "errorMsg",
      "functionalityList",
      "permissionGroupName",
      "superAdmin"
    ],
    "POST /api/permission/getPermissionsForCurrentUser": [
      "accessControlLocationAccessMap",
      "accessMap",
      "assignablePermissionGroups",
      "deviceAccessMap",
      "error",
      "errorMsg",
      "functionalityList",
      "installer",
      "locationAccessMap",
      "permissionGroupName",
      "superAdmin"
    ],
    "POST /api/permission/updatePartnerPermissionGroup": [
      "error",
      "errorMsg"
    ],
    "POST /api/permission/updatePermissionGroup": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/createAccessControlledDoorPolicy": [
      "error",
      "errorMsg",
      "policyUuid"
    ],
    "POST /api/policy/createAudioPolicy": [
      "error",
      "errorMsg",
      "policyUuid"
    ],
    "POST /api/policy/createCameraPolicy": [
      "error",
      "errorMsg",
      "policyUuid"
    ],
    "POST /api/policy/createClimatePolicy": [
      "error",
      "errorMsg",
      "policyUuid"
    ],
    "POST /api/policy/createDoorPolicy": [
      "error",
      "errorMsg",
      "policyUuid"
    ],
    "POST /api/policy/createOccupancyPolicy": [
      "error",
      "errorMsg",
      "policyUuid"
    ],
    "POST /api/policy/createPolicyAddendumForLocation": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/createPolicyAddendumsForDevices": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/createProximityPolicy": [
      "error",
      "errorMsg",
      "policyUuid"
    ],
    "POST /api/policy/createSchedule": [
      "error",
      "errorMsg",
      "scheduleUuid"
    ],
    "POST /api/policy/deleteAccessControlledDoorPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deleteAudioPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deleteCameraPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deleteClimatePolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deleteDevicePolicyAddendums": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deleteDoorPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deleteLocationPolicyAddendum": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deleteOccupancyPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deletePolicyPauseSettingForDevice": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deletePolicyPauseSettingForLocation": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deleteProximityPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/deleteSchedule": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/findSchedules": [
      "error",
      "errorMsg",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "uuid"
    ],
    "POST /api/policy/getAccessControlledDoorPolicies": [
      "description",
      "error",
      "errorMsg",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "triggerSet",
      "uuid"
    ],
    "POST /api/policy/getAudioPolicies": [
      "activity",
      "description",
      "error",
      "errorMsg",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "threshold",
      "uuid"
    ],
    "POST /api/policy/getCameraPolicies": [
      "activity",
      "description",
      "error",
      "errorMsg",
      "faceAlertLabelSet",
      "faceAlertUnidentified",
      "faceAllowedLabelSet",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "threshold",
      "uuid",
      "vehicleAlertLabelSet",
      "vehicleAlertUnidentified",
      "vehicleAllowedLabelSet"
    ],
    "POST /api/policy/getClimatePolicies": [
      "activity",
      "description",
      "error",
      "errorMsg",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "threshold",
      "uuid"
    ],
    "POST /api/policy/getDoorPolicies": [
      "ajarThresholdSec",
      "defaultAjarThresholdSec",
      "defaultTriggers",
      "description",
      "error",
      "errorMsg",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "triggerSet",
      "uuid"
    ],
    "POST /api/policy/getOccupancyPolicies": [
      "description",
      "error",
      "errorMsg",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "occupancyThresholdSec",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "triggerSet",
      "uuid",
      "vacancyThresholdSec"
    ],
    "POST /api/policy/getPoliciesUsingSchedule": [
      "activity",
      "ajarThresholdSec",
      "defaultAjarThresholdSec",
      "defaultDepartureThresholdSec",
      "defaultTriggers",
      "departureThresholdSec",
      "description",
      "egressThresholdMetersMap",
      "error",
      "errorMsg",
      "faceAlertLabelSet",
      "faceAlertUnidentified",
      "faceAllowedLabelSet",
      "ingressThresholdMetersMap",
      "locationUuids",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "occupancyThresholdSec",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "threshold",
      "triggerSet",
      "uuid",
      "vacancyThresholdSec",
      "vehicleAlertLabelSet",
      "vehicleAlertUnidentified",
      "vehicleAllowedLabelSet"
    ],
    "POST /api/policy/getPolicyAddendums": [
      "durationSecs",
      "error",
      "errorMsg",
      "timestampSec",
      "uuid"
    ],
    "POST /api/policy/getPolicyPauseSettings": [
      "durationSecs",
      "error",
      "errorMsg",
      "timestampSec",
      "uuid"
    ],
    "POST /api/policy/getProximityPolicies": [
      "activity",
      "defaultDepartureThresholdSec",
      "departureThresholdSec",
      "description",
      "egressThresholdMetersMap",
      "error",
      "errorMsg",
      "ingressThresholdMetersMap",
      "locationUuids",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "uuid"
    ],
    "POST /api/policy/pauseAlertPolicyForDevice": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/pauseAlertPolicyForLocation": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/updateAccessControlledDoorPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/updateAudioPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/updateCameraPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/updateClimatePolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/updateDoorPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/updateOccupancyPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/updateProximityPolicy": [
      "error",
      "errorMsg"
    ],
    "POST /api/policy/updateSchedule": [
      "error",
      "errorMsg"
    ],
    "POST /api/proximity/getLocomotionEventsForTag": [
      "baseStationUuid",
      "error",
      "errorMsg",
      "floor",
      "lat",
      "locationUuid",
      "lon",
      "majorAxis",
      "minorAxis",
      "movement",
      "orgUuid",
      "rotation",
      "tagUuid",
      "timestampMs"
    ],
    "POST /api/proximity/getMinimalProximityStateList": [
      "batteryPercent",
      "createdAtMillis",
      "error",
      "errorMsg",
      "firmwareVersion",
      "floor",
      "health",
      "healthDetails",
      "hwVariation",
      "imageUrl",
      "lastSeenSec",
      "lat",
      "locationUuid",
      "lon",
      "majorAxis",
      "minorAxis",
      "name",
      "policyUuid",
      "rotation",
      "serialNumber",
      "signalStrength",
      "status",
      "tagUuid"
    ],
    "POST /api/proximity/getProximityEventsForTag": [
      "baseStationUuid",
      "batteryPercentage",
      "bleDeviceUuid",
      "bleRssi",
      "closeBaseStations",
      "endTimeMs",
      "error",
      "errorMsg",
      "floor",
      "lat",
      "locationUuid",
      "lon",
      "majorAxis",
      "minorAxis",
      "orgUuid",
      "rotation",
      "startTimeMs",
      "status"
    ],
    "POST /api/proximity/updateDetails": [
      "error",
      "errorMsg"
    ],
    "POST /api/report/getAuditFeed": [
      "FOOBAR",
      "action",
      "asi",
      "clientType",
      "displayText",
      "error",
      "errorMsg",
      "failure",
      "orgUuid",
      "principalName",
      "principalType",
      "principalUuid",
      "sourceCity",
      "sourceCountry",
      "sourceIp",
      "sourceState",
      "targetName",
      "targetUuid",
      "timestamp",
      "userAgent",
      "uuid"
    ],
    "POST /api/report/getAverageReport": [
      "average",
      "error",
      "errorMsg",
      "groupAverageMap"
    ],
    "POST /api/report/getAverageReports": [
      "averageMap",
      "error",
      "errorMsg",
      "groupAverageMap"
    ],
    "POST /api/report/getCountReport": [
      "dateLocal",
      "dateUtc",
      "error",
      "errorMsg",
      "eventCountMap"
    ],
    "POST /api/report/getCountReportV2": [
      "dateLocal",
      "dateUtc",
      "error",
      "errorMsg",
      "eventCountMap"
    ],
    "POST /api/report/getCountReports": [
      "dateLocal",
      "dateUtc",
      "error",
      "errorMsg",
      "eventCountMap"
    ],
    "POST /api/report/getDiagnosticFeed": [
      "activity",
      "apMac",
      "asi",
      "connectionUuid",
      "defaultInterface",
      "defaultInterfaceMac",
      "deviceName",
      "deviceType",
      "deviceUuid",
      "error",
      "errorMsg",
      "firmwareVersion",
      "orgUuid",
      "reportingDeviceUuid",
      "rssi",
      "ssid",
      "timestamp",
      "uuid",
      "wifiSignalStrength"
    ],
    "POST /api/report/getEnvoyDeliveries": [
      "email",
      "error",
      "errorMsg",
      "id",
      "locationId",
      "locationIds",
      "locations",
      "name",
      "pickedUpAt",
      "receivedTimestampMs",
      "status",
      "type"
    ],
    "POST /api/report/getEnvoyEmployees": [
      "email",
      "error",
      "errorMsg",
      "id",
      "locationIds",
      "locations",
      "name",
      "type"
    ],
    "POST /api/report/getEnvoyLocations": [
      "authError",
      "error",
      "errorMsg",
      "id",
      "name"
    ],
    "POST /api/report/getEnvoyVisitors": [
      "agreementsStatus",
      "email",
      "error",
      "errorMsg",
      "expectedArrivalAt",
      "expectedArrivalTimestampMs",
      "fullName",
      "id",
      "locationId",
      "locationIds",
      "locations",
      "name",
      "notes",
      "signedInAt",
      "signedInTimestampMs",
      "signedOutAt",
      "signedOutTimestampMs",
      "type"
    ],
    "POST /api/report/getFacesByDevice": [
      "alternativeFaceIds",
      "detectionType",
      "deviceLabels",
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "faceId",
      "faceName",
      "imageS3Key",
      "indexed",
      "locationLabels",
      "locationUuid",
      "orgUuid",
      "pitch",
      "roll",
      "thumbnailS3Key",
      "uuid",
      "yaw"
    ],
    "POST /api/report/getFacesByLocation": [
      "alternativeFaceIds",
      "detectionType",
      "deviceLabels",
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "faceId",
      "faceName",
      "imageS3Key",
      "indexed",
      "locationLabels",
      "locationUuid",
      "orgUuid",
      "pitch",
      "roll",
      "thumbnailS3Key",
      "uuid",
      "yaw"
    ],
    "POST /api/report/getLicensePlatesByDevice": [
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "imageS3Key",
      "locationUuid",
      "matchingLicensePlates",
      "name",
      "orgUuid",
      "partialLicensePlates",
      "thumbnailS3Key",
      "uuid",
      "vehicleLicensePlate"
    ],
    "POST /api/report/getMostRecentPeopleCountEvents": [
      "bottom",
      "deviceLabels",
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "imageS3Key",
      "left",
      "locationLabels",
      "locationUuid",
      "orgUuid",
      "peopleCount",
      "right",
      "top",
      "uuid"
    ],
    "POST /api/report/getProximityTagLocationsByDate": [
      "dateLocal",
      "error",
      "errorMsg",
      "tagUuid",
      "uuid"
    ],
    "POST /api/report/getRunningAverage": [
      "avg",
      "date",
      "error",
      "errorMsg",
      "stddev"
    ],
    "POST /api/report/getSummaryCountReport": [
      "count",
      "dateLocal",
      "dateUtc",
      "error",
      "errorMsg",
      "uuid"
    ],
    "POST /api/report/getThresholdCrossingCounts": [
      "count",
      "error",
      "errorMsg",
      "timestampMs"
    ],
    "POST /api/report/getThresholdCrossingEvents": [
      "crossingObject",
      "direction",
      "error",
      "errorMsg",
      "timestampMs"
    ],
    "POST /api/report/getToastEventsTable": [
      "assignedCameraList",
      "authError",
      "employeeName",
      "error",
      "errorMsg",
      "orderGuid",
      "paymentType",
      "restaurantName",
      "revenueCenterName",
      "serviceAreaName",
      "timestamp",
      "tipAmount",
      "totalAmount",
      "totalDiscountAmount",
      "voided"
    ],
    "POST /api/report/resetRunningAverage": [
      "error",
      "errorMsg"
    ],
    "POST /api/rules/createRule": [
      "error",
      "errorMsg",
      "ruleUuid"
    ],
    "POST /api/rules/deleteRule": [
      "error",
      "errorMsg"
    ],
    "POST /api/rules/deleteRulePauseSetting": [
      "error",
      "errorMsg"
    ],
    "POST /api/rules/getRulePauseSettings": [
      "durationSecs",
      "error",
      "errorMsg",
      "timestampSec",
      "uuid"
    ],
    "POST /api/rules/getRulesFiltered": [
      "alertAction",
      "audioClipUuid",
      "audioGateways",
      "componentUuid",
      "conjunction",
      "doorId",
      "error",
      "errorMsg",
      "integration",
      "liveNotificationAction",
      "locationLockdownPlanUuid",
      "locationUuid",
      "name",
      "notificationTarget",
      "orgUuid",
      "overrideRelayDurationSec",
      "ownerDeviceUuid",
      "placeId",
      "ruleType",
      "scheduleUuids",
      "subject",
      "subjectCustomizable",
      "system",
      "triggerBackoffSecs",
      "type",
      "uuid",
      "webhookUrl"
    ],
    "POST /api/rules/getRulesForOrg": [
      "alertAction",
      "audioClipUuid",
      "audioGateways",
      "componentUuid",
      "conjunction",
      "doorId",
      "error",
      "errorMsg",
      "integration",
      "liveNotificationAction",
      "locationLockdownPlanUuid",
      "locationUuid",
      "name",
      "notificationTarget",
      "orgUuid",
      "overrideRelayDurationSec",
      "ownerDeviceUuid",
      "placeId",
      "ruleType",
      "scheduleUuids",
      "subject",
      "subjectCustomizable",
      "system",
      "triggerBackoffSecs",
      "type",
      "uuid",
      "webhookUrl"
    ],
    "POST /api/rules/pauseRule": [
      "error",
      "errorMsg"
    ],
    "POST /api/rules/updateRule": [
      "error",
      "errorMsg"
    ],
    "POST /api/rulesRecords/getLatestRulesEventRecords": [
      "activities",
      "alertMonitoringEventType",
      "audioClipUuid",
      "audioGatewayStatuses",
      "componentCompositeUuid",
      "componentUuid",
      "deviceType",
      "deviceUuid",
      "doorId",
      "eventUuid",
      "hardwareVariation",
      "integrationActionStatuses",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "placeId",
      "policyAlertUuid",
      "ruleUuid",
      "status",
      "succeeded",
      "system",
      "threatCaseUuid",
      "timestampMs",
      "triggeredTimestampMs",
      "uuid",
      "webhookActionStatuses"
    ],
    "POST /api/rulesRecords/getRulesEventRecords": [
      "activities",
      "alertMonitoringEventType",
      "audioClipUuid",
      "audioGatewayStatuses",
      "componentCompositeUuid",
      "componentUuid",
      "deviceType",
      "deviceUuid",
      "doorId",
      "eventUuid",
      "hardwareVariation",
      "integrationActionStatuses",
      "locationUuid",
      "lockdownPlanUuid",
      "orgUuid",
      "placeId",
      "policyAlertUuid",
      "ruleUuid",
      "status",
      "succeeded",
      "system",
      "threatCaseUuid",
      "timestampMs",
      "triggeredTimestampMs",
      "uuid",
      "webhookActionStatuses"
    ],
    "POST /api/schedule/createAbsoluteSchedule": [
      "error",
      "errorMsg",
      "scheduleUuid"
    ],
    "POST /api/schedule/createRelativeDateTimeIntervalsSchedule": [
      "error",
      "errorMsg",
      "scheduleUuid"
    ],
    "POST /api/schedule/createRelativeSchedule": [
      "error",
      "errorMsg",
      "scheduleUuid"
    ],
    "POST /api/schedule/createWeeklySchedule": [
      "error",
      "errorMsg",
      "scheduleUuid"
    ],
    "POST /api/schedule/deleteSchedule": [
      "error",
      "errorMsg"
    ],
    "POST /api/schedule/findAbsoluteSchedule": [
      "b",
      "e",
      "error",
      "errorMsg",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "uuid"
    ],
    "POST /api/schedule/findRelativeDateTimeIntervalsSchedule": [
      "error",
      "errorMsg",
      "localEndDateTime",
      "localStartDateTime",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "uuid"
    ],
    "POST /api/schedule/findRelativeSchedule": [
      "error",
      "errorMsg",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "pastSeconds",
      "strategy",
      "uuid"
    ],
    "POST /api/schedule/findWeeklySchedule": [
      "error",
      "errorMsg",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "strategy",
      "uuid"
    ],
    "POST /api/schedule/getSchedules": [
      "b",
      "e",
      "error",
      "errorMsg",
      "localEndDateTime",
      "localStartDateTime",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "mutable",
      "name",
      "oneTimeUse",
      "orgUuid",
      "pastSeconds",
      "strategy",
      "uuid"
    ],
    "POST /api/search/searchLicensePlates": [
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "imageS3Key",
      "locationUuid",
      "matchingLicensePlates",
      "name",
      "orgUuid",
      "partialLicensePlates",
      "searchMatchedTerm",
      "searchMatchedType",
      "thumbnailS3Key",
      "uuid",
      "vehicleLicensePlate"
    ],
    "POST /api/search/searchObjectsByColor": [
      "a",
      "al",
      "b",
      "cd",
      "cdn",
      "croppedImageLocator",
      "customActivityColor",
      "employeeName",
      "error",
      "errorMsg",
      "fn",
      "guid",
      "l",
      "loudness",
      "lp",
      "m",
      "objectId",
      "p",
      "r",
      "ro",
      "t",
      "totalAmount",
      "ts",
      "uf",
      "vn",
      "x",
      "y"
    ],
    "POST /api/sensors/getFootageSensorSeekpointsForCamera": [
      "a",
      "al",
      "cd",
      "cdn",
      "co2",
      "cu",
      "error",
      "errorMsg",
      "ethanol",
      "h",
      "hp",
      "iaq",
      "lu",
      "pm25",
      "probeTempC",
      "sn",
      "su",
      "t",
      "tc",
      "thcPercent",
      "ts",
      "tvoc",
      "vapeSmokePercent"
    ],
    "POST /api/sensors/getFootageSensorSeekpointsForLocation": [
      "a",
      "al",
      "cd",
      "cdn",
      "co2",
      "cu",
      "error",
      "errorMsg",
      "ethanol",
      "h",
      "hp",
      "iaq",
      "lu",
      "pm25",
      "probeTempC",
      "sn",
      "su",
      "t",
      "tc",
      "thcPercent",
      "ts",
      "tvoc",
      "vapeSmokePercent"
    ],
    "POST /api/sensors/getFootageSensorSeekpointsForSensor": [
      "a",
      "al",
      "cd",
      "cdn",
      "co2",
      "cu",
      "error",
      "errorMsg",
      "ethanol",
      "h",
      "hp",
      "iaq",
      "lu",
      "pm25",
      "probeTempC",
      "sn",
      "su",
      "t",
      "tc",
      "thcPercent",
      "ts",
      "tvoc",
      "vapeSmokePercent"
    ],
    "POST /api/share/camera/getCurrentState": [
      "baseVideoOperationUrl",
      "connectionStatus",
      "error",
      "errorMsg",
      "oldestArchivedMediaSeconds",
      "onCameraState",
      "onCloudState",
      "region"
    ],
    "POST /api/share/camera/getFootageBoundingBoxes": [
      "a",
      "al",
      "b",
      "cd",
      "cdn",
      "croppedImageLocator",
      "customActivityColor",
      "employeeName",
      "error",
      "errorMsg",
      "fn",
      "guid",
      "l",
      "loudness",
      "lp",
      "m",
      "objectId",
      "p",
      "r",
      "ro",
      "t",
      "totalAmount",
      "ts",
      "uf",
      "vn",
      "x",
      "y"
    ],
    "POST /api/share/camera/getFootageSeekpoints": [
      "a",
      "al",
      "b",
      "error",
      "errorMsg",
      "fn",
      "l",
      "lp",
      "p",
      "r",
      "ro",
      "t",
      "ts",
      "uf",
      "vn",
      "x",
      "y"
    ],
    "POST /api/share/camera/getFootageSeekpointsV2": [
      "a",
      "al",
      "cc",
      "cd",
      "cdn",
      "employeeName",
      "error",
      "errorMsg",
      "fn",
      "guid",
      "id",
      "loudness",
      "lp",
      "m",
      "p",
      "ro",
      "totalAmount",
      "ts",
      "tu",
      "uf",
      "vn"
    ],
    "POST /api/share/camera/getMediaUris": [
      "audioWanLiveMpdUri",
      "audioWanLiveOpusUri",
      "audioWanVodMpdUriTemplate",
      "error",
      "errorMsg",
      "wanLiveH264Uri",
      "wanLiveM3u8Uri",
      "wanLiveMpdUri",
      "wanVodM3u8UriTemplate",
      "wanVodMpdUriTemplate"
    ],
    "POST /api/share/camera/getPresenceWindows": [
      "durationSeconds",
      "error",
      "errorMsg",
      "startSeconds"
    ],
    "POST /api/share/camera/getSharedVideoWallMediaUris": [
      "error",
      "errorMsg",
      "wanLiveH264Uri",
      "wanLiveM3u8Uri",
      "wanLiveMpdUri",
      "wanVodM3u8UriTemplate",
      "wanVodMpdUriTemplate"
    ],
    "POST /api/share/clips/getSharedClipData": [
      "activity",
      "alert",
      "bottom",
      "croppedImageLocator",
      "customActivityColor",
      "customActivityDescription",
      "customActivityDisplayName",
      "description",
      "displayName",
      "dstsavings",
      "durationSec",
      "employeeName",
      "error",
      "errorMsg",
      "faceName",
      "guid",
      "id",
      "inMotion",
      "left",
      "licensePlate",
      "locationNameMap",
      "loudness",
      "objectId",
      "orgName",
      "pose",
      "publicClipUuid",
      "rawOffset",
      "region",
      "relativeSecond",
      "right",
      "startTime",
      "title",
      "top",
      "totalAmount",
      "tu",
      "unidentifiedFaceId",
      "vehicleName",
      "x",
      "y"
    ],
    "POST /api/share/face/getFacesV2": [
      "error",
      "errorMsg",
      "faceId",
      "name"
    ],
    "POST /api/share/getSharedLiveStreamInfo": [
      "aecEnabled",
      "audioPushToTalkEnabled",
      "displayName",
      "dstsavings",
      "error",
      "errorMsg",
      "fisheyeDisplayMode",
      "height",
      "hideOverlay",
      "hwVariation",
      "id",
      "locationName",
      "mountingDirection",
      "mutable",
      "name",
      "oldestSegmentSeconds",
      "oneTimeUse",
      "orgUuid",
      "pitchDegrees",
      "rawOffset",
      "rollDegrees",
      "strategy",
      "uuid",
      "verticalFieldOfViewDegrees",
      "vodEnabled",
      "width",
      "yawDegrees"
    ],
    "POST /api/share/getSharedVideoWallInfo": [
      "displayName",
      "dstsavings",
      "error",
      "errorMsg",
      "fisheyeDisplayMode",
      "height",
      "hwVariation",
      "id",
      "locationName",
      "mountingDirection",
      "name",
      "pitchDegrees",
      "rawOffset",
      "rollDegrees",
      "settings",
      "uuid",
      "verticalFieldOfViewDegrees",
      "vodEnabled",
      "width",
      "yawDegrees"
    ],
    "POST /api/share/sensors/getFootageSensorSeekpointsForCamera": [
      "a",
      "al",
      "cd",
      "cdn",
      "co2",
      "cu",
      "error",
      "errorMsg",
      "ethanol",
      "h",
      "hp",
      "iaq",
      "lu",
      "pm25",
      "probeTempC",
      "sn",
      "su",
      "t",
      "tc",
      "thcPercent",
      "ts",
      "tvoc",
      "vapeSmokePercent"
    ],
    "POST /api/share/shareLink": [
      "error",
      "errorMsg"
    ],
    "POST /api/share/timelapse/getSharedTimelapseClipData": [
      "description",
      "error",
      "errorMsg",
      "orgName"
    ],
    "POST /api/share/timelapse/getSharedTimelapseClipDataV2": [
      "description",
      "error",
      "errorMsg",
      "orgName",
      "publicTimelapseUuids",
      "title"
    ],
    "POST /api/supportAuthority/addSupportAuthority": [
      "authorityUuid",
      "error",
      "errorMsg"
    ],
    "POST /api/supportAuthority/allowSupportAuthorityAccess": [
      "error",
      "errorMsg"
    ],
    "POST /api/supportAuthority/findSupportAuthoritySessions": [
      "appName",
      "appOs",
      "appVersion",
      "city_name",
      "clientType",
      "country_code",
      "country_name",
      "currentSession",
      "error",
      "errorMsg",
      "lastActivityTimeMs",
      "lastIpAccessedFrom",
      "region_name",
      "userAgent"
    ],
    "POST /api/supportAuthority/getSupportAuthorities": [
      "authorityType",
      "authorityUuid",
      "createdAtMillis",
      "description",
      "error",
      "errorMsg",
      "expirationTimestamp",
      "grantedByUsername",
      "grantedToEmail",
      "grantedToInternalEntityUuid",
      "grantedToName",
      "loginAccessAllowed",
      "managedByMsp",
      "mobileAccessUrl",
      "orgUuid",
      "permissionGroupUuid",
      "webAccessUrl"
    ],
    "POST /api/supportAuthority/logoutAllSupportAuthoritySessions": [
      "error",
      "errorMsg"
    ],
    "POST /api/supportAuthority/lookupSupportPartnerAuthorities": [
      "contactEmail",
      "contactName",
      "error",
      "errorMsg",
      "name",
      "uuid"
    ],
    "POST /api/supportAuthority/removeSupportAuthority": [
      "error",
      "errorMsg"
    ],
    "POST /api/supportAuthority/revokeSupportAuthorityAccess": [
      "error",
      "errorMsg"
    ],
    "POST /api/supportAuthority/updateSupportAuthority": [
      "error",
      "errorMsg"
    ],
    "POST /api/tvos/getTvOsConfig": [
      "error",
      "errorMsg",
      "limitedVideoWallUuids",
      "orgUuid",
      "uuid"
    ],
    "POST /api/tvos/getTvOsConfigsForOrg": [
      "error",
      "errorMsg",
      "limitedVideoWallUuids",
      "orgUuid",
      "uuid"
    ],
    "POST /api/tvos/updateTvOsConfig": [
      "error",
      "errorMsg"
    ],
    "POST /api/user/changePassword": [
      "error",
      "errorMsg",
      "responseStatus"
    ],
    "POST /api/user/createUser": [
      "error",
      "errorMsg",
      "responseStatus",
      "userUuid"
    ],
    "POST /api/user/deleteUser": [
      "error",
      "errorMsg"
    ],
    "POST /api/user/deleteVirtualMfaDeviceForCurrentUser": [
      "error",
      "errorMsg"
    ],
    "POST /api/user/getImportUsersFormat": [
      "accessControlEnabled",
      "error",
      "errorMsg",
      "example",
      "explanation"
    ],
    "POST /api/user/getPartnerUsersInOrg": [
      "accessibleRhombusApps",
      "accountOwner",
      "activityTriggerMap",
      "allClientsSelected",
      "bypassSaml",
      "changePasswordOnLogin",
      "createdAtMillis",
      "deleted",
      "deviceFilterSet",
      "diagnosticTriggerMap",
      "email",
      "emailCaseSensitive",
      "emailVerified",
      "error",
      "errorMsg",
      "firstName",
      "groupUuid",
      "lastName",
      "locationFilterSet",
      "mfaEnabled",
      "mfaTokenType",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "name",
      "orgUserCustomizationFlags",
      "orgUuid",
      "passwordSet",
      "rhombusUserUuid",
      "smsPhoneNumbers",
      "status",
      "summaryEmailEnabled",
      "updatedAtMillis",
      "userUuid",
      "uuid"
    ],
    "POST /api/user/getRhombusKeyConfigForUser": [
      "bypassSaml",
      "createdAtMillis",
      "favoriteAccessControlledDoorUuids",
      "maxMobileCredsAllowed",
      "orgUuid",
      "remoteUnlockEnabled",
      "rhombusKeyAccessEnabled",
      "rhombusOrgUserUuid",
      "type",
      "updatedAtMillis"
    ],
    "POST /api/user/getUserCustomizationFlags": [
      "error",
      "errorMsg",
      "userCustomizations"
    ],
    "POST /api/user/getUsersInOrg": [
      "accessibleRhombusApps",
      "accountOwner",
      "activityTriggerMap",
      "bypassSaml",
      "changePasswordOnLogin",
      "createdAtMillis",
      "deleted",
      "deviceFilterSet",
      "diagnosticTriggerMap",
      "durationSecs",
      "email",
      "emailCaseSensitive",
      "emailVerified",
      "error",
      "errorMsg",
      "firstName",
      "groupUuid",
      "lastName",
      "locationFilterSet",
      "mfaEnabled",
      "mfaTokenType",
      "minuteOfWeekStart",
      "minuteOfWeekStop",
      "name",
      "orgUserCustomizationFlags",
      "orgUuid",
      "passwordSet",
      "rhombusUserUuid",
      "smsPhoneNumbers",
      "status",
      "summaryEmailEnabled",
      "timestampSec",
      "updatedAtMillis",
      "userUuid",
      "uuid"
    ],
    "POST /api/user/getVirtualMfaDeviceForCurrentUser": [
      "createdAtMillis",
      "error",
      "errorMsg"
    ],
    "POST /api/user/importUsers": [
      "error",
      "errorMsg",
      "messages"
    ],
    "POST /api/user/sendMobileDownloadSMS": [
      "error",
      "errorMsg"
    ],
    "POST /api/user/sendPartnerAccessGranted": [
      "error",
      "errorMsg"
    ],
    "POST /api/user/sendRhombusKeyUserWelcomeEmail": [
      "error",
      "errorMsg"
    ],
    "POST /api/user/sendUserWelcomeEmail": [
      "error",
      "errorMsg"
    ],
    "POST /api/user/setupVirtualMfaDeviceForCurrentUser": [
      "alreadyExists",
      "error",
      "errorMsg",
      "qrCodeSetupData",
      "success"
    ],
    "POST /api/user/updatePartnerUser": [
      "error",
      "errorMsg"
    ],
    "POST /api/user/updateRhombusKeySettingsForUser": [
      "bypassSaml",
      "createdAtMillis",
      "favoriteAccessControlledDoorUuids",
      "maxMobileCredsAllowed",
      "orgUuid",
      "remoteUnlockEnabled",
      "rhombusKeyAccessEnabled",
      "rhombusOrgUserUuid",
      "type",
      "updatedAtMillis"
    ],
    "POST /api/user/updateUser": [
      "error",
      "errorMsg"
    ],
    "POST /api/user/updateUserCustomizationFlags": [
      "error",
      "errorMsg"
    ],
    "POST /api/vehicle/addVehicleLabel": [
      "error",
      "errorMsg"
    ],
    "POST /api/vehicle/associateEventsToVehicle": [
      "error",
      "errorMsg"
    ],
    "POST /api/vehicle/deleteVehicle": [
      "error",
      "errorMsg"
    ],
    "POST /api/vehicle/getRecentVehicleEvents": [
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "imageS3Key",
      "locationUuid",
      "matchingLicensePlates",
      "name",
      "orgUuid",
      "partialLicensePlates",
      "thumbnailS3Key",
      "uuid",
      "vehicleLicensePlate"
    ],
    "POST /api/vehicle/getRecentVehicleEventsByLocation": [
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "imageS3Key",
      "locationUuid",
      "matchingLicensePlates",
      "name",
      "orgUuid",
      "partialLicensePlates",
      "thumbnailS3Key",
      "uuid",
      "vehicleLicensePlate"
    ],
    "POST /api/vehicle/getRecentVehicleEventsForVehicle": [
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "imageS3Key",
      "locationUuid",
      "matchingLicensePlates",
      "name",
      "orgUuid",
      "partialLicensePlates",
      "thumbnailS3Key",
      "uuid",
      "vehicleLicensePlate"
    ],
    "POST /api/vehicle/getVehicleEvents": [
      "deviceUuid",
      "error",
      "errorMsg",
      "eventTimestamp",
      "imageS3Key",
      "locationUuid",
      "matchingLicensePlates",
      "name",
      "orgUuid",
      "partialLicensePlates",
      "thumbnailS3Key",
      "uuid",
      "vehicleLicensePlate"
    ],
    "POST /api/vehicle/getVehicleLabelsForOrg": [
      "error",
      "errorMsg",
      "vehicleLabels"
    ],
    "POST /api/vehicle/getVehicles": [
      "alert",
      "createdAtMillis",
      "description",
      "error",
      "errorMsg",
      "licensePlate",
      "name",
      "orgUuid",
      "thumbnailS3Key",
      "trust"
    ],
    "POST /api/vehicle/removeVehicleLabel": [
      "error",
      "errorMsg"
    ],
    "POST /api/vehicle/reportVehicleEvent": [
      "collectedMediaForTraining",
      "error",
      "errorMsg"
    ],
    "POST /api/vehicle/saveVehicle": [
      "error",
      "errorMsg"
    ],
    "POST /api/video/cancelSplice": [
      "error",
      "errorMsg"
    ],
    "POST /api/video/cancelSpliceV2": [
      "error",
      "errorMsg"
    ],
    "POST /api/video/createSharedTimelapseGroup": [
      "error",
      "errorMsg",
      "shareUrl",
      "uuid"
    ],
    "POST /api/video/deleteSharedTimelapseGroup": [
      "error",
      "errorMsg"
    ],
    "POST /api/video/deleteTimelapseClips": [
      "error",
      "errorMsg"
    ],
    "POST /api/video/generateTimelapseClip": [
      "clipUuid",
      "error",
      "errorMsg"
    ],
    "POST /api/video/getExactFrameUri": [
      "error",
      "errorMsg",
      "frameUri",
      "responseMessage"
    ],
    "POST /api/video/getMaxSpliceDuration": [
      "error",
      "errorMsg",
      "maxDuration"
    ],
    "POST /api/video/getSharedTimelapseGroups": [
      "clipDuration",
      "clipFormat",
      "createdAtMillis",
      "description",
      "deviceUuid",
      "error",
      "errorMsg",
      "expirationTimeSecs",
      "isSecured",
      "orgUuid",
      "title",
      "uuid",
      "videoStartTime",
      "videoStopTime"
    ],
    "POST /api/video/getSplicedClipsInProgress": [
      "analyzeClip",
      "clipUuid",
      "consoleDelete",
      "deleted",
      "description",
      "deviceUuid",
      "duration",
      "error",
      "errorMsg",
      "height",
      "integrationUploadList",
      "isPolicyEvent",
      "metadataBucketRegion",
      "orgUuid",
      "pitchDegrees",
      "region",
      "rollDegrees",
      "saveClip",
      "saveFrame",
      "saveToDrive",
      "segmentsUploaded",
      "startTime",
      "status",
      "thumbnailRelativeSecond",
      "timestampMs",
      "title",
      "totalSegments",
      "transactionUuid",
      "verticalFieldOfViewDegrees",
      "width",
      "x",
      "y",
      "yawDegrees"
    ],
    "POST /api/video/getTimelapseClips": [
      "clipCreationTime",
      "clipDuration",
      "clipFormat",
      "clipUuid",
      "description",
      "deviceUuid",
      "drawCameraDetails",
      "drawTimestamp",
      "drawWatermark",
      "error",
      "errorMsg",
      "orgUuid",
      "passwordDigest",
      "percentComplete",
      "shared",
      "skipNights",
      "skipNonBusinessHours",
      "skipWeekends",
      "state",
      "videoStartTime",
      "videoStopTime"
    ],
    "POST /api/video/getTimelapseMetadata": [
      "earliestTimestampMap",
      "error",
      "errorMsg"
    ],
    "POST /api/video/retrySplice": [
      "error",
      "errorMsg"
    ],
    "POST /api/video/shareTimelapseClips": [
      "error",
      "errorMsg",
      "shareUrlMap"
    ],
    "POST /api/video/splice": [
      "clipUuid",
      "error",
      "errorMsg"
    ],
    "POST /api/video/spliceFrame": [
      "clipUuid",
      "error",
      "errorMsg",
      "region"
    ],
    "POST /api/video/spliceV2": [
      "clipUuid",
      "error",
      "errorMsg"
    ],
    "POST /api/video/spliceV3": [
      "clipUuid",
      "clipUuidList",
      "error",
      "errorMsg"
    ],
    "POST /api/video/updateSharedTimelapseGroup": [
      "error",
      "errorMsg",
      "shareUrl",
      "uuid"
    ]
  }
}